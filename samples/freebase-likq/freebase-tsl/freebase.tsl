cell type_object
{
    u8string mid;
    List<ushort> types;
    optional List<u8string> type_object_type;
    optional List<u8string> type_object_key;
    optional u8string type_object_id;
    [GraphEdge]
    optional CellId type_object_permission;
    optional u8string type_object_name;
}
cell american_football_football_coach
{
    [GraphEdge]
    optional List<CellId> american_football_football_coach_coaching_history;
    [GraphEdge]
    optional CellId american_football_football_coach_current_team_head_coached;
}
cell american_football_football_coach_position
{
    [GraphEdge]
    optional List<CellId> american_football_football_coach_position_coaches_holding_this_position;
}
cell american_football_football_conference
{
    [GraphEdge]
    optional List<CellId> american_football_football_conference_teams;
    [GraphEdge]
    optional List<CellId> american_football_football_conference_divisions;
    [GraphEdge]
    optional CellId american_football_football_conference_league;
}
cell american_football_football_division
{
    [GraphEdge]
    optional List<CellId> american_football_football_division_teams;
    [GraphEdge]
    optional CellId american_football_football_division_conference;
}
cell american_football_football_game
{
    [GraphEdge]
    optional List<CellId> american_football_football_game_rushing;
    [GraphEdge]
    optional List<CellId> american_football_football_game_receiving;
    [GraphEdge]
    optional List<CellId> american_football_football_game_game_scores;
    [GraphEdge]
    optional List<CellId> american_football_football_game_passing;
    [GraphEdge]
    optional CellId american_football_football_game_away_team;
    [GraphEdge]
    optional CellId american_football_football_game_home_team;
    [GraphEdge]
    optional CellId american_football_football_game_season;
}
cell american_football_football_game_score
{
    [GraphEdge]
    optional CellId american_football_football_game_score_team;
    [GraphEdge]
    optional CellId american_football_football_game_score_game;
    optional byte american_football_football_game_score_score;
}
cell american_football_football_historical_coach_position
{
    [GraphEdge]
    optional CellId american_football_football_historical_coach_position_coach;
    [GraphEdge]
    optional CellId american_football_football_historical_coach_position_team;
    [GraphEdge]
    optional CellId american_football_football_historical_coach_position_position;
}
cell american_football_football_player
{
    [GraphEdge]
    optional List<CellId> american_football_football_player_rushing;
    [GraphEdge]
    optional List<CellId> american_football_football_player_passing;
    [GraphEdge]
    optional List<CellId> american_football_football_player_position_s;
    [GraphEdge]
    optional List<CellId> american_football_football_player_receiving;
    [GraphEdge]
    optional List<CellId> american_football_football_player_forty_yard_dash_time;
    [GraphEdge]
    optional List<CellId> american_football_football_player_games;
    optional u8string american_football_football_player_footballdb_id;
}
cell american_football_football_team
{
    [GraphEdge]
    optional List<CellId> american_football_football_team_away_games;
    [GraphEdge]
    optional List<CellId> american_football_football_team_home_games;
    [GraphEdge]
    optional CellId american_football_football_team_current_head_coach;
    [GraphEdge]
    optional List<CellId> american_football_football_team_historical_coaching_staff;
    [GraphEdge]
    optional CellId american_football_football_team_division;
    [GraphEdge]
    optional CellId american_football_football_team_conference;
}
cell american_football_forty_yard_dash_time
{
    optional float american_football_forty_yard_dash_time_time;
}
cell american_football_game_passing_statistics
{
    [GraphEdge]
    optional CellId american_football_game_passing_statistics_game;
    optional byte american_football_game_passing_statistics_interceptions;
    optional byte american_football_game_passing_statistics_completions;
    [GraphEdge]
    optional CellId american_football_game_passing_statistics_team;
    optional byte american_football_game_passing_statistics_attempts;
    optional float american_football_game_passing_statistics_yards;
    [GraphEdge]
    optional CellId american_football_game_passing_statistics_player;
    optional float american_football_game_passing_statistics_longest_completion;
    optional float american_football_game_passing_statistics_rating;
    optional byte american_football_game_passing_statistics_touchdowns;
    optional u8string american_football_game_passing_statistics_touchdown_on_longest_pass;
}
cell american_football_game_receiving_statistics
{
    [GraphEdge]
    optional CellId american_football_game_receiving_statistics_player;
    optional float american_football_game_receiving_statistics_yards;
    [GraphEdge]
    optional CellId american_football_game_receiving_statistics_team;
    optional u8string american_football_game_receiving_statistics_touchdown_on_longest_reception;
    optional byte american_football_game_receiving_statistics_touchdowns;
    optional float american_football_game_receiving_statistics_longest;
    optional byte american_football_game_receiving_statistics_receptions;
    [GraphEdge]
    optional CellId american_football_game_receiving_statistics_game;
}
cell american_football_game_rushing_statistics
{
    optional u8string american_football_game_rushing_statistics_touchdown_on_longest_carry;
    [GraphEdge]
    optional CellId american_football_game_rushing_statistics_team;
    [GraphEdge]
    optional CellId american_football_game_rushing_statistics_player;
    optional float american_football_game_rushing_statistics_yards;
    optional byte american_football_game_rushing_statistics_carries;
    optional byte american_football_game_rushing_statistics_touchdowns;
    optional float american_football_game_rushing_statistics_longest;
    [GraphEdge]
    optional CellId american_football_game_rushing_statistics_game;
}
cell american_football_nfl_game
{
    optional byte american_football_nfl_game_week;
}
cell american_football_player_game_statistics
{
    [GraphEdge]
    optional CellId american_football_player_game_statistics_player;
    optional byte american_football_player_game_statistics_games;
    [GraphEdge]
    optional CellId american_football_player_game_statistics_season;
    optional byte american_football_player_game_statistics_as_of_week;
    optional byte american_football_player_game_statistics_starts;
    [GraphEdge]
    optional CellId american_football_player_game_statistics_team;
}
cell american_football_player_passing_statistics
{
    [GraphEdge]
    optional CellId american_football_player_passing_statistics_player;
    [GraphEdge]
    optional CellId american_football_player_passing_statistics_team;
    optional byte american_football_player_passing_statistics_interceptions;
    optional ushort american_football_player_passing_statistics_attempts;
    optional byte american_football_player_passing_statistics_touchdowns;
    optional byte american_football_player_passing_statistics_completions;
    [GraphEdge]
    optional CellId american_football_player_passing_statistics_season;
    optional float american_football_player_passing_statistics_yards;
    optional byte american_football_player_passing_statistics_as_of_week;
}
cell american_football_player_receiving_statistics
{
    optional float american_football_player_receiving_statistics_yards;
    [GraphEdge]
    optional CellId american_football_player_receiving_statistics_season;
    optional byte american_football_player_receiving_statistics_touchdowns;
    optional byte american_football_player_receiving_statistics_as_of_week;
    optional byte american_football_player_receiving_statistics_receptions;
    optional float american_football_player_receiving_statistics_longest;
    [GraphEdge]
    optional CellId american_football_player_receiving_statistics_player;
    [GraphEdge]
    optional CellId american_football_player_receiving_statistics_team;
    optional u8string american_football_player_receiving_statistics_touchdown_on_longest_reception;
}
cell american_football_player_rushing_statistics
{
    optional u8string american_football_player_rushing_statistics_touchdown_on_longest_carry;
    [GraphEdge]
    optional CellId american_football_player_rushing_statistics_team;
    optional byte american_football_player_rushing_statistics_touchdowns;
    optional byte american_football_player_rushing_statistics_as_of_week;
    [GraphEdge]
    optional CellId american_football_player_rushing_statistics_player;
    optional byte american_football_player_rushing_statistics_carries;
    optional float american_football_player_rushing_statistics_longest;
    [GraphEdge]
    optional CellId american_football_player_rushing_statistics_season;
    optional float american_football_player_rushing_statistics_yards;
}
cell amusement_parks_accident
{
    optional byte amusement_parks_accident_deaths;
    [GraphEdge]
    optional CellId amusement_parks_accident_ride;
    optional byte amusement_parks_accident_injuries;
}
cell amusement_parks_amusement_park_area
{
    [GraphEdge]
    optional List<CellId> amusement_parks_amusement_park_area_rides;
    [GraphEdge]
    optional List<CellId> amusement_parks_amusement_park_area_parks;
}
cell amusement_parks_disney_ride
{
    [GraphEdge]
    optional List<CellId> amusement_parks_disney_ride_ticket;
}
cell amusement_parks_disney_ride_ticket
{
    [GraphEdge]
    optional List<CellId> amusement_parks_disney_ride_ticket_rides;
}
cell amusement_parks_disney_ride_ticket_membership
{
    [GraphEdge]
    optional CellId amusement_parks_disney_ride_ticket_membership_ride;
    [GraphEdge]
    optional CellId amusement_parks_disney_ride_ticket_membership_ticket;
}
cell amusement_parks_park
{
    [GraphEdge]
    optional List<CellId> amusement_parks_park_areas;
    optional List<u8string> amusement_parks_park_rides;
    optional List<ushort> amusement_parks_park_rcdb_id;
    [GraphEdge]
    optional List<CellId> amusement_parks_park_annual_visits;
}
cell amusement_parks_ride
{
    [GraphEdge]
    optional List<CellId> amusement_parks_ride_accidents;
    optional float amusement_parks_ride_duration;
    optional float amusement_parks_ride_height_restriction;
    [GraphEdge]
    optional List<CellId> amusement_parks_ride_designer;
    optional float amusement_parks_ride_max_speed;
    [GraphEdge]
    optional CellId amusement_parks_ride_park;
    [GraphEdge]
    optional CellId amusement_parks_ride_area;
    [GraphEdge]
    optional CellId amusement_parks_ride_ride_type;
    [GraphEdge]
    optional CellId amusement_parks_ride_manufacturer;
    optional byte amusement_parks_ride_inversions;
    optional float amusement_parks_ride_height;
    [GraphEdge]
    optional List<CellId> amusement_parks_ride_theme;
    optional float amusement_parks_ride_max_g;
    optional float amusement_parks_ride_drop;
    [GraphEdge]
    optional CellId amusement_parks_ride_cost;
    optional ushort amusement_parks_ride_capacity;
    [GraphEdge]
    optional CellId amusement_parks_ride_includes_film;
}
cell amusement_parks_ride_designer
{
    [GraphEdge]
    optional List<CellId> amusement_parks_ride_designer_rides;
}
cell amusement_parks_ride_manufacturer
{
    optional List<u8string> amusement_parks_ride_manufacturer_rides;
}
cell amusement_parks_ride_theme
{
    [GraphEdge]
    optional List<CellId> amusement_parks_ride_theme_rides;
}
cell amusement_parks_ride_type
{
    [GraphEdge]
    optional List<CellId> amusement_parks_ride_type_rides;
}
cell amusement_parks_roller_coaster
{
    optional List<ushort> amusement_parks_roller_coaster_rcdb_id;
    [GraphEdge]
    optional CellId amusement_parks_roller_coaster_propulsion;
    optional float amusement_parks_roller_coaster_track_length;
    [GraphEdge]
    optional CellId amusement_parks_roller_coaster_train_configuration;
    [GraphEdge]
    optional CellId amusement_parks_roller_coaster_material;
}
cell amusement_parks_roller_coaster_material
{
    optional List<u8string> amusement_parks_roller_coaster_material_roller_coasters;
}
cell amusement_parks_roller_coaster_propulsion_system
{
    optional List<u8string> amusement_parks_roller_coaster_propulsion_system_roller_coasters;
}
cell amusement_parks_roller_coaster_train_configuration
{
    optional List<u8string> amusement_parks_roller_coaster_train_configuration_roller_coasters;
}
cell architecture_architect
{
    optional byte architecture_architect_structure_count;
    [GraphEdge]
    optional List<CellId> architecture_architect_architectural_style;
    [GraphEdge]
    optional List<CellId> architecture_architect_structures_designed;
}
cell architecture_architectural_contractor
{
    [GraphEdge]
    optional List<CellId> architecture_architectural_contractor_projects;
}
cell architecture_architectural_structure_owner
{
    [GraphEdge]
    optional List<CellId> architecture_architectural_structure_owner_structures_owned;
}
cell architecture_architectural_style
{
    [GraphEdge]
    optional List<CellId> architecture_architectural_style_architects;
    optional List<u8string> architecture_architectural_style_examples;
}
cell architecture_architecture_firm
{
    [GraphEdge]
    optional List<CellId> architecture_architecture_firm_firm_partners;
    [GraphEdge]
    optional List<CellId> architecture_architecture_firm_projects;
}
cell architecture_architecture_firm_partners
{
    [GraphEdge]
    optional List<CellId> architecture_architecture_firm_partners_partner_in_firm;
}
cell architecture_building
{
    [GraphEdge]
    optional List<CellId> architecture_building_occupant;
    [GraphEdge]
    optional List<CellId> architecture_building_building_function;
    optional byte architecture_building_floors;
    optional float architecture_building_floor_space_square_meters;
    [GraphEdge]
    optional List<CellId> architecture_building_building_complex;
}
cell architecture_building_complex
{
    [GraphEdge]
    optional List<CellId> architecture_building_complex_buildings_in_complex;
    optional float architecture_building_complex_floor_space_square_meters;
    [GraphEdge]
    optional List<CellId> architecture_building_complex_complex_function;
}
cell architecture_building_complex_function
{
    [GraphEdge]
    optional List<CellId> architecture_building_complex_function_building_complexes;
}
cell architecture_building_function
{
    [GraphEdge]
    optional List<CellId> architecture_building_function_buildings;
}
cell architecture_building_occupant
{
    [GraphEdge]
    optional List<CellId> architecture_building_occupant_buildings_occupied;
}
cell architecture_destruction_method
{
    [GraphEdge]
    optional List<CellId> architecture_destruction_method_structures_destroyed;
}
cell architecture_engineer
{
    [GraphEdge]
    optional List<CellId> architecture_engineer_projects;
    [GraphEdge]
    optional List<CellId> architecture_engineer_partner_in_firm;
}
cell architecture_engineering_firm
{
    [GraphEdge]
    optional CellId architecture_engineering_firm_partners;
    [GraphEdge]
    optional List<CellId> architecture_engineering_firm_projects;
}
cell architecture_landscape_architect
{
    [GraphEdge]
    optional List<CellId> architecture_landscape_architect_landscape_project;
}
cell architecture_landscape_project
{
    [GraphEdge]
    optional CellId architecture_landscape_project_construction_cost;
    [GraphEdge]
    optional CellId architecture_landscape_project_address;
    [GraphEdge]
    optional List<CellId> architecture_landscape_project_landscape_architect;
}
cell architecture_light_attributes
{
    optional u8string architecture_light_attributes_remarks;
    [GraphEdge]
    optional CellId architecture_light_attributes_light_type;
    [GraphEdge]
    optional CellId architecture_light_attributes_lighthouse_having_attributes;
    optional float architecture_light_attributes_sequence_duration;
}
cell architecture_light_characteristic
{
    [GraphEdge]
    optional List<CellId> architecture_light_characteristic_lighthouse_having_characteristics;
}
cell architecture_light_color_range
{
    [GraphEdge]
    optional CellId architecture_light_color_range_lighthouse_having_color_ranges;
    [GraphEdge]
    optional CellId architecture_light_color_range_color;
    optional float architecture_light_color_range_light_range;
}
cell architecture_light_sequence
{
    optional float architecture_light_sequence_flash_secs;
    optional float architecture_light_sequence_eclipse_secs_dark;
    optional byte architecture_light_sequence_seq_num;
}
cell architecture_lighthouse
{
    optional u8string architecture_lighthouse_admiralty_number;
    optional u8string architecture_lighthouse_arlhs_number;
    [GraphEdge]
    optional List<CellId> architecture_lighthouse_light_sequence;
    [GraphEdge]
    optional List<CellId> architecture_lighthouse_light_color_range;
    optional float architecture_lighthouse_focal_height_of_light;
    [GraphEdge]
    optional CellId architecture_lighthouse_light_attributes;
    optional u8string architecture_lighthouse_nga_number;
    [GraphEdge]
    optional List<CellId> architecture_lighthouse_tower_shape;
    [GraphEdge]
    optional List<CellId> architecture_lighthouse_construction;
    optional float architecture_lighthouse_intensity;
}
cell architecture_lighthouse_construction_material
{
    [GraphEdge]
    optional List<CellId> architecture_lighthouse_construction_material_used_on_lighthouse;
}
cell architecture_museum
{
    [GraphEdge]
    optional List<CellId> architecture_museum_director;
    [GraphEdge]
    optional List<CellId> architecture_museum_visitors;
    [GraphEdge]
    optional List<CellId> architecture_museum_address;
    [GraphEdge]
    optional List<CellId> architecture_museum_type_of_museum;
}
cell architecture_museum_director
{
    [GraphEdge]
    optional List<CellId> architecture_museum_director_museum;
}
cell architecture_occupancy
{
    [GraphEdge]
    optional CellId architecture_occupancy_building;
    [GraphEdge]
    optional CellId architecture_occupancy_occupant;
}
cell architecture_ownership
{
    [GraphEdge]
    optional CellId architecture_ownership_owner;
    [GraphEdge]
    optional CellId architecture_ownership_structure;
}
cell architecture_skyscraper
{
    optional float architecture_skyscraper_height_with_antenna_spire_meters;
}
cell architecture_structure
{
    optional List<u8string> architecture_structure_engineering_firm;
    [GraphEdge]
    optional List<CellId> architecture_structure_owner;
    [GraphEdge]
    optional List<CellId> architecture_structure_engineer;
    [GraphEdge]
    optional List<CellId> architecture_structure_architectural_style;
    [GraphEdge]
    optional List<CellId> architecture_structure_architect;
    [GraphEdge]
    optional CellId architecture_structure_construction_cost;
    [GraphEdge]
    optional List<CellId> architecture_structure_destroyed_by;
    optional float architecture_structure_height_meters;
    [GraphEdge]
    optional List<CellId> architecture_structure_contractor;
    [GraphEdge]
    optional List<CellId> architecture_structure_architecture_firm;
}
cell architecture_tower_shape
{
    [GraphEdge]
    optional List<CellId> architecture_tower_shape_lighthouse_has_shape;
}
cell architecture_type_of_museum
{
    [GraphEdge]
    optional List<CellId> architecture_type_of_museum_museums;
}
cell architecture_venue
{
    optional ushort architecture_venue_capacity;
}
cell astronomy_apparent_dimension
{
    optional float astronomy_apparent_dimension_major_axis;
    optional float astronomy_apparent_dimension_minor_axis;
}
cell astronomy_apparent_mass
{
    optional float astronomy_apparent_mass_mass;
    optional float astronomy_apparent_mass_uncertainty;
}
cell astronomy_asterism
{
    [GraphEdge]
    optional List<CellId> astronomy_asterism_constellations;
    [GraphEdge]
    optional List<CellId> astronomy_asterism_stars;
}
cell astronomy_asteroid
{
    [GraphEdge]
    optional CellId astronomy_asteroid_member_of_asteroid_group;
    [GraphEdge]
    optional CellId astronomy_asteroid_spectral_type;
    [GraphEdge]
    optional CellId astronomy_asteroid_member_of_asteroid_family;
}
cell astronomy_asteroid_family
{
    [GraphEdge]
    optional CellId astronomy_asteroid_family_founding_asteroid_family_member;
    [GraphEdge]
    optional List<CellId> astronomy_asteroid_family_asteroid_family_member;
}
cell astronomy_asteroid_group
{
    [GraphEdge]
    optional CellId astronomy_asteroid_group_asteroid_group_founding_member;
    optional List<u8string> astronomy_asteroid_group_asteroid_group_members;
}
cell astronomy_asteroid_spectral_type
{
    [GraphEdge]
    optional List<CellId> astronomy_asteroid_spectral_type_asteroids_of_this_type;
}
cell astronomy_astronomer
{
    optional List<u8string> astronomy_astronomer_astronomical_objects_discovered;
}
cell astronomy_astronomical_discovery
{
    [GraphEdge]
    optional List<CellId> astronomy_astronomical_discovery_discovery_site;
    [GraphEdge]
    optional List<CellId> astronomy_astronomical_discovery_discovery_organization;
    [GraphEdge]
    optional List<CellId> astronomy_astronomical_discovery_discoverer;
    [GraphEdge]
    optional CellId astronomy_astronomical_discovery_status;
    [GraphEdge]
    optional List<CellId> astronomy_astronomical_discovery_discovery_technique;
}
cell astronomy_astronomical_discovery_status
{
    [GraphEdge]
    optional List<CellId> astronomy_astronomical_discovery_status_objects;
}
cell astronomy_astronomical_discovery_technique
{
    optional List<u8string> astronomy_astronomical_discovery_technique_astronomical_discoveries_by_this_method;
}
cell astronomy_astronomical_observatory
{
    [GraphEdge]
    optional List<CellId> astronomy_astronomical_observatory_discoveries;
    [GraphEdge]
    optional List<CellId> astronomy_astronomical_observatory_telescope_s;
}
cell astronomy_astronomical_survey_project_organization
{
    optional List<u8string> astronomy_astronomical_survey_project_organization_celestial_objects_discovered;
    [GraphEdge]
    optional List<CellId> astronomy_astronomical_survey_project_organization_observatory;
}
cell astronomy_celestial_object
{
    optional List<u8string> astronomy_celestial_object_locations;
    optional float astronomy_celestial_object_color_index;
    [GraphEdge]
    optional CellId astronomy_celestial_object_celestial_age;
    [GraphEdge]
    optional List<CellId> astronomy_celestial_object_category;
    optional float astronomy_celestial_object_cosmological_distance;
    optional float astronomy_celestial_object_magnitude;
    optional float astronomy_celestial_object_decllnation;
    optional float astronomy_celestial_object_right_ascention;
    optional uint astronomy_celestial_object_hipparcos_catalog_number;
    optional float astronomy_celestial_object_absolute_magnitude;
    [GraphEdge]
    optional List<CellId> astronomy_celestial_object_artificial_satellites;
}
cell astronomy_celestial_object_age
{
    optional float astronomy_celestial_object_age_uncertainty;
    optional float astronomy_celestial_object_age_age;
}
cell astronomy_celestial_object_category
{
    [GraphEdge]
    optional List<CellId> astronomy_celestial_object_category_subcategories;
    [GraphEdge]
    optional List<CellId> astronomy_celestial_object_category_objects;
    [GraphEdge]
    optional List<CellId> astronomy_celestial_object_category_subcategory_of;
}
cell astronomy_celestial_object_with_coordinate_system
{
    [GraphEdge]
    optional List<CellId> astronomy_celestial_object_with_coordinate_system_planetographic_coordinate_system;
}
cell astronomy_comet
{
    optional u8string astronomy_comet_designation;
    [GraphEdge]
    optional List<CellId> astronomy_comet_meteor_shower_spawned;
    [GraphEdge]
    optional CellId astronomy_comet_comet_group;
}
cell astronomy_comet_group
{
    optional List<u8string> astronomy_comet_group_comet;
}
cell astronomy_constellation
{
    optional List<u8string> astronomy_constellation_contains;
    [GraphEdge]
    optional List<CellId> astronomy_constellation_bordering_constellations_new;
    optional List<u8string> astronomy_constellation_galaxies_observed_in_constellation;
    optional List<u8string> astronomy_constellation_meteor_showers;
}
cell astronomy_constellation_bordering_relationship
{
    [GraphEdge]
    optional List<CellId> astronomy_constellation_bordering_relationship_constellations;
}
cell astronomy_dwarf_planet
{
    [GraphEdge]
    optional CellId astronomy_dwarf_planet_star_system;
}
cell astronomy_extraterrestrial_location
{
    [GraphEdge]
    optional CellId astronomy_extraterrestrial_location_on_celestial_object;
    [GraphEdge]
    optional List<CellId> astronomy_extraterrestrial_location_type_of_planetographic_feature;
    [GraphEdge]
    optional List<CellId> astronomy_extraterrestrial_location_contains;
    [GraphEdge]
    optional CellId astronomy_extraterrestrial_location_geolocation;
    [GraphEdge]
    optional CellId astronomy_extraterrestrial_location_contained_by;
}
cell astronomy_galactic_cluster
{
    [GraphEdge]
    optional CellId astronomy_galactic_cluster_galaxy_supercluster;
    [GraphEdge]
    optional CellId astronomy_galactic_cluster_galaxy_groups;
}
cell astronomy_galactic_filament
{
    [GraphEdge]
    optional CellId astronomy_galactic_filament_galaxy_superclusters;
}
cell astronomy_galactic_group
{
    [GraphEdge]
    optional List<CellId> astronomy_galactic_group_galaxies_in_group;
    [GraphEdge]
    optional CellId astronomy_galactic_group_galaxy_cluster;
}
cell astronomy_galactic_interaction
{
    optional float astronomy_galactic_interaction_when;
    [GraphEdge]
    optional CellId astronomy_galactic_interaction_interaction_type;
    optional List<u8string> astronomy_galactic_interaction_galaxy;
    [GraphEdge]
    optional CellId astronomy_galactic_interaction_status;
}
cell astronomy_galactic_interaction_status
{
    [GraphEdge]
    optional CellId astronomy_galactic_interaction_status_galactic_interactions;
}
cell astronomy_galactic_interaction_type
{
    [GraphEdge]
    optional List<CellId> astronomy_galactic_interaction_type_galaxy_s_interacting_this_way;
}
cell astronomy_galactic_shape
{
    [GraphEdge]
    optional List<CellId> astronomy_galactic_shape_galaxies_of_this_shape;
}
cell astronomy_galactic_super_cluster
{
    [GraphEdge]
    optional CellId astronomy_galactic_super_cluster_galaxy_clusters;
    [GraphEdge]
    optional CellId astronomy_galactic_super_cluster_galaxy_filament;
}
cell astronomy_galaxy
{
    [GraphEdge]
    optional CellId astronomy_galaxy_constellation;
    [GraphEdge]
    optional List<CellId> astronomy_galaxy_interaction;
    [GraphEdge]
    optional CellId astronomy_galaxy_diameter;
    [GraphEdge]
    optional List<CellId> astronomy_galaxy_satellite_galaxies;
    [GraphEdge]
    optional CellId astronomy_galaxy_galaxy_classification_hubble;
    [GraphEdge]
    optional CellId astronomy_galaxy_galactic_group;
    [GraphEdge]
    optional CellId astronomy_galaxy_apparent_mass;
    [GraphEdge]
    optional CellId astronomy_galaxy_number_of_stars;
}
cell astronomy_galaxy_classification_code
{
    [GraphEdge]
    optional List<CellId> astronomy_galaxy_classification_code_galaxy_shape;
    [GraphEdge]
    optional CellId astronomy_galaxy_classification_code_galaxies_of_this_code;
}
cell astronomy_meteor_shower
{
    optional u8string astronomy_meteor_shower_source_of_meteor_shower;
    [GraphEdge]
    optional CellId astronomy_meteor_shower_common_calendar_occurance;
    [GraphEdge]
    optional List<CellId> astronomy_meteor_shower_meteor_shower_observation;
    [GraphEdge]
    optional CellId astronomy_meteor_shower_radiant;
}
cell astronomy_meteor_shower_occurrence
{
    optional byte astronomy_meteor_shower_occurrence_zenith_hourly_rate;
}
cell astronomy_meteoric_composition
{
    [GraphEdge]
    optional List<CellId> astronomy_meteoric_composition_meteorites;
    optional u8string astronomy_meteoric_composition_notes;
}
cell astronomy_meteorite
{
    [GraphEdge]
    optional CellId astronomy_meteorite_institutional_specimen_location;
    [GraphEdge]
    optional CellId astronomy_meteorite_meteorite_fall_geolocation;
    [GraphEdge]
    optional CellId astronomy_meteorite_meteorite_fall_location;
    [GraphEdge]
    optional CellId astronomy_meteorite_meteorite_composition;
    [GraphEdge]
    optional CellId astronomy_meteorite_meteorite_observer;
    [GraphEdge]
    optional CellId astronomy_meteorite_source_celestial_body;
    [GraphEdge]
    optional List<CellId> astronomy_meteorite_meteorite_discovery_location;
    optional u8string astronomy_meteorite_meteorite_surface_crater_earth;
    optional float astronomy_meteorite_meteorite_mass;
}
cell astronomy_meteorite_source
{
    [GraphEdge]
    optional CellId astronomy_meteorite_source_meteorites;
}
cell astronomy_near_earth_object
{
    [GraphEdge]
    optional CellId astronomy_near_earth_object_near_earth_object_classification;
}
cell astronomy_near_earth_object_classification
{
    optional List<u8string> astronomy_near_earth_object_classification_near_earth_objects;
}
cell astronomy_number_of_stars
{
    optional ulong astronomy_number_of_stars_stars;
}
cell astronomy_orbit_type
{
    [GraphEdge]
    optional List<CellId> astronomy_orbit_type_orbiting_bodies;
}
cell astronomy_orbital_relationship
{
    [GraphEdge]
    optional List<CellId> astronomy_orbital_relationship_orbit_type;
    [GraphEdge]
    optional List<CellId> astronomy_orbital_relationship_orbited_by;
    optional byte astronomy_orbital_relationship_orbital_order;
    optional float astronomy_orbital_relationship_semi_major_axis;
    optional float astronomy_orbital_relationship_periapsis;
    optional float astronomy_orbital_relationship_mean_orbital_speed;
    optional float astronomy_orbital_relationship_orbit_eccentricity;
    optional float astronomy_orbital_relationship_aoapsis;
    optional float astronomy_orbital_relationship_orbital_period;
    [GraphEdge]
    optional CellId astronomy_orbital_relationship_orbits;
    optional float astronomy_orbital_relationship_inclination;
    optional float astronomy_orbital_relationship_epoch;
}
cell astronomy_planetographic_coordinate
{
    optional float astronomy_planetographic_coordinate_elevation;
    optional float astronomy_planetographic_coordinate_longitude;
    optional float astronomy_planetographic_coordinate_latitude;
    [GraphEdge]
    optional CellId astronomy_planetographic_coordinate_extraterrestrial_location;
}
cell astronomy_planetographic_coordinate_system
{
    [GraphEdge]
    optional CellId astronomy_planetographic_coordinate_system_celestial_object;
    [GraphEdge]
    optional CellId astronomy_planetographic_coordinate_system_prime_meridian_feature;
}
cell astronomy_plutoid
{
    [GraphEdge]
    optional CellId astronomy_plutoid_star_system;
}
cell astronomy_satellite_galaxy
{
    [GraphEdge]
    optional CellId astronomy_satellite_galaxy_satellite_of_this_galaxy;
}
cell astronomy_spectral_type
{
    [GraphEdge]
    optional List<CellId> astronomy_spectral_type_celestial_objects_of_this_spectral_type;
}
cell astronomy_star
{
    [GraphEdge]
    optional CellId astronomy_star_spectral_type;
    optional float astronomy_star_rotation;
    optional uint astronomy_star_hipparcos_id;
    [GraphEdge]
    optional List<CellId> astronomy_star_planet_s;
    [GraphEdge]
    optional CellId astronomy_star_star_system;
    [GraphEdge]
    optional CellId astronomy_star_constellation;
    optional float astronomy_star_temperature_k;
    optional float astronomy_star_radius;
    optional float astronomy_star_mass_m;
    optional float astronomy_star_luminosity;
}
cell astronomy_star_system
{
    optional List<u8string> astronomy_star_system_planetary_system;
    [GraphEdge]
    optional List<CellId> astronomy_star_system_plutoids;
    [GraphEdge]
    optional List<CellId> astronomy_star_system_planets;
    [GraphEdge]
    optional List<CellId> astronomy_star_system_dwarf_planets;
    optional float astronomy_star_system_system_age;
    [GraphEdge]
    optional List<CellId> astronomy_star_system_stars;
    [GraphEdge]
    optional CellId astronomy_star_system_constellation;
}
cell astronomy_star_system_body
{
    optional float astronomy_star_system_body_absolute_magnitude;
    [GraphEdge]
    optional CellId astronomy_star_system_body_star_system;
}
cell astronomy_telescope
{
    [GraphEdge]
    optional CellId astronomy_telescope_operational_platform;
    [GraphEdge]
    optional CellId astronomy_telescope_type_of_telescope;
    [GraphEdge]
    optional CellId astronomy_telescope_housed_in;
    [GraphEdge]
    optional CellId astronomy_telescope_operational_period;
}
cell astronomy_telescope_platform
{
    [GraphEdge]
    optional List<CellId> astronomy_telescope_platform_telescopes_based_on_this;
}
cell astronomy_telescope_principle_type
{
    [GraphEdge]
    optional CellId astronomy_telescope_principle_type_telescopic_classifications_of_this_technique;
}
cell astronomy_telescope_type
{
    [GraphEdge]
    optional List<CellId> astronomy_telescope_type_telescopes_of_this_type;
    [GraphEdge]
    optional CellId astronomy_telescope_type_telescopic_principle;
    [GraphEdge]
    optional CellId astronomy_telescope_type_higher_classification;
    [GraphEdge]
    optional List<CellId> astronomy_telescope_type_lower_telescope_classification;
}
cell astronomy_trans_neptunian_object
{
    [GraphEdge]
    optional CellId astronomy_trans_neptunian_object_region;
}
cell astronomy_trans_neptunian_region
{
    [GraphEdge]
    optional CellId astronomy_trans_neptunian_region_trans_neptunian_objects;
}
cell astronomy_type_of_planetographic_feature
{
    [GraphEdge]
    optional CellId astronomy_type_of_planetographic_feature_includes;
    [GraphEdge]
    optional List<CellId> astronomy_type_of_planetographic_feature_planetographic_features_of_this_type;
    [GraphEdge]
    optional CellId astronomy_type_of_planetographic_feature_included_in;
}
cell atom_feed
{
    [GraphEdge]
    optional List<CellId> atom_feed_categories;
    [GraphEdge]
    optional List<CellId> atom_feed_items;
    [GraphEdge]
    optional List<CellId> atom_feed_author;
}
cell atom_feed_category
{
    optional u8string atom_feed_category_term;
}
cell atom_feed_item
{
    [GraphEdge]
    optional List<CellId> atom_feed_item_links;
    optional List<u8string> atom_feed_item_item_id;
    [GraphEdge]
    optional CellId atom_feed_item_feed;
    [GraphEdge]
    optional List<CellId> atom_feed_item_categories;
}
cell atom_feed_person
{
    optional ulong atom_feed_person_email;
}
cell automotive_automotive_class
{
    optional List<u8string> automotive_automotive_class_examples;
}
cell automotive_company
{
    [GraphEdge]
    optional List<CellId> automotive_company_manufacturing_plants;
    [GraphEdge]
    optional List<CellId> automotive_company_make_s;
}
cell automotive_designer
{
    [GraphEdge]
    optional List<CellId> automotive_designer_automobiles_designed;
}
cell automotive_engine
{
    optional u8string automotive_engine_forced_induction;
    [GraphEdge]
    optional CellId automotive_engine_make;
    [GraphEdge]
    optional List<CellId> automotive_engine_engine_type;
    optional float automotive_engine_size_in_liters;
    optional float automotive_engine_horsepower;
    optional float automotive_engine_torque_ft_lbs;
    [GraphEdge]
    optional List<CellId> automotive_engine_fuels_used;
    [GraphEdge]
    optional List<CellId> automotive_engine_fuel_delivery;
}
cell automotive_engine_type
{
    [GraphEdge]
    optional List<CellId> automotive_engine_type_used_in;
}
cell automotive_exterior_color
{
    optional u8string automotive_exterior_color_clear_coat;
    optional u8string automotive_exterior_color_color_code;
    optional u8string automotive_exterior_color_metallic;
}
cell automotive_fuel
{
    [GraphEdge]
    optional List<CellId> automotive_fuel_engines;
}
cell automotive_generation
{
    optional byte automotive_generation_generation_number;
    [GraphEdge]
    optional List<CellId> automotive_generation_successor;
    [GraphEdge]
    optional CellId automotive_generation_markets;
    [GraphEdge]
    optional List<CellId> automotive_generation_predecessor;
    [GraphEdge]
    optional List<CellId> automotive_generation_platforms;
    [GraphEdge]
    optional List<CellId> automotive_generation_models;
    [GraphEdge]
    optional List<CellId> automotive_generation_model;
    [GraphEdge]
    optional CellId automotive_generation_years_produced;
    [GraphEdge]
    optional CellId automotive_generation_make;
    [GraphEdge]
    optional List<CellId> automotive_generation_manufacturing_plant;
    [GraphEdge]
    optional List<CellId> automotive_generation_designer;
    [GraphEdge]
    optional CellId automotive_generation_years;
}
cell automotive_make
{
    [GraphEdge]
    optional List<CellId> automotive_make_model_s;
    [GraphEdge]
    optional List<CellId> automotive_make_parent_company;
}
cell automotive_manufacturing_plant
{
    [GraphEdge]
    optional List<CellId> automotive_manufacturing_plant_models_manufactured;
    [GraphEdge]
    optional List<CellId> automotive_manufacturing_plant_company;
    [GraphEdge]
    optional CellId automotive_manufacturing_plant_location;
}
cell automotive_manufacturing_plant_model_relationship
{
    [GraphEdge]
    optional CellId automotive_manufacturing_plant_model_relationship_model;
    [GraphEdge]
    optional CellId automotive_manufacturing_plant_model_relationship_manufacturing_plant;
}
cell automotive_model
{
    [GraphEdge]
    optional List<CellId> automotive_model_successor;
    [GraphEdge]
    optional List<CellId> automotive_model_make;
    [GraphEdge]
    optional List<CellId> automotive_model_predecessor;
    [GraphEdge]
    optional List<CellId> automotive_model_automotive_class;
    [GraphEdge]
    optional List<CellId> automotive_model_related_models;
    [GraphEdge]
    optional List<CellId> automotive_model_related;
    [GraphEdge]
    optional List<CellId> automotive_model_manufactured_at;
    [GraphEdge]
    optional List<CellId> automotive_model_similar;
    [GraphEdge]
    optional CellId automotive_model_model_years;
    [GraphEdge]
    optional List<CellId> automotive_model_generations;
}
cell automotive_model_year
{
    [GraphEdge]
    optional CellId automotive_model_year_make;
    [GraphEdge]
    optional CellId automotive_model_year_model;
    [GraphEdge]
    optional CellId automotive_model_year_generation;
    [GraphEdge]
    optional CellId automotive_model_year_previous_model_year;
    [GraphEdge]
    optional List<CellId> automotive_model_year_trim_levels;
    [GraphEdge]
    optional CellId automotive_model_year_next_model_year;
}
cell automotive_platform
{
    [GraphEdge]
    optional CellId automotive_platform_related;
    [GraphEdge]
    optional CellId automotive_platform_predecessor;
    [GraphEdge]
    optional List<CellId> automotive_platform_generations;
    [GraphEdge]
    optional CellId automotive_platform_successor;
}
cell automotive_privately_owned_vehicle
{
    [GraphEdge]
    optional CellId automotive_privately_owned_vehicle_make;
    [GraphEdge]
    optional List<CellId> automotive_privately_owned_vehicle_exterior_color;
    [GraphEdge]
    optional List<CellId> automotive_privately_owned_vehicle_owner;
    [GraphEdge]
    optional CellId automotive_privately_owned_vehicle_model;
    [GraphEdge]
    optional CellId automotive_privately_owned_vehicle_interior;
    optional float automotive_privately_owned_vehicle_milage;
}
cell automotive_similar_automobile_models
{
    [GraphEdge]
    optional List<CellId> automotive_similar_automobile_models_related_model;
}
cell automotive_transmission
{
    optional u8string automotive_transmission_select_shift;
    optional u8string automotive_transmission_overdrive;
    [GraphEdge]
    optional CellId automotive_transmission_classification;
    optional byte automotive_transmission_number_of_reverse_gears;
    optional byte automotive_transmission_number_of_gears;
}
cell automotive_transmission_type
{
    [GraphEdge]
    optional List<CellId> automotive_transmission_type_transmissions;
}
cell automotive_trim_level
{
    optional byte automotive_trim_level_doors;
    [GraphEdge]
    optional CellId automotive_trim_level_model_year;
}
cell automotive_upholstery
{
    [GraphEdge]
    optional CellId automotive_upholstery_color;
    [GraphEdge]
    optional CellId automotive_upholstery_material;
}
cell automotive_us_fuel_economy
{
    optional float automotive_us_fuel_economy_city_mpg;
    optional float automotive_us_fuel_economy_highway_mpg;
}
cell automotive_warranty
{
    optional u8string automotive_warranty_covers;
    optional float automotive_warranty_year_limit;
}
cell aviation_accident_type
{
    optional List<u8string> aviation_accident_type_aircraft_accidents_of_this_type;
}
cell aviation_aircraft
{
    [GraphEdge]
    optional CellId aviation_aircraft_model;
}
cell aviation_aircraft_designer
{
    [GraphEdge]
    optional List<CellId> aviation_aircraft_designer_aircraft_models_designed;
}
cell aviation_aircraft_line
{
    [GraphEdge]
    optional List<CellId> aviation_aircraft_line_models_in_line;
}
cell aviation_aircraft_manufacturer
{
    [GraphEdge]
    optional List<CellId> aviation_aircraft_manufacturer_aircraft_models_made;
}
cell aviation_aircraft_model
{
    [GraphEdge]
    optional List<CellId> aviation_aircraft_model_engine_type;
    optional float aviation_aircraft_model_wingspan;
    optional float aviation_aircraft_model_cargo_capacity;
    [GraphEdge]
    optional List<CellId> aviation_aircraft_model_status;
    [GraphEdge]
    optional List<CellId> aviation_aircraft_model_parent_aircraft_model;
    [GraphEdge]
    optional List<CellId> aviation_aircraft_model_aircraft;
    optional float aviation_aircraft_model_length_meters;
    [GraphEdge]
    optional List<CellId> aviation_aircraft_model_designed_by;
    optional List<u8string> aviation_aircraft_model_manufacturer;
    [GraphEdge]
    optional List<CellId> aviation_aircraft_model_variants;
    [GraphEdge]
    optional List<CellId> aviation_aircraft_model_number_owned_by;
    [GraphEdge]
    optional List<CellId> aviation_aircraft_model_aircraft_type;
    optional float aviation_aircraft_model_cruise_speed;
    [GraphEdge]
    optional List<CellId> aviation_aircraft_model_accidents;
    [GraphEdge]
    optional CellId aviation_aircraft_model_passengers;
    [GraphEdge]
    optional List<CellId> aviation_aircraft_model_comparable_aircraft;
    optional float aviation_aircraft_model_maximum_speed_km_h;
    [GraphEdge]
    optional List<CellId> aviation_aircraft_model_number_built;
    optional float aviation_aircraft_model_range;
    [GraphEdge]
    optional List<CellId> aviation_aircraft_model_unit_cost;
    [GraphEdge]
    optional List<CellId> aviation_aircraft_model_part_of_line;
}
cell aviation_aircraft_owner
{
    [GraphEdge]
    optional List<CellId> aviation_aircraft_owner_aircraft_fleet_composition;
}
cell aviation_aircraft_ownership_count
{
    [GraphEdge]
    optional CellId aviation_aircraft_ownership_count_aircraft_owner;
    [GraphEdge]
    optional CellId aviation_aircraft_ownership_count_aircraft_model;
    optional byte aviation_aircraft_ownership_count_number_owned;
}
cell aviation_aircraft_status
{
    optional u8string aviation_aircraft_status_status;
    [GraphEdge]
    optional CellId aviation_aircraft_status_military_service;
}
cell aviation_aircraft_type
{
    [GraphEdge]
    optional List<CellId> aviation_aircraft_type_aircraft_of_this_type;
}
cell aviation_airline
{
    optional u8string aviation_airline_iata_airline_designator;
    [GraphEdge]
    optional List<CellId> aviation_airline_accidents;
    optional byte aviation_airline_number_of_destinations;
    [GraphEdge]
    optional List<CellId> aviation_airline_airports_served;
    optional byte aviation_airline_fleet_size;
    [GraphEdge]
    optional List<CellId> aviation_airline_hubs;
    optional u8string aviation_airline_icao_airline_designator;
    [GraphEdge]
    optional CellId aviation_airline_IATA_designator;
    [GraphEdge]
    optional CellId aviation_airline_ICAO_designator;
    [GraphEdge]
    optional List<CellId> aviation_airline_alliance;
    optional u8string aviation_airline_callsign;
    [GraphEdge]
    optional List<CellId> aviation_airline_focus_cities;
    optional List<u8string> aviation_airline_frequent_flyer_program;
}
cell aviation_airline_airport_presence
{
    [GraphEdge]
    optional CellId aviation_airline_airport_presence_airport;
    optional List<u8string> aviation_airline_airport_presence_terminals;
    [GraphEdge]
    optional List<CellId> aviation_airline_airport_presence_cities_served;
    [GraphEdge]
    optional CellId aviation_airline_airport_presence_airline;
}
cell aviation_airline_alliance
{
    optional List<u8string> aviation_airline_alliance_member_airlines;
}
cell aviation_airliner_accident
{
    optional byte aviation_airliner_accident_injuries;
    [GraphEdge]
    optional List<CellId> aviation_airliner_accident_accident_type;
    optional byte aviation_airliner_accident_survivors;
    optional byte aviation_airliner_accident_passengers;
    [GraphEdge]
    optional List<CellId> aviation_airliner_accident_aircraft;
    optional u8string aviation_airliner_accident_tail_number;
    optional byte aviation_airliner_accident_crew;
    optional byte aviation_airliner_accident_fatalities;
    [GraphEdge]
    optional List<CellId> aviation_airliner_accident_operator;
    [GraphEdge]
    optional CellId aviation_airliner_accident_flight_destination;
    [GraphEdge]
    optional List<CellId> aviation_airliner_accident_aircraft_type;
    [GraphEdge]
    optional CellId aviation_airliner_accident_flight_origin;
    [GraphEdge]
    optional List<CellId> aviation_airliner_accident_accident_site;
}
cell aviation_airport
{
    [GraphEdge]
    optional List<CellId> aviation_airport_focus_city_for;
    [GraphEdge]
    optional List<CellId> aviation_airport_runway_information;
    optional List<u8string> aviation_airport_icao;
    [GraphEdge]
    optional List<CellId> aviation_airport_amount_of_cargo;
    [GraphEdge]
    optional List<CellId> aviation_airport_airlines;
    [GraphEdge]
    optional List<CellId> aviation_airport_number_of_aircraft_movements;
    [GraphEdge]
    optional List<CellId> aviation_airport_hub_for;
    [GraphEdge]
    optional List<CellId> aviation_airport_serves;
    [GraphEdge]
    optional List<CellId> aviation_airport_airport_type;
    optional List<u8string> aviation_airport_iata;
    optional byte aviation_airport_number_of_runways;
    [GraphEdge]
    optional List<CellId> aviation_airport_number_of_passengers;
    [GraphEdge]
    optional List<CellId> aviation_airport_operator;
    [GraphEdge]
    optional List<CellId> aviation_airport_terminals;
}
cell aviation_airport_operator
{
    [GraphEdge]
    optional List<CellId> aviation_airport_operator_airports_operated;
}
cell aviation_airport_runway
{
    optional float aviation_airport_runway_width;
    [GraphEdge]
    optional CellId aviation_airport_runway_surface;
    [GraphEdge]
    optional CellId aviation_airport_runway_airport;
    optional float aviation_airport_runway_length;
    optional u8string aviation_airport_runway_direction;
    optional float aviation_airport_runway_end_elevation;
    optional float aviation_airport_runway_start_elevation;
}
cell aviation_airport_runway_surface
{
    [GraphEdge]
    optional List<CellId> aviation_airport_runway_surface_runways;
}
cell aviation_airport_terminal
{
    [GraphEdge]
    optional CellId aviation_airport_terminal_airport;
}
cell aviation_airport_type
{
    [GraphEdge]
    optional List<CellId> aviation_airport_type_airports_of_this_type;
}
cell aviation_aviation_incident_aircraft_relationship
{
    [GraphEdge]
    optional CellId aviation_aviation_incident_aircraft_relationship_flight_destination;
    optional byte aviation_aviation_incident_aircraft_relationship_passengers;
    optional byte aviation_aviation_incident_aircraft_relationship_survivors;
    [GraphEdge]
    optional CellId aviation_aviation_incident_aircraft_relationship_incident;
    optional byte aviation_aviation_incident_aircraft_relationship_crew;
    [GraphEdge]
    optional CellId aviation_aviation_incident_aircraft_relationship_aircraft_model;
    [GraphEdge]
    optional List<CellId> aviation_aviation_incident_aircraft_relationship_operator;
    [GraphEdge]
    optional CellId aviation_aviation_incident_aircraft_relationship_flight_origin;
    optional u8string aviation_aviation_incident_aircraft_relationship_tail_number;
}
cell aviation_aviation_waypoint
{
    optional u8string aviation_aviation_waypoint_aviation_id;
    [GraphEdge]
    optional CellId aviation_aviation_waypoint_waypoint_type;
}
cell aviation_cargo_by_year
{
    optional float aviation_cargo_by_year_weight;
}
cell aviation_comparable_aircraft_relationship
{
    [GraphEdge]
    optional List<CellId> aviation_comparable_aircraft_relationship_aircraft;
}
cell aviation_iata_airline_designator
{
    [GraphEdge]
    optional CellId aviation_iata_airline_designator_airline;
}
cell aviation_icao_airline_designator
{
    [GraphEdge]
    optional CellId aviation_icao_airline_designator_airline;
}
cell aviation_waypoint_type
{
    [GraphEdge]
    optional List<CellId> aviation_waypoint_type_waypoints_of_this_type;
}
cell award_award
{
    [GraphEdge]
    optional List<CellId> award_award_ceremony;
    [GraphEdge]
    optional List<CellId> award_award_child_awards;
    [GraphEdge]
    optional List<CellId> award_award_nomination_announcements;
    [GraphEdge]
    optional List<CellId> award_award_achievement_levels;
    [GraphEdge]
    optional List<CellId> award_award_category;
    [GraphEdge]
    optional List<CellId> award_award_presented_by;
    [GraphEdge]
    optional CellId award_award_parent_award;
    [GraphEdge]
    optional List<CellId> award_award_award_announcements;
}
cell award_award_achievement_level
{
    [GraphEdge]
    optional CellId award_award_achievement_level_award;
    [GraphEdge]
    optional CellId award_award_achievement_level_higher_level;
    [GraphEdge]
    optional CellId award_award_achievement_level_lower_level;
    [GraphEdge]
    optional List<CellId> award_award_achievement_level_winners;
}
cell award_award_announcement
{
    [GraphEdge]
    optional List<CellId> award_award_announcement_award;
    [GraphEdge]
    optional List<CellId> award_award_announcement_award_categories;
}
cell award_award_category
{
    [GraphEdge]
    optional List<CellId> award_award_category_judges_jury;
    [GraphEdge]
    optional CellId award_award_category_nomination_announcement;
    [GraphEdge]
    optional List<CellId> award_award_category_nominees;
    [GraphEdge]
    optional List<CellId> award_award_category_long_lists;
    [GraphEdge]
    optional List<CellId> award_award_category_recurring_ceremony;
    [GraphEdge]
    optional List<CellId> award_award_category_disciplines_or_subjects;
    [GraphEdge]
    optional List<CellId> award_award_category_winners;
    [GraphEdge]
    optional List<CellId> award_award_category_presenting_organization;
    [GraphEdge]
    optional CellId award_award_category_category_of;
    [GraphEdge]
    optional List<CellId> award_award_category_award_announcements;
}
cell award_award_ceremony
{
    [GraphEdge]
    optional List<CellId> award_award_ceremony_awards_presented;
    [GraphEdge]
    optional List<CellId> award_award_ceremony_nominees;
}
cell award_award_discipline
{
    [GraphEdge]
    optional List<CellId> award_award_discipline_awards_in_this_discipline;
}
cell award_award_honor
{
    [GraphEdge]
    optional CellId award_award_honor_ceremony;
    [GraphEdge]
    optional List<CellId> award_award_honor_honored_for;
    [GraphEdge]
    optional CellId award_award_honor_award;
    [GraphEdge]
    optional List<CellId> award_award_honor_award_winner;
    optional List<u8string> award_award_honor_notes_description;
    [GraphEdge]
    optional CellId award_award_honor_achievement_level;
}
cell award_award_judge
{
    [GraphEdge]
    optional List<CellId> award_award_judge_awards_judged;
}
cell award_award_judging_term
{
    [GraphEdge]
    optional CellId award_award_judging_term_award;
    [GraphEdge]
    optional CellId award_award_judging_term_judge;
    optional u8string award_award_judging_term_note;
}
cell award_award_nominated_work
{
    [GraphEdge]
    optional List<CellId> award_award_nominated_work_award_nominations;
}
cell award_award_nomination
{
    [GraphEdge]
    optional CellId award_award_nomination_award;
    [GraphEdge]
    optional List<CellId> award_award_nomination_award_nominee;
    [GraphEdge]
    optional CellId award_award_nomination_ceremony;
    [GraphEdge]
    optional List<CellId> award_award_nomination_nominated_for;
    optional List<u8string> award_award_nomination_notes_description;
}
cell award_award_nomination_announcement
{
    [GraphEdge]
    optional CellId award_award_nomination_announcement_award;
    [GraphEdge]
    optional List<CellId> award_award_nomination_announcement_award_categories;
}
cell award_award_nominee
{
    [GraphEdge]
    optional List<CellId> award_award_nominee_award_nominations;
}
cell award_award_presenting_organization
{
    [GraphEdge]
    optional List<CellId> award_award_presenting_organization_awards_presented;
    [GraphEdge]
    optional List<CellId> award_award_presenting_organization_award_categories_presented;
}
cell award_award_winner
{
    [GraphEdge]
    optional List<CellId> award_award_winner_awards_won;
}
cell award_award_winning_work
{
    [GraphEdge]
    optional List<CellId> award_award_winning_work_awards_won;
}
cell award_category_ceremony_relationship
{
    [GraphEdge]
    optional CellId award_category_ceremony_relationship_category;
    [GraphEdge]
    optional CellId award_category_ceremony_relationship_ceremony;
}
cell award_competition
{
    [GraphEdge]
    optional List<CellId> award_competition_competitors;
    [GraphEdge]
    optional CellId award_competition_instance_of_recurring_competition;
    [GraphEdge]
    optional CellId award_competition_type_of_competition;
    optional List<u8string> award_competition_winner;
}
cell award_competition_type
{
    [GraphEdge]
    optional List<CellId> award_competition_type_competitions_of_this_type;
}
cell award_competitor
{
    [GraphEdge]
    optional List<CellId> award_competitor_competitions;
    [GraphEdge]
    optional List<CellId> award_competitor_competitions_won;
}
cell award_hall_of_fame
{
    [GraphEdge]
    optional CellId award_hall_of_fame_address;
    [GraphEdge]
    optional List<CellId> award_hall_of_fame_inductees;
    [GraphEdge]
    optional List<CellId> award_hall_of_fame_discipline;
}
cell award_hall_of_fame_discipline
{
    [GraphEdge]
    optional List<CellId> award_hall_of_fame_discipline_halls_of_fame;
}
cell award_hall_of_fame_inductee
{
    [GraphEdge]
    optional List<CellId> award_hall_of_fame_inductee_hall_of_fame_inductions;
}
cell award_hall_of_fame_induction
{
    optional u8string award_hall_of_fame_induction_note;
    [GraphEdge]
    optional CellId award_hall_of_fame_induction_category;
    [GraphEdge]
    optional List<CellId> award_hall_of_fame_induction_inductee;
    [GraphEdge]
    optional CellId award_hall_of_fame_induction_hall_of_fame;
}
cell award_hall_of_fame_induction_category
{
    [GraphEdge]
    optional List<CellId> award_hall_of_fame_induction_category_inductees;
}
cell award_long_list_nomination
{
    [GraphEdge]
    optional List<CellId> award_long_list_nomination_nominee;
    [GraphEdge]
    optional CellId award_long_list_nomination_nominated_work;
    [GraphEdge]
    optional CellId award_long_list_nomination_award;
    optional u8string award_long_list_nomination_notes_description;
}
cell award_long_list_nominee
{
    [GraphEdge]
    optional List<CellId> award_long_list_nominee_long_list_nominations;
}
cell award_long_listed_work
{
    [GraphEdge]
    optional List<CellId> award_long_listed_work_long_list_nominations;
}
cell award_ranked_item
{
    [GraphEdge]
    optional List<CellId> award_ranked_item_appears_in_ranked_lists;
}
cell award_ranked_list
{
    [GraphEdge]
    optional List<CellId> award_ranked_list_ranked_list_items;
    [GraphEdge]
    optional List<CellId> award_ranked_list_ranked_by;
}
cell award_ranked_list_compiler
{
    [GraphEdge]
    optional List<CellId> award_ranked_list_compiler_ranked_lists;
}
cell award_ranking
{
    optional ushort award_ranking_rank;
    optional u8string award_ranking_note;
    [GraphEdge]
    optional List<CellId> award_ranking_item;
    [GraphEdge]
    optional CellId award_ranking_list;
}
cell award_recurring_award_ceremony
{
    [GraphEdge]
    optional List<CellId> award_recurring_award_ceremony_award_categories;
    [GraphEdge]
    optional List<CellId> award_recurring_award_ceremony_awards;
}
cell award_recurring_competition
{
    [GraphEdge]
    optional List<CellId> award_recurring_competition_individual_competitions;
}
cell baseball_baseball_coach
{
    [GraphEdge]
    optional CellId baseball_baseball_coach_current_team_coaching;
    [GraphEdge]
    optional List<CellId> baseball_baseball_coach_historical_teams_coached;
}
cell baseball_baseball_coaching_position
{
    [GraphEdge]
    optional List<CellId> baseball_baseball_coaching_position_current_coaches;
    [GraphEdge]
    optional List<CellId> baseball_baseball_coaching_position_historical_coaches;
}
cell baseball_baseball_division
{
    [GraphEdge]
    optional List<CellId> baseball_baseball_division_teams;
    [GraphEdge]
    optional CellId baseball_baseball_division_league;
}
cell baseball_baseball_historical_managerial_position
{
    [GraphEdge]
    optional CellId baseball_baseball_historical_managerial_position_team;
    [GraphEdge]
    optional CellId baseball_baseball_historical_managerial_position_manager;
}
cell baseball_baseball_league
{
    [GraphEdge]
    optional List<CellId> baseball_baseball_league_teams;
    [GraphEdge]
    optional CellId baseball_baseball_league_sports_league;
    [GraphEdge]
    optional List<CellId> baseball_baseball_league_divisions;
}
cell baseball_baseball_manager
{
    [GraphEdge]
    optional List<CellId> baseball_baseball_manager_current_team_managed;
    [GraphEdge]
    optional List<CellId> baseball_baseball_manager_former_teams_managed;
}
cell baseball_baseball_player
{
    [GraphEdge]
    optional List<CellId> baseball_baseball_player_bats;
    [GraphEdge]
    optional CellId baseball_baseball_player_lifetime_batting_statistics;
    [GraphEdge]
    optional List<CellId> baseball_baseball_player_batting_stats;
    optional List<u8string> baseball_baseball_player_baseball_almanac_id;
    [GraphEdge]
    optional List<CellId> baseball_baseball_player_position_s;
}
cell baseball_baseball_position
{
    optional List<u8string> baseball_baseball_position_players;
}
cell baseball_baseball_team
{
    [GraphEdge]
    optional List<CellId> baseball_baseball_team_historical_managers;
    [GraphEdge]
    optional List<CellId> baseball_baseball_team_current_coaches;
    [GraphEdge]
    optional CellId baseball_baseball_team_division;
    [GraphEdge]
    optional List<CellId> baseball_baseball_team_historical_coaches;
    [GraphEdge]
    optional List<CellId> baseball_baseball_team_team_stats;
    [GraphEdge]
    optional CellId baseball_baseball_team_league;
    [GraphEdge]
    optional CellId baseball_baseball_team_current_manager;
}
cell baseball_baseball_team_stats
{
    optional byte baseball_baseball_team_stats_wins;
    optional byte baseball_baseball_team_stats_losses;
    [GraphEdge]
    optional CellId baseball_baseball_team_stats_team;
    [GraphEdge]
    optional CellId baseball_baseball_team_stats_season;
}
cell baseball_batting_statistics
{
    optional byte baseball_batting_statistics_hits;
    optional byte baseball_batting_statistics_sacrifice_hits;
    optional ushort baseball_batting_statistics_at_bats;
    optional byte baseball_batting_statistics_hit_by_pitch;
    optional byte baseball_batting_statistics_sacrifice_flies;
    optional byte baseball_batting_statistics_bases_on_balls;
    optional byte baseball_batting_statistics_strikeouts;
    [GraphEdge]
    optional CellId baseball_batting_statistics_season;
    optional float baseball_batting_statistics_slugging_pct;
    optional byte baseball_batting_statistics_doubles;
    optional byte baseball_batting_statistics_games;
    optional byte baseball_batting_statistics_ibbs;
    optional byte baseball_batting_statistics_runs;
    optional float baseball_batting_statistics_on_base_pct;
    optional float baseball_batting_statistics_batting_average;
    optional byte baseball_batting_statistics_gdp;
    optional byte baseball_batting_statistics_home_runs;
    optional byte baseball_batting_statistics_triples;
    [GraphEdge]
    optional CellId baseball_batting_statistics_player;
    optional byte baseball_batting_statistics_grand_slams;
    [GraphEdge]
    optional CellId baseball_batting_statistics_team;
    optional byte baseball_batting_statistics_rbis;
}
cell baseball_current_coaching_tenure
{
    [GraphEdge]
    optional CellId baseball_current_coaching_tenure_baseball_coach;
    [GraphEdge]
    optional CellId baseball_current_coaching_tenure_coaching_position;
    [GraphEdge]
    optional CellId baseball_current_coaching_tenure_baseball_team;
}
cell baseball_historical_coaching_tenure
{
    [GraphEdge]
    optional CellId baseball_historical_coaching_tenure_coaching_position;
    [GraphEdge]
    optional CellId baseball_historical_coaching_tenure_baseball_team;
    [GraphEdge]
    optional CellId baseball_historical_coaching_tenure_baseball_coach;
}
cell baseball_lifetime_batting_statistics
{
    optional byte baseball_lifetime_batting_statistics_triples;
    optional ushort baseball_lifetime_batting_statistics_strikeouts;
    [GraphEdge]
    optional CellId baseball_lifetime_batting_statistics_last_statistics_season;
    optional byte baseball_lifetime_batting_statistics_hit_by_pitch;
    optional float baseball_lifetime_batting_statistics_on_base_percentage;
    optional ushort baseball_lifetime_batting_statistics_at_bats;
    [GraphEdge]
    optional CellId baseball_lifetime_batting_statistics_ending_season;
    optional float baseball_lifetime_batting_statistics_batting_average;
    optional byte baseball_lifetime_batting_statistics_home_runs;
    [GraphEdge]
    optional CellId baseball_lifetime_batting_statistics_player;
    optional byte baseball_lifetime_batting_statistics_gdp;
    optional ushort baseball_lifetime_batting_statistics_runs;
    optional ushort baseball_lifetime_batting_statistics_games;
    [GraphEdge]
    optional CellId baseball_lifetime_batting_statistics_starting_season;
    optional float baseball_lifetime_batting_statistics_slugging_percentage;
    optional byte baseball_lifetime_batting_statistics_bases_on_balls;
    optional byte baseball_lifetime_batting_statistics_sacrifice_hits;
    optional byte baseball_lifetime_batting_statistics_grand_slams;
    optional ushort baseball_lifetime_batting_statistics_hits;
    optional byte baseball_lifetime_batting_statistics_ibbs;
    optional byte baseball_lifetime_batting_statistics_sacrifice_flies;
    optional ushort baseball_lifetime_batting_statistics_rbis;
    optional byte baseball_lifetime_batting_statistics_doubles;
}
cell basketball_basketball_coach
{
    [GraphEdge]
    optional List<CellId> basketball_basketball_coach_previous_teams;
    [GraphEdge]
    optional CellId basketball_basketball_coach_team;
    optional ushort basketball_basketball_coach_season_losses;
    optional byte basketball_basketball_coach_playoff_wins;
    optional byte basketball_basketball_coach_playoff_losses;
    optional ushort basketball_basketball_coach_season_wins;
}
cell basketball_basketball_conference
{
    [GraphEdge]
    optional List<CellId> basketball_basketball_conference_divisions;
    [GraphEdge]
    optional List<CellId> basketball_basketball_conference_teams;
    [GraphEdge]
    optional CellId basketball_basketball_conference_league;
}
cell basketball_basketball_division
{
    [GraphEdge]
    optional List<CellId> basketball_basketball_division_teams;
    [GraphEdge]
    optional List<CellId> basketball_basketball_division_conference;
}
cell basketball_basketball_historical_coach_position
{
    [GraphEdge]
    optional CellId basketball_basketball_historical_coach_position_team;
    [GraphEdge]
    optional CellId basketball_basketball_historical_coach_position_coach;
}
cell basketball_basketball_player
{
    [GraphEdge]
    optional List<CellId> basketball_basketball_player_player_statistics;
    [GraphEdge]
    optional List<CellId> basketball_basketball_player_position_s;
    [GraphEdge]
    optional CellId basketball_basketball_player_career_averages;
}
cell basketball_basketball_player_career_stats
{
    optional ushort basketball_basketball_player_career_stats_assists;
    optional ushort basketball_basketball_player_career_stats_offensive_rebounds;
    optional float basketball_basketball_player_career_stats_average_blocks;
    optional float basketball_basketball_player_career_stats_average_turnovers;
    optional ushort basketball_basketball_player_career_stats_points;
    optional ushort basketball_basketball_player_career_stats_turnovers;
    optional ushort basketball_basketball_player_career_stats_free_throws_attempted;
    optional ushort basketball_basketball_player_career_stats_defensive_rebounds;
    optional float basketball_basketball_player_career_stats_average_steals;
    optional ushort basketball_basketball_player_career_stats_steals;
    optional ushort basketball_basketball_player_career_stats_games_played;
    optional ushort basketball_basketball_player_career_stats_field_goals_attempted;
    optional float basketball_basketball_player_career_stats_three_point_percentage;
    optional float basketball_basketball_player_career_stats_assists1;
    optional ushort basketball_basketball_player_career_stats_rebounds;
    optional float basketball_basketball_player_career_stats_rebounds1;
    optional ushort basketball_basketball_player_career_stats_three_point_fga;
    optional float basketball_basketball_player_career_stats_free_throw_percentage;
    optional ushort basketball_basketball_player_career_stats_blocks;
    optional float basketball_basketball_player_career_stats_average_points;
    optional ushort basketball_basketball_player_career_stats_free_throws_made;
    optional float basketball_basketball_player_career_stats_field_goal_percentage;
    optional ushort basketball_basketball_player_career_stats_three_point_fgm;
    [GraphEdge]
    optional CellId basketball_basketball_player_career_stats_player;
    optional ushort basketball_basketball_player_career_stats_field_goals_made;
}
cell basketball_basketball_player_stats
{
    optional byte basketball_basketball_player_stats_games;
    optional byte basketball_basketball_player_stats_turnovers;
    optional byte basketball_basketball_player_stats_three_fgm;
    optional float basketball_basketball_player_stats_average_blocks;
    optional float basketball_basketball_player_stats_fg_percentage;
    [GraphEdge]
    optional CellId basketball_basketball_player_stats_season;
    optional float basketball_basketball_player_stats_average_points;
    optional byte basketball_basketball_player_stats_steals;
    optional ushort basketball_basketball_player_stats_rebounds;
    [GraphEdge]
    optional CellId basketball_basketball_player_stats_player;
    optional ushort basketball_basketball_player_stats_fgm;
    optional ushort basketball_basketball_player_stats_defensive_rebounds;
    optional byte basketball_basketball_player_stats_player_fouls;
    optional ushort basketball_basketball_player_stats_fta;
    optional float basketball_basketball_player_stats_average_rebounds;
    optional ushort basketball_basketball_player_stats_ftm;
    optional byte basketball_basketball_player_stats_offensive_rebounds;
    optional byte basketball_basketball_player_stats_blocks;
    optional float basketball_basketball_player_stats_average_player_fouls;
    optional float basketball_basketball_player_stats_average_steals;
    [GraphEdge]
    optional CellId basketball_basketball_player_stats_team;
    optional float basketball_basketball_player_stats_average_assists;
    optional float basketball_basketball_player_stats_average_turnovers;
    optional byte basketball_basketball_player_stats_three_fga;
    optional ushort basketball_basketball_player_stats_assists;
    optional float basketball_basketball_player_stats_three_point_percentage;
    optional float basketball_basketball_player_stats_ft_percentage;
    optional ushort basketball_basketball_player_stats_fga;
    optional ushort basketball_basketball_player_stats_points;
}
cell basketball_basketball_position
{
    optional List<u8string> basketball_basketball_position_players;
}
cell basketball_basketball_team
{
    [GraphEdge]
    optional List<CellId> basketball_basketball_team_previous_coaches;
    [GraphEdge]
    optional List<CellId> basketball_basketball_team_team_stats;
    [GraphEdge]
    optional List<CellId> basketball_basketball_team_head_coach;
    [GraphEdge]
    optional CellId basketball_basketball_team_division;
    [GraphEdge]
    optional CellId basketball_basketball_team_conference;
}
cell basketball_basketball_team_stats
{
    optional byte basketball_basketball_team_stats_wins;
    [GraphEdge]
    optional CellId basketball_basketball_team_stats_team;
    optional byte basketball_basketball_team_stats_losses;
    [GraphEdge]
    optional CellId basketball_basketball_team_stats_season;
}
cell bicycles_bicycle_manufacturer
{
    [GraphEdge]
    optional List<CellId> bicycles_bicycle_manufacturer_bicycle_models;
}
cell bicycles_bicycle_model
{
    [GraphEdge]
    optional CellId bicycles_bicycle_model_bicycle_type;
    [GraphEdge]
    optional CellId bicycles_bicycle_model_manufacturer;
    optional byte bicycles_bicycle_model_speeds;
}
cell bicycles_bicycle_type
{
    [GraphEdge]
    optional List<CellId> bicycles_bicycle_type_bicycle_models_of_this_type;
}
cell biology_amino_acid
{
    optional u8string biology_amino_acid_three_letter_abbreviation;
    optional u8string biology_amino_acid_single_letter_abbreviation;
    optional List<u8string> biology_amino_acid_codons;
    optional List<u8string> biology_amino_acid_rna_codons;
}
cell biology_animal_breed
{
    optional u8string biology_animal_breed_light_shedder;
    [GraphEdge]
    optional List<CellId> biology_animal_breed_examples;
    optional u8string biology_animal_breed_hypoallergenic;
    [GraphEdge]
    optional List<CellId> biology_animal_breed_temperament;
    [GraphEdge]
    optional CellId biology_animal_breed_breed_of;
    [GraphEdge]
    optional CellId biology_animal_breed_registered_with;
    [GraphEdge]
    optional List<CellId> biology_animal_breed_coloring;
    [GraphEdge]
    optional List<CellId> biology_animal_breed_place_of_origin;
}
cell biology_animal_owner
{
    [GraphEdge]
    optional List<CellId> biology_animal_owner_animals_owned;
}
cell biology_animal_ownership
{
    [GraphEdge]
    optional CellId biology_animal_ownership_animal;
    [GraphEdge]
    optional List<CellId> biology_animal_ownership_owners;
}
cell biology_breed_coloring
{
    [GraphEdge]
    optional List<CellId> biology_breed_coloring_breeds;
}
cell biology_breed_group
{
    [GraphEdge]
    optional List<CellId> biology_breed_group_breeds_in_this_group;
    [GraphEdge]
    optional CellId biology_breed_group_breed_registry;
}
cell biology_breed_origin
{
    optional List<u8string> biology_breed_origin_breeds_originating_here;
}
cell biology_breed_registration
{
    [GraphEdge]
    optional CellId biology_breed_registration_registry;
    [GraphEdge]
    optional CellId biology_breed_registration_breed_group;
    [GraphEdge]
    optional CellId biology_breed_registration_breed;
}
cell biology_breed_registry
{
    [GraphEdge]
    optional List<CellId> biology_breed_registry_recognized_breeds;
    [GraphEdge]
    optional CellId biology_breed_registry_breed_groups;
}
cell biology_breed_temperament
{
    [GraphEdge]
    optional List<CellId> biology_breed_temperament_breeds;
}
cell biology_chromosome
{
    [GraphEdge]
    optional List<CellId> biology_chromosome_gene;
    [GraphEdge]
    optional List<CellId> biology_chromosome_locus;
    [GraphEdge]
    optional List<CellId> biology_chromosome_band;
    [GraphEdge]
    optional CellId biology_chromosome_genome;
    optional u8string biology_chromosome_identifier;
}
cell biology_cytogenetic_band
{
    [GraphEdge]
    optional CellId biology_cytogenetic_band_chromosome;
    optional u8string biology_cytogenetic_band_identifier;
    [GraphEdge]
    optional CellId biology_cytogenetic_band_locus;
}
cell biology_deceased_organism
{
    [GraphEdge]
    optional CellId biology_deceased_organism_place_of_death;
}
cell biology_domesticated_animal
{
    optional List<u8string> biology_domesticated_animal_breeds;
}
cell biology_fossil_site
{
    [GraphEdge]
    optional CellId biology_fossil_site_fossilized_organisms_found_here;
    [GraphEdge]
    optional List<CellId> biology_fossil_site_specimens_found_here;
}
cell biology_fossil_specimen
{
    [GraphEdge]
    optional CellId biology_fossil_specimen_dates_from;
    [GraphEdge]
    optional CellId biology_fossil_specimen_organism;
    [GraphEdge]
    optional CellId biology_fossil_specimen_found_at_site;
}
cell biology_gene
{
    [GraphEdge]
    optional CellId biology_gene_genome;
    [GraphEdge]
    optional List<CellId> biology_gene_membership;
    optional uint biology_gene_ncbi_id;
    [GraphEdge]
    optional CellId biology_gene_chromosome;
    optional List<u8string> biology_gene_alternate_symbol;
    optional u8string biology_gene_symbol;
    [GraphEdge]
    optional CellId biology_gene_locus;
}
cell biology_gene_group
{
    [GraphEdge]
    optional List<CellId> biology_gene_group_gene;
}
cell biology_gene_group_membership
{
    [GraphEdge]
    optional CellId biology_gene_group_membership_gene;
    [GraphEdge]
    optional CellId biology_gene_group_membership_evidence;
    [GraphEdge]
    optional CellId biology_gene_group_membership_group;
}
cell biology_gene_group_membership_evidence
{
    [GraphEdge]
    optional List<CellId> biology_gene_group_membership_evidence_membership;
}
cell biology_gene_ontology_data_source
{
    optional List<u8string> biology_gene_ontology_data_source_group;
    optional u8string biology_gene_ontology_data_source_source_path;
    optional uint biology_gene_ontology_data_source_source_mtime;
    optional u8string biology_gene_ontology_data_source_source_type;
    optional u8string biology_gene_ontology_data_source_source_md5;
}
cell biology_gene_ontology_group
{
    [GraphEdge]
    optional List<CellId> biology_gene_ontology_group_aggregate_group;
    [GraphEdge]
    optional List<CellId> biology_gene_ontology_group_part_group;
    optional List<u8string> biology_gene_ontology_group_narrower_term;
    optional List<u8string> biology_gene_ontology_group_broader_term;
    optional List<u8string> biology_gene_ontology_group_related_term;
    [GraphEdge]
    optional List<CellId> biology_gene_ontology_group_broader_group;
    [GraphEdge]
    optional List<CellId> biology_gene_ontology_group_narrower_group;
    [GraphEdge]
    optional CellId biology_gene_ontology_group_data_source;
    optional u8string biology_gene_ontology_group_description;
    [GraphEdge]
    optional CellId biology_gene_ontology_group_group_type;
    optional List<u8string> biology_gene_ontology_group_synonym_term;
    optional u8string biology_gene_ontology_group_identifier;
}
cell biology_gene_ontology_group_membership_evidence
{
    [GraphEdge]
    optional CellId biology_gene_ontology_group_membership_evidence_evidence_type;
    optional List<uint> biology_gene_ontology_group_membership_evidence_pubmed_id;
}
cell biology_gene_ontology_group_type
{
    optional List<u8string> biology_gene_ontology_group_type_group;
}
cell biology_genome
{
    [GraphEdge]
    optional List<CellId> biology_genome_gene;
    [GraphEdge]
    optional CellId biology_genome_taxon;
    [GraphEdge]
    optional List<CellId> biology_genome_chromosome;
    [GraphEdge]
    optional CellId biology_genome_build;
}
cell biology_genome_build
{
    [GraphEdge]
    optional CellId biology_genome_build_curator;
    optional float biology_genome_build_version;
}
cell biology_genome_curator
{
    [GraphEdge]
    optional CellId biology_genome_curator_build;
}
cell biology_genomic_locus
{
    [GraphEdge]
    optional List<CellId> biology_genomic_locus_band;
    optional List<uint> biology_genomic_locus_end_base;
    [GraphEdge]
    optional CellId biology_genomic_locus_build;
    optional List<uint> biology_genomic_locus_start_base;
    [GraphEdge]
    optional CellId biology_genomic_locus_annotation;
    [GraphEdge]
    optional CellId biology_genomic_locus_chromosome;
    optional u8string biology_genomic_locus_strand;
}
cell biology_hybrid
{
    [GraphEdge]
    optional List<CellId> biology_hybrid_parent_classifications;
}
cell biology_hybrid_parent_classification
{
    [GraphEdge]
    optional List<CellId> biology_hybrid_parent_classification_hybrids;
}
cell biology_hybrid_parent_gender
{
    [GraphEdge]
    optional List<CellId> biology_hybrid_parent_gender_hybrids;
}
cell biology_hybrid_parentage
{
    [GraphEdge]
    optional CellId biology_hybrid_parentage_parent_sex;
    [GraphEdge]
    optional CellId biology_hybrid_parentage_parent;
    [GraphEdge]
    optional CellId biology_hybrid_parentage_hybrid;
}
cell biology_informal_biological_grouping
{
    optional List<u8string> biology_informal_biological_grouping_included_classifications;
}
cell biology_organism
{
    [GraphEdge]
    optional CellId biology_organism_place_of_birth;
    optional float biology_organism_weight_kg;
    [GraphEdge]
    optional List<CellId> biology_organism_children;
    [GraphEdge]
    optional CellId biology_organism_organism_type;
    [GraphEdge]
    optional List<CellId> biology_organism_parents;
    optional float biology_organism_height_meters;
    [GraphEdge]
    optional CellId biology_organism_sex;
}
cell biology_organism_classification
{
    optional List<u8string> biology_organism_classification_synonym_scientific_name;
    optional u8string biology_organism_classification_scientific_name;
    optional List<uint> biology_organism_classification_itis_tsn;
    [GraphEdge]
    optional List<CellId> biology_organism_classification_parent_classifications;
    [GraphEdge]
    optional List<CellId> biology_organism_classification_child_classifications;
    optional List<u8string> biology_organism_classification_ncbi_taxon_id;
    [GraphEdge]
    optional CellId biology_organism_classification_earliest_fossil_record;
    [GraphEdge]
    optional CellId biology_organism_classification_latest_fossil_record;
    [GraphEdge]
    optional List<CellId> biology_organism_classification_higher_classification_closure;
    optional List<u8string> biology_organism_classification_lower_classifications;
    [GraphEdge]
    optional CellId biology_organism_classification_higher_classification;
    optional List<u8string> biology_organism_classification_lower_classification_closure;
    [GraphEdge]
    optional List<CellId> biology_organism_classification_organisms_of_this_type;
    [GraphEdge]
    optional List<CellId> biology_organism_classification_fossil_specimens;
    [GraphEdge]
    optional CellId biology_organism_classification_rank;
}
cell biology_organism_classification_placement
{
    [GraphEdge]
    optional CellId biology_organism_classification_placement_lower_classification;
    [GraphEdge]
    optional CellId biology_organism_classification_placement_rank;
    [GraphEdge]
    optional CellId biology_organism_classification_placement_taxonomic_authority;
    [GraphEdge]
    optional CellId biology_organism_classification_placement_higher_classification;
}
cell biology_organism_classification_rank
{
    [GraphEdge]
    optional List<CellId> biology_organism_classification_rank_higher_rank;
    optional List<u8string> biology_organism_classification_rank_organism_classifications;
    optional u8string biology_organism_classification_rank_scientific_name;
    optional u8string biology_organism_classification_rank_major_rank;
    [GraphEdge]
    optional List<CellId> biology_organism_classification_rank_lower_rank;
}
cell biology_organism_part
{
    [GraphEdge]
    optional CellId biology_organism_part_from_organism;
}
cell biology_owned_animal
{
    [GraphEdge]
    optional List<CellId> biology_owned_animal_owners;
}
cell biology_pedigreed_animal
{
    [GraphEdge]
    optional CellId biology_pedigreed_animal_breed;
}
cell biology_plant_disease
{
    [GraphEdge]
    optional List<CellId> biology_plant_disease_plant_disease_triangle;
}
cell biology_plant_disease_cause
{
    [GraphEdge]
    optional List<CellId> biology_plant_disease_cause_plant_disease_triangle;
}
cell biology_plant_disease_conditions
{
    [GraphEdge]
    optional List<CellId> biology_plant_disease_conditions_plant_disease_triangle;
}
cell biology_plant_disease_documentation
{
    [GraphEdge]
    optional List<CellId> biology_plant_disease_documentation_plant_disease_documentation;
}
cell biology_plant_disease_host
{
    [GraphEdge]
    optional List<CellId> biology_plant_disease_host_disease_s;
}
cell biology_plant_disease_triangle
{
    [GraphEdge]
    optional CellId biology_plant_disease_triangle_host;
    [GraphEdge]
    optional CellId biology_plant_disease_triangle_plant_disease;
    [GraphEdge]
    optional CellId biology_plant_disease_triangle_plant_disease_conditions;
    [GraphEdge]
    optional CellId biology_plant_disease_triangle_source_s;
    [GraphEdge]
    optional List<CellId> biology_plant_disease_triangle_plant_disease_cause;
}
cell biology_protein
{
    optional List<uint> biology_protein_entrez_gene_id;
    optional uint biology_protein_mmdb_id;
    optional List<u8string> biology_protein_pdb_id;
}
cell biology_source_organism
{
    [GraphEdge]
    optional List<CellId> biology_source_organism_usable_parts;
}
cell biology_taxon_with_sequenced_genome
{
    [GraphEdge]
    optional CellId biology_taxon_with_sequenced_genome_genome;
}
cell biology_taxonomic_authority
{
    [GraphEdge]
    optional List<CellId> biology_taxonomic_authority_taxonomic_placement;
}
cell boats_boat_disposition
{
    [GraphEdge]
    optional CellId boats_boat_disposition_location;
    [GraphEdge]
    optional CellId boats_boat_disposition_fate;
}
cell boats_engine
{
    optional float boats_engine_power_kw;
    [GraphEdge]
    optional CellId boats_engine_manufacturer;
    [GraphEdge]
    optional CellId boats_engine_fuel;
}
cell boats_nuclear_powerplant
{
    optional float boats_nuclear_powerplant_power_kw;
}
cell boats_ship
{
    optional float boats_ship_draught;
    [GraphEdge]
    optional CellId boats_ship_place_built;
    optional float boats_ship_length_at_waterline;
    optional float boats_ship_beam;
    [GraphEdge]
    optional List<CellId> boats_ship_means_of_propulsion;
    [GraphEdge]
    optional List<CellId> boats_ship_ship_class;
    optional uint boats_ship_imo_lr_identification_number;
    optional List<u8string> boats_ship_ship_builder;
    optional float boats_ship_length_overall;
    [GraphEdge]
    optional List<CellId> boats_ship_hull_material;
    optional float boats_ship_displacement;
    [GraphEdge]
    optional List<CellId> boats_ship_owners;
    [GraphEdge]
    optional List<CellId> boats_ship_designer;
}
cell boats_ship_builder
{
    optional List<u8string> boats_ship_builder_ships_built;
}
cell boats_ship_class
{
    [GraphEdge]
    optional List<CellId> boats_ship_class_armament;
    [GraphEdge]
    optional List<CellId> boats_ship_class_ships_in_class;
    optional float boats_ship_class_displacement_tons;
    optional float boats_ship_class_length_at_waterline_meters;
    optional float boats_ship_class_max_speed_knots;
    optional float boats_ship_class_length_overall_m;
    optional float boats_ship_class_cruise_speed_knots;
    [GraphEdge]
    optional List<CellId> boats_ship_class_powerplant;
    optional float boats_ship_class_beam_meters;
    [GraphEdge]
    optional List<CellId> boats_ship_class_ship_type;
    [GraphEdge]
    optional List<CellId> boats_ship_class_designer;
    optional float boats_ship_class_draft_meters;
    optional float boats_ship_class_endurance_days;
}
cell boats_ship_designer
{
    [GraphEdge]
    optional List<CellId> boats_ship_designer_boats_designed;
    [GraphEdge]
    optional List<CellId> boats_ship_designer_ship_classes_designed;
}
cell boats_ship_owner
{
    [GraphEdge]
    optional List<CellId> boats_ship_owner_ships_owned;
}
cell boats_ship_ownership
{
    [GraphEdge]
    optional CellId boats_ship_ownership_owner;
    [GraphEdge]
    optional CellId boats_ship_ownership_ship;
}
cell boats_ship_powerplant
{
    [GraphEdge]
    optional CellId boats_ship_powerplant_reactor_if_nuclear;
    [GraphEdge]
    optional CellId boats_ship_powerplant_engine_type;
}
cell boats_ship_powerplant_system
{
    [GraphEdge]
    optional CellId boats_ship_powerplant_system_powerplant;
    optional byte boats_ship_powerplant_system_number;
    [GraphEdge]
    optional CellId boats_ship_powerplant_system_ship_classes_powered;
}
cell boats_ship_type
{
    [GraphEdge]
    optional List<CellId> boats_ship_type_ship_class;
}
cell boats_warship_armament
{
    optional byte boats_warship_armament_number;
    [GraphEdge]
    optional CellId boats_warship_armament_armament;
}
cell book_audio_book_reader
{
    [GraphEdge]
    optional List<CellId> book_audio_book_reader_audio_books_read;
}
cell book_author
{
    [GraphEdge]
    optional List<CellId> book_author_school_or_movement;
    optional List<u8string> book_author_openlibrary_id;
    [GraphEdge]
    optional List<CellId> book_author_series_written_or_contributed_to;
    [GraphEdge]
    optional List<CellId> book_author_book_editions_published;
    [GraphEdge]
    optional List<CellId> book_author_works_written;
    [GraphEdge]
    optional List<CellId> book_author_works_edited;
    [GraphEdge]
    optional List<CellId> book_author_book_editions_edited;
    [GraphEdge]
    optional List<CellId> book_author_contributing_author_to;
}
cell book_book
{
    [GraphEdge]
    optional List<CellId> book_book_characters;
    [GraphEdge]
    optional List<CellId> book_book_genre;
    [GraphEdge]
    optional CellId book_book_first_edition;
    [GraphEdge]
    optional List<CellId> book_book_editions;
    [GraphEdge]
    optional List<CellId> book_book_interior_illustrations_by;
}
cell book_book_character
{
    [GraphEdge]
    optional List<CellId> book_book_character_appears_in_stories;
    [GraphEdge]
    optional List<CellId> book_book_character_appears_in_book;
}
cell book_book_edition
{
    [GraphEdge]
    optional List<CellId> book_book_edition_cover_price;
    optional List<uint> book_book_edition_OCLC_number;
    [GraphEdge]
    optional List<CellId> book_book_edition_book_edition_series;
    [GraphEdge]
    optional List<CellId> book_book_edition_author_editor;
    [GraphEdge]
    optional List<CellId> book_book_edition_cover_artist;
    optional List<u8string> book_book_edition_ISBN;
    [GraphEdge]
    optional List<CellId> book_book_edition_interior_illustrations_by;
    [GraphEdge]
    optional CellId book_book_edition_isbn;
    [GraphEdge]
    optional List<CellId> book_book_edition_reader;
    [GraphEdge]
    optional List<CellId> book_book_edition_contributing_authors;
    [GraphEdge]
    optional List<CellId> book_book_edition_editor_of_this_edition;
    optional u8string book_book_edition_credited_to;
    [GraphEdge]
    optional List<CellId> book_book_edition_language;
    [GraphEdge]
    optional List<CellId> book_book_edition_place_of_publication;
    optional float book_book_edition_height;
    optional List<u8string> book_book_edition_LCCN;
    optional List<u8string> book_book_edition_dewey_decimal_number;
    optional List<u8string> book_book_edition_openlibrary_id;
    optional List<u8string> book_book_edition_lcc;
    [GraphEdge]
    optional CellId book_book_edition_number_of_pages;
    [GraphEdge]
    optional CellId book_book_edition_binding;
    [GraphEdge]
    optional CellId book_book_edition_publisher;
    optional List<u8string> book_book_edition_isfdb_id;
    [GraphEdge]
    optional CellId book_book_edition_book;
}
cell book_book_edition_series
{
    [GraphEdge]
    optional List<CellId> book_book_edition_series_series_editor;
    [GraphEdge]
    optional List<CellId> book_book_edition_series_editions_in_this_series;
    [GraphEdge]
    optional List<CellId> book_book_edition_series_part_of_series;
    [GraphEdge]
    optional List<CellId> book_book_edition_series_sub_series;
}
cell book_book_subject
{
    [GraphEdge]
    optional List<CellId> book_book_subject_works;
    [GraphEdge]
    optional List<CellId> book_book_subject_musical_compositions_about_this_topic;
}
cell book_cited_work
{
    [GraphEdge]
    optional List<CellId> book_cited_work_cited_in;
}
cell book_contents
{
    [GraphEdge]
    optional CellId book_contents_work;
    [GraphEdge]
    optional CellId book_contents_publication;
    optional List<u8string> book_contents_page_number;
    optional u8string book_contents_credited_to;
}
cell book_editor_title
{
    [GraphEdge]
    optional List<CellId> book_editor_title_editors;
}
cell book_editorial_tenure
{
    [GraphEdge]
    optional CellId book_editorial_tenure_title;
    [GraphEdge]
    optional CellId book_editorial_tenure_editor;
    [GraphEdge]
    optional CellId book_editorial_tenure_periodical;
}
cell book_excerpt
{
    [GraphEdge]
    optional CellId book_excerpt_work_excerpted;
}
cell book_excerpted_work
{
    [GraphEdge]
    optional List<CellId> book_excerpted_work_excerpts;
}
cell book_illustrator
{
    [GraphEdge]
    optional List<CellId> book_illustrator_magazine_covers;
    [GraphEdge]
    optional List<CellId> book_illustrator_magazine_issues_illustrated;
    [GraphEdge]
    optional List<CellId> book_illustrator_book_editions_illustrated;
    [GraphEdge]
    optional List<CellId> book_illustrator_books_illustrated;
    [GraphEdge]
    optional List<CellId> book_illustrator_book_edition_covers;
}
cell book_interview
{
    [GraphEdge]
    optional List<CellId> book_interview_interviewer;
    [GraphEdge]
    optional List<CellId> book_interview_interviewee;
}
cell book_interviewee
{
    [GraphEdge]
    optional List<CellId> book_interviewee_interviews_given;
}
cell book_interviewer
{
    [GraphEdge]
    optional List<CellId> book_interviewer_interviews_conducted;
}
cell book_isbn
{
    [GraphEdge]
    optional List<CellId> book_isbn_book_editions;
}
cell book_journal
{
    [GraphEdge]
    optional List<CellId> book_journal_discipline;
    [GraphEdge]
    optional CellId book_journal_individual_price;
    [GraphEdge]
    optional CellId book_journal_institutional_price;
    [GraphEdge]
    optional List<CellId> book_journal_articles;
    [GraphEdge]
    optional List<CellId> book_journal_place_of_publication;
}
cell book_journal_article
{
    [GraphEdge]
    optional List<CellId> book_journal_article_journal_publication;
}
cell book_journal_publication
{
    optional u8string book_journal_publication_issue_date_extra;
    [GraphEdge]
    optional CellId book_journal_publication_article;
    [GraphEdge]
    optional CellId book_journal_publication_journal;
    optional byte book_journal_publication_issue_number;
    optional List<byte> book_journal_publication_volume;
    optional u8string book_journal_publication_pages;
}
cell book_literary_series
{
    [GraphEdge]
    optional List<CellId> book_literary_series_works_in_this_series;
    [GraphEdge]
    optional List<CellId> book_literary_series_author_s;
    optional List<ushort> book_literary_series_isfdb_id;
    [GraphEdge]
    optional List<CellId> book_literary_series_sub_series;
    [GraphEdge]
    optional List<CellId> book_literary_series_fictional_universe;
    [GraphEdge]
    optional List<CellId> book_literary_series_part_of_series;
}
cell book_magazine
{
    [GraphEdge]
    optional List<CellId> book_magazine_place_of_publication;
    [GraphEdge]
    optional List<CellId> book_magazine_issues;
    [GraphEdge]
    optional List<CellId> book_magazine_circulation;
    [GraphEdge]
    optional List<CellId> book_magazine_genre;
}
cell book_magazine_genre
{
    [GraphEdge]
    optional List<CellId> book_magazine_genre_magazines_in_this_genre;
}
cell book_magazine_issue
{
    [GraphEdge]
    optional List<CellId> book_magazine_issue_interior_illustrations_by;
    [GraphEdge]
    optional List<CellId> book_magazine_issue_cover_price;
    [GraphEdge]
    optional List<CellId> book_magazine_issue_cover_artist;
    [GraphEdge]
    optional CellId book_magazine_issue_publication_date;
    [GraphEdge]
    optional List<CellId> book_magazine_issue_magazine;
}
cell book_newspaper
{
    [GraphEdge]
    optional List<CellId> book_newspaper_issues;
    [GraphEdge]
    optional List<CellId> book_newspaper_circulation_areas;
    [GraphEdge]
    optional List<CellId> book_newspaper_owner;
    [GraphEdge]
    optional List<CellId> book_newspaper_circulation;
    [GraphEdge]
    optional List<CellId> book_newspaper_headquarters;
    [GraphEdge]
    optional List<CellId> book_newspaper_price;
}
cell book_newspaper_circulation
{
    optional uint book_newspaper_circulation_circulation;
    [GraphEdge]
    optional CellId book_newspaper_circulation_edition;
}
cell book_newspaper_issue
{
    [GraphEdge]
    optional CellId book_newspaper_issue_publication_date;
    [GraphEdge]
    optional CellId book_newspaper_issue_newspaper;
    [GraphEdge]
    optional List<CellId> book_newspaper_issue_cover_price;
}
cell book_newspaper_owner
{
    [GraphEdge]
    optional List<CellId> book_newspaper_owner_newspapers_owned;
}
cell book_newspaper_price
{
    [GraphEdge]
    optional CellId book_newspaper_price_currency;
    [GraphEdge]
    optional CellId book_newspaper_price_edition;
    optional float book_newspaper_price_amount;
}
cell book_pagination
{
    optional List<ushort> book_pagination_numbered_pages;
    optional u8string book_pagination_front_matter;
}
cell book_periodical
{
    [GraphEdge]
    optional List<CellId> book_periodical_format;
    [GraphEdge]
    optional List<CellId> book_periodical_publisher;
    [GraphEdge]
    optional List<CellId> book_periodical_subjects;
    optional List<u8string> book_periodical_ISSN;
    [GraphEdge]
    optional List<CellId> book_periodical_language;
    [GraphEdge]
    optional CellId book_periodical_first_issue_date;
    [GraphEdge]
    optional CellId book_periodical_final_issue_date;
    [GraphEdge]
    optional List<CellId> book_periodical_frequency_or_issues_per_year;
    [GraphEdge]
    optional List<CellId> book_periodical_editorial_staff;
    optional List<u8string> book_periodical_eissn;
}
cell book_periodical_editor
{
    [GraphEdge]
    optional List<CellId> book_periodical_editor_periodicals_edited;
}
cell book_periodical_format
{
    [GraphEdge]
    optional List<CellId> book_periodical_format_periodicals_in_this_format;
}
cell book_periodical_format_period
{
    [GraphEdge]
    optional CellId book_periodical_format_period_periodical;
    [GraphEdge]
    optional CellId book_periodical_format_period_format;
}
cell book_periodical_frequency
{
    [GraphEdge]
    optional CellId book_periodical_frequency_frequency;
    optional byte book_periodical_frequency_issues_per_year;
}
cell book_periodical_publication_date
{
    optional u8string book_periodical_publication_date_additional_date_info;
    optional byte book_periodical_publication_date_issue_number;
    optional byte book_periodical_publication_date_volume;
}
cell book_periodical_publisher
{
    [GraphEdge]
    optional List<CellId> book_periodical_publisher_periodicals_published;
}
cell book_periodical_publisher_period
{
    [GraphEdge]
    optional CellId book_periodical_publisher_period_periodical;
    [GraphEdge]
    optional CellId book_periodical_publisher_period_publisher;
}
cell book_periodical_subject
{
    [GraphEdge]
    optional List<CellId> book_periodical_subject_periodicals;
}
cell book_place_of_publication_period
{
    [GraphEdge]
    optional CellId book_place_of_publication_period_place_of_publication;
}
cell book_poem
{
    [GraphEdge]
    optional List<CellId> book_poem_characters;
    [GraphEdge]
    optional List<CellId> book_poem_verse_form;
    [GraphEdge]
    optional CellId book_poem_meter;
}
cell book_poem_character
{
    [GraphEdge]
    optional List<CellId> book_poem_character_appears_in_poems;
}
cell book_poetic_meter
{
    [GraphEdge]
    optional List<CellId> book_poetic_meter_poems_with_this_meter;
}
cell book_poetic_verse_form
{
    [GraphEdge]
    optional List<CellId> book_poetic_verse_form_poems_of_this_form;
}
cell book_publication
{
    [GraphEdge]
    optional List<CellId> book_publication_contents;
}
cell book_published_work
{
    [GraphEdge]
    optional List<CellId> book_published_work_published_in_published_as;
}
cell book_publisher_imprint_tenure
{
    [GraphEdge]
    optional CellId book_publisher_imprint_tenure_publisher;
    [GraphEdge]
    optional CellId book_publisher_imprint_tenure_imprints;
}
cell book_publishing_company
{
    [GraphEdge]
    optional List<CellId> book_publishing_company_imprint_of;
    [GraphEdge]
    optional List<CellId> book_publishing_company_publisher;
    [GraphEdge]
    optional List<CellId> book_publishing_company_books_published;
    optional List<ushort> book_publishing_company_isfdb_id;
    [GraphEdge]
    optional List<CellId> book_publishing_company_imprints;
    [GraphEdge]
    optional List<CellId> book_publishing_company_imprint;
}
cell book_report_issuing_institution
{
    [GraphEdge]
    optional List<CellId> book_report_issuing_institution_technical_reports_issued;
}
cell book_review
{
    [GraphEdge]
    optional List<CellId> book_review_work_reviewed;
}
cell book_reviewed_work
{
    [GraphEdge]
    optional List<CellId> book_reviewed_work_reviews_of_this_work;
}
cell book_scholarly_financial_support
{
    optional u8string book_scholarly_financial_support_funding_identifier;
    [GraphEdge]
    optional CellId book_scholarly_financial_support_support_provider;
}
cell book_scholarly_work
{
    [GraphEdge]
    optional List<CellId> book_scholarly_work_works_cited;
    optional u8string book_scholarly_work_doi;
    [GraphEdge]
    optional List<CellId> book_scholarly_work_financial_support_provided_by;
    [GraphEdge]
    optional List<CellId> book_scholarly_work_acknowledged_people;
    optional List<u8string> book_scholarly_work_keyword;
}
cell book_school_or_movement
{
    [GraphEdge]
    optional CellId book_school_or_movement_associated_period;
    [GraphEdge]
    optional List<CellId> book_school_or_movement_associated_works;
    [GraphEdge]
    optional List<CellId> book_school_or_movement_associated_authors;
}
cell book_serial_installment
{
    [GraphEdge]
    optional List<CellId> book_serial_installment_serialized_work;
    optional byte book_serial_installment_installment_number;
}
cell book_serialized_work
{
    [GraphEdge]
    optional List<CellId> book_serialized_work_serial_installments;
}
cell book_series_editor
{
    [GraphEdge]
    optional List<CellId> book_series_editor_book_edition_series_edited;
}
cell book_short_non_fiction
{
    [GraphEdge]
    optional CellId book_short_non_fiction_mode_of_writing;
}
cell book_short_non_fiction_variety
{
    [GraphEdge]
    optional List<CellId> book_short_non_fiction_variety_works;
}
cell book_short_story
{
    [GraphEdge]
    optional List<CellId> book_short_story_genre;
    [GraphEdge]
    optional List<CellId> book_short_story_characters;
}
cell book_technical_report
{
    [GraphEdge]
    optional List<CellId> book_technical_report_institution;
    [GraphEdge]
    optional CellId book_technical_report_place_of_publication;
    optional byte book_technical_report_number_of_pages;
    optional ushort book_technical_report_number_in_series;
    optional u8string book_technical_report_institution_reference;
}
cell book_translated_work
{
    [GraphEdge]
    optional List<CellId> book_translated_work_translations;
}
cell book_translation
{
    [GraphEdge]
    optional List<CellId> book_translation_translator;
    [GraphEdge]
    optional List<CellId> book_translation_language;
    [GraphEdge]
    optional List<CellId> book_translation_translation_of;
}
cell book_translator
{
    [GraphEdge]
    optional List<CellId> book_translator_works_translated;
}
cell book_written_work
{
    [GraphEdge]
    optional List<CellId> book_written_work_part_of_series;
    [GraphEdge]
    optional List<CellId> book_written_work_editor;
    [GraphEdge]
    optional List<CellId> book_written_work_subjects;
    [GraphEdge]
    optional List<CellId> book_written_work_previous_in_series;
    [GraphEdge]
    optional List<CellId> book_written_work_original_language;
    [GraphEdge]
    optional CellId book_written_work_next_in_series;
    [GraphEdge]
    optional List<CellId> book_written_work_school_or_movement;
    [GraphEdge]
    optional List<CellId> book_written_work_author;
    [GraphEdge]
    optional List<CellId> book_written_work_online_versions;
    optional List<u8string> book_written_work_isfdb_id;
}
cell boxing_boxing_decision
{
    [GraphEdge]
    optional List<CellId> boxing_boxing_decision_matches_ended_with_this_decision;
}
cell boxing_boxing_match
{
    [GraphEdge]
    optional List<CellId> boxing_boxing_match_fighters;
    [GraphEdge]
    optional List<CellId> boxing_boxing_match_titles_at_stake;
    optional byte boxing_boxing_match_round_match_ended;
    [GraphEdge]
    optional CellId boxing_boxing_match_weight_class;
    optional byte boxing_boxing_match_planned_number_of_rounds;
    [GraphEdge]
    optional CellId boxing_boxing_match_decision;
}
cell boxing_boxing_sanctioning_body
{
    [GraphEdge]
    optional CellId boxing_boxing_sanctioning_body_titles;
}
cell boxing_boxing_title
{
    [GraphEdge]
    optional List<CellId> boxing_boxing_title_champions;
    [GraphEdge]
    optional CellId boxing_boxing_title_matches_with_this_title_at_stake;
    [GraphEdge]
    optional CellId boxing_boxing_title_organization;
}
cell boxing_boxing_title_tenure
{
    optional byte boxing_boxing_title_tenure_defenses;
    [GraphEdge]
    optional CellId boxing_boxing_title_tenure_champion;
    [GraphEdge]
    optional CellId boxing_boxing_title_tenure_weight;
    [GraphEdge]
    optional CellId boxing_boxing_title_tenure_title;
}
cell boxing_match_boxer_relationship
{
    optional u8string boxing_match_boxer_relationship_winner_won;
    [GraphEdge]
    optional CellId boxing_match_boxer_relationship_match;
    [GraphEdge]
    optional CellId boxing_match_boxer_relationship_boxer;
    optional byte boxing_match_boxer_relationship_points;
}
cell broadcast_advisory
{
    [GraphEdge]
    optional List<CellId> broadcast_advisory_content;
}
cell broadcast_am_terrestrial_broadcast_facility
{
    optional float broadcast_am_terrestrial_broadcast_facility_frequency;
}
cell broadcast_artist
{
    [GraphEdge]
    optional List<CellId> broadcast_artist_content;
}
cell broadcast_broadcast
{
    [GraphEdge]
    optional CellId broadcast_broadcast_content;
    [GraphEdge]
    optional List<CellId> broadcast_broadcast_distributor;
    [GraphEdge]
    optional List<CellId> broadcast_broadcast_area_served;
}
cell broadcast_cable_satellite_availability
{
    optional u8string broadcast_cable_satellite_availability_channel;
    [GraphEdge]
    optional CellId broadcast_cable_satellite_availability_provider;
}
cell broadcast_callsign_duration
{
    optional u8string broadcast_callsign_duration_callsign;
}
cell broadcast_content
{
    [GraphEdge]
    optional List<CellId> broadcast_content_language;
    [GraphEdge]
    optional CellId broadcast_content_advisory;
    [GraphEdge]
    optional List<CellId> broadcast_content_genre;
    [GraphEdge]
    optional List<CellId> broadcast_content_artist;
    [GraphEdge]
    optional List<CellId> broadcast_content_producer;
    optional u8string broadcast_content_summary;
    [GraphEdge]
    optional List<CellId> broadcast_content_broadcast;
    [GraphEdge]
    optional List<CellId> broadcast_content_location;
}
cell broadcast_distributor
{
    [GraphEdge]
    optional List<CellId> broadcast_distributor_distributes;
}
cell broadcast_fm_terrestrial_broadcast_facility
{
    optional float broadcast_fm_terrestrial_broadcast_facility_frequency;
}
cell broadcast_genre
{
    [GraphEdge]
    optional List<CellId> broadcast_genre_content;
}
cell broadcast_internet_stream
{
    [GraphEdge]
    optional CellId broadcast_internet_stream_playlist_format;
    [GraphEdge]
    optional List<CellId> broadcast_internet_stream_stream_format;
    optional byte broadcast_internet_stream_stream_bitrate;
}
cell broadcast_podcast_feed
{
    [GraphEdge]
    optional List<CellId> broadcast_podcast_feed_media_format;
    [GraphEdge]
    optional CellId broadcast_podcast_feed_publication_frequency;
    optional byte broadcast_podcast_feed_average_media_length;
    optional byte broadcast_podcast_feed_number_of_items;
}
cell broadcast_producer
{
    [GraphEdge]
    optional List<CellId> broadcast_producer_produces;
    [GraphEdge]
    optional List<CellId> broadcast_producer_location;
}
cell broadcast_radio_affiliation_duration
{
    [GraphEdge]
    optional CellId broadcast_radio_affiliation_duration_station;
    [GraphEdge]
    optional CellId broadcast_radio_affiliation_duration_network;
}
cell broadcast_radio_format
{
    [GraphEdge]
    optional List<CellId> broadcast_radio_format_stations;
}
cell broadcast_radio_network
{
    [GraphEdge]
    optional List<CellId> broadcast_radio_network_affiliates;
}
cell broadcast_radio_station
{
    [GraphEdge]
    optional List<CellId> broadcast_radio_station_format;
    optional List<u8string> broadcast_radio_station_owner;
    [GraphEdge]
    optional List<CellId> broadcast_radio_station_serves_area;
    optional List<u8string> broadcast_radio_station_slogan;
    [GraphEdge]
    optional List<CellId> broadcast_radio_station_affiliations;
    [GraphEdge]
    optional List<CellId> broadcast_radio_station_former_callsign;
    optional List<u8string> broadcast_radio_station_callsign_meaning;
    optional List<u8string> broadcast_radio_station_branding;
}
cell broadcast_radio_station_owner
{
    [GraphEdge]
    optional List<CellId> broadcast_radio_station_owner_radio_stations;
}
cell broadcast_tv_affiliation_duration
{
    [GraphEdge]
    optional CellId broadcast_tv_affiliation_duration_network;
    [GraphEdge]
    optional CellId broadcast_tv_affiliation_duration_station;
}
cell broadcast_tv_channel
{
    [GraphEdge]
    optional List<CellId> broadcast_tv_channel_satellite_availability;
    [GraphEdge]
    optional List<CellId> broadcast_tv_channel_language;
    [GraphEdge]
    optional List<CellId> broadcast_tv_channel_cable_availability;
    [GraphEdge]
    optional List<CellId> broadcast_tv_channel_network;
}
cell broadcast_tv_station
{
    [GraphEdge]
    optional List<CellId> broadcast_tv_station_former_callsign;
    [GraphEdge]
    optional List<CellId> broadcast_tv_station_owner;
    optional List<u8string> broadcast_tv_station_branding;
    optional List<u8string> broadcast_tv_station_callsign_meaning;
    optional List<u8string> broadcast_tv_station_slogan;
    optional uint broadcast_tv_station_facility_id;
    optional List<u8string> broadcast_tv_station_affiliations;
}
cell broadcast_tv_station_owner
{
    [GraphEdge]
    optional List<CellId> broadcast_tv_station_owner_tv_stations;
}
cell business_acquisition
{
    [GraphEdge]
    optional CellId business_acquisition_acquiring_company;
    [GraphEdge]
    optional CellId business_acquisition_divisions_formed;
    [GraphEdge]
    optional CellId business_acquisition_company_acquired;
}
cell business_advertising_slogan
{
    [GraphEdge]
    optional List<CellId> business_advertising_slogan_brand;
}
cell business_asset
{
    [GraphEdge]
    optional List<CellId> business_asset_owners;
}
cell business_asset_owner
{
    [GraphEdge]
    optional List<CellId> business_asset_owner_assets_owned;
}
cell business_asset_ownership
{
    optional float business_asset_ownership_percentage_ownership;
    [GraphEdge]
    optional CellId business_asset_ownership_owned_asset;
    [GraphEdge]
    optional CellId business_asset_ownership_owner;
}
cell business_board_member
{
    [GraphEdge]
    optional List<CellId> business_board_member_leader_of;
    [GraphEdge]
    optional List<CellId> business_board_member_organization_board_memberships;
}
cell business_brand
{
    [GraphEdge]
    optional List<CellId> business_brand_slogans;
    [GraphEdge]
    optional List<CellId> business_brand_colors;
    [GraphEdge]
    optional List<CellId> business_brand_parent_brand;
    [GraphEdge]
    optional List<CellId> business_brand_product_lines;
    [GraphEdge]
    optional List<CellId> business_brand_includes_brands;
    [GraphEdge]
    optional List<CellId> business_brand_owner_s;
    [GraphEdge]
    optional List<CellId> business_brand_products;
}
cell business_brand_colors
{
    [GraphEdge]
    optional CellId business_brand_colors_brand;
    [GraphEdge]
    optional List<CellId> business_brand_colors_colors;
}
cell business_brand_slogan
{
    [GraphEdge]
    optional CellId business_brand_slogan_slogan;
    [GraphEdge]
    optional CellId business_brand_slogan_brand;
}
cell business_business_location
{
    [GraphEdge]
    optional List<CellId> business_business_location_reviews;
    [GraphEdge]
    optional List<CellId> business_business_location_in_shopping_center;
    [GraphEdge]
    optional List<CellId> business_business_location_parent_company;
    [GraphEdge]
    optional List<CellId> business_business_location_hours;
    [GraphEdge]
    optional List<CellId> business_business_location_phone_number;
    [GraphEdge]
    optional List<CellId> business_business_location_address;
}
cell business_business_operation
{
    [GraphEdge]
    optional List<CellId> business_business_operation_current_liabilities;
    [GraphEdge]
    optional List<CellId> business_business_operation_industry;
    [GraphEdge]
    optional List<CellId> business_business_operation_major_customer;
    [GraphEdge]
    optional List<CellId> business_business_operation_competitive_space;
    [GraphEdge]
    optional CellId business_business_operation_market_capitalization;
    [GraphEdge]
    optional CellId business_business_operation_total_annual_expenses;
    [GraphEdge]
    optional List<CellId> business_business_operation_cash;
    [GraphEdge]
    optional List<CellId> business_business_operation_current_assets;
    [GraphEdge]
    optional List<CellId> business_business_operation_liabilities;
    [GraphEdge]
    optional List<CellId> business_business_operation_assets;
    [GraphEdge]
    optional List<CellId> business_business_operation_revenue;
    [GraphEdge]
    optional List<CellId> business_business_operation_net_profit;
    [GraphEdge]
    optional List<CellId> business_business_operation_retained_earnings;
    [GraphEdge]
    optional List<CellId> business_business_operation_operating_income;
}
cell business_company_advisor
{
    [GraphEdge]
    optional List<CellId> business_company_advisor_companies_advised;
}
cell business_company_brand_relationship
{
    [GraphEdge]
    optional CellId business_company_brand_relationship_company;
    [GraphEdge]
    optional CellId business_company_brand_relationship_brand;
}
cell business_company_name_change
{
    [GraphEdge]
    optional CellId business_company_name_change_company;
    optional u8string business_company_name_change_new_name;
}
cell business_company_product_line_relationship
{
    [GraphEdge]
    optional CellId business_company_product_line_relationship_product_line;
    [GraphEdge]
    optional CellId business_company_product_line_relationship_company;
}
cell business_company_product_relationship
{
    [GraphEdge]
    optional CellId business_company_product_relationship_company;
    [GraphEdge]
    optional CellId business_company_product_relationship_consumer_product;
}
cell business_company_termination_type
{
    [GraphEdge]
    optional List<CellId> business_company_termination_type_companies;
}
cell business_company_type
{
    optional List<u8string> business_company_type_companies_of_this_type;
}
cell business_competitive_space
{
    [GraphEdge]
    optional List<CellId> business_competitive_space_company;
    [GraphEdge]
    optional CellId business_competitive_space_market_size;
    [GraphEdge]
    optional List<CellId> business_competitive_space_related_industries;
    [GraphEdge]
    optional List<CellId> business_competitive_space_market_share;
}
cell business_competitive_space_mediator
{
    optional byte business_competitive_space_mediator_portion;
    [GraphEdge]
    optional CellId business_competitive_space_mediator_space;
    [GraphEdge]
    optional CellId business_competitive_space_mediator_company;
    [GraphEdge]
    optional List<CellId> business_competitive_space_mediator_brand;
}
cell business_consumer_company
{
    [GraphEdge]
    optional List<CellId> business_consumer_company_brands;
    [GraphEdge]
    optional List<CellId> business_consumer_company_products;
    [GraphEdge]
    optional List<CellId> business_consumer_company_product_lines;
}
cell business_consumer_product
{
    optional u8string business_consumer_product_asin;
    optional List<ulong> business_consumer_product_gtin;
    [GraphEdge]
    optional List<CellId> business_consumer_product_company;
    [GraphEdge]
    optional List<CellId> business_consumer_product_themes;
    [GraphEdge]
    optional List<CellId> business_consumer_product_product_line;
    [GraphEdge]
    optional List<CellId> business_consumer_product_msrp;
    [GraphEdge]
    optional List<CellId> business_consumer_product_external_reviews;
    [GraphEdge]
    optional List<CellId> business_consumer_product_purchase_links;
    [GraphEdge]
    optional CellId business_consumer_product_official_webpage;
    [GraphEdge]
    optional List<CellId> business_consumer_product_brand;
    optional List<u8string> business_consumer_product_product_number;
    [GraphEdge]
    optional List<CellId> business_consumer_product_category;
}
cell business_currency_sub_unit
{
    [GraphEdge]
    optional CellId business_currency_sub_unit_currency;
    optional uint business_currency_sub_unit_quantity;
}
cell business_customer
{
    [GraphEdge]
    optional List<CellId> business_customer_supplier;
}
cell business_defunct_company
{
    [GraphEdge]
    optional List<CellId> business_defunct_company_reason_for_ceasing_operations;
}
cell business_employer
{
    [GraphEdge]
    optional List<CellId> business_employer_number_of_employees;
    [GraphEdge]
    optional List<CellId> business_employer_employees;
}
cell business_employment_tenure
{
    [GraphEdge]
    optional CellId business_employment_tenure_company;
    [GraphEdge]
    optional CellId business_employment_tenure_person;
    [GraphEdge]
    optional CellId business_employment_tenure_title;
}
cell business_endorsed_product
{
    [GraphEdge]
    optional List<CellId> business_endorsed_product_endorsements;
}
cell business_holding
{
    [GraphEdge]
    optional CellId business_holding_holder;
    [GraphEdge]
    optional CellId business_holding_currency;
    optional uint business_holding_units;
    optional float business_holding_amount;
    [GraphEdge]
    optional CellId business_holding_issue;
}
cell business_industry
{
    [GraphEdge]
    optional List<CellId> business_industry_trade_unions;
    [GraphEdge]
    optional List<CellId> business_industry_child_industry;
    optional List<u8string> business_industry_naics_2007;
    [GraphEdge]
    optional List<CellId> business_industry_parent_industry;
    [GraphEdge]
    optional List<CellId> business_industry_companies;
}
cell business_issue
{
    [GraphEdge]
    optional List<CellId> business_issue_market_capitalization;
    [GraphEdge]
    optional List<CellId> business_issue_holders;
    [GraphEdge]
    optional CellId business_issue_type_of_issue;
    [GraphEdge]
    optional List<CellId> business_issue_trading_symbol;
    [GraphEdge]
    optional CellId business_issue_issuer;
}
cell business_issue_type
{
    [GraphEdge]
    optional List<CellId> business_issue_type_issues_of_this_type;
}
cell business_issuer
{
    [GraphEdge]
    optional List<CellId> business_issuer_issue;
}
cell business_job_title
{
    [GraphEdge]
    optional List<CellId> business_job_title_people_with_this_title;
}
cell business_market_share
{
    optional byte business_market_share_percentage;
    [GraphEdge]
    optional CellId business_market_share_region;
    [GraphEdge]
    optional CellId business_market_share_company;
    [GraphEdge]
    optional CellId business_market_share_space;
}
cell business_market_size
{
    [GraphEdge]
    optional CellId business_market_size_region;
    [GraphEdge]
    optional CellId business_market_size_currency;
    optional float business_market_size_amount;
}
cell business_oil_field
{
    [GraphEdge]
    optional CellId business_oil_field_cumulative_production;
    [GraphEdge]
    optional CellId business_oil_field_annual_production;
    [GraphEdge]
    optional CellId business_oil_field_producing_wells;
    [GraphEdge]
    optional CellId business_oil_field_estimated_reserves;
}
cell business_open_times
{
    [GraphEdge]
    optional CellId business_open_times_weekday_end;
    [GraphEdge]
    optional CellId business_open_times_weekday_start;
    [GraphEdge]
    optional CellId business_open_times_time_zone;
}
cell business_product_category
{
    [GraphEdge]
    optional List<CellId> business_product_category_product_lines;
    [GraphEdge]
    optional List<CellId> business_product_category_products;
}
cell business_product_endorsee
{
    [GraphEdge]
    optional List<CellId> business_product_endorsee_endorsements;
}
cell business_product_endorsement
{
    [GraphEdge]
    optional CellId business_product_endorsement_product;
    [GraphEdge]
    optional CellId business_product_endorsement_endorser;
    [GraphEdge]
    optional CellId business_product_endorsement_endorsee;
}
cell business_product_endorser
{
    [GraphEdge]
    optional List<CellId> business_product_endorser_products_endorsed;
}
cell business_product_ingredient
{
    [GraphEdge]
    optional List<CellId> business_product_ingredient_derivatives;
    [GraphEdge]
    optional CellId business_product_ingredient_derived_from;
    [GraphEdge]
    optional CellId business_product_ingredient_generalization_of;
    [GraphEdge]
    optional CellId business_product_ingredient_variety_of;
    [GraphEdge]
    optional List<CellId> business_product_ingredient_used_in_products;
    [GraphEdge]
    optional CellId business_product_ingredient_used_in_other_ingredients;
    [GraphEdge]
    optional List<CellId> business_product_ingredient_ingredients;
}
cell business_product_line
{
    [GraphEdge]
    optional CellId business_product_line_successor_product_line;
    [GraphEdge]
    optional List<CellId> business_product_line_producer_s;
    [GraphEdge]
    optional CellId business_product_line_predecessor_product_line;
    [GraphEdge]
    optional List<CellId> business_product_line_themes;
    [GraphEdge]
    optional List<CellId> business_product_line_parent_product_line;
    [GraphEdge]
    optional List<CellId> business_product_line_products;
    [GraphEdge]
    optional List<CellId> business_product_line_category;
    [GraphEdge]
    optional List<CellId> business_product_line_brand;
    [GraphEdge]
    optional List<CellId> business_product_line_includes_product_lines;
}
cell business_product_theme
{
    [GraphEdge]
    optional List<CellId> business_product_theme_product_lines;
    [GraphEdge]
    optional List<CellId> business_product_theme_products;
}
cell business_product_with_ingredients
{
    [GraphEdge]
    optional List<CellId> business_product_with_ingredients_ingredients;
}
cell business_shareholder
{
    [GraphEdge]
    optional List<CellId> business_shareholder_holding;
}
cell business_shopping_center
{
    optional u8string business_shopping_center_number_of_stores;
    optional u8string business_shopping_center_mall_id;
    optional uint business_shopping_center_retail_floor_space_m_2;
    [GraphEdge]
    optional CellId business_shopping_center_number_of_anchors;
    [GraphEdge]
    optional List<CellId> business_shopping_center_owner;
    optional List<u8string> business_shopping_center_address;
    [GraphEdge]
    optional List<CellId> business_shopping_center_store;
}
cell business_shopping_center_owner
{
    [GraphEdge]
    optional List<CellId> business_shopping_center_owner_shopping_centers_owned;
}
cell business_sponsor
{
    [GraphEdge]
    optional List<CellId> business_sponsor_sponsorship;
}
cell business_sponsored_recipient
{
    [GraphEdge]
    optional List<CellId> business_sponsored_recipient_sponsorship;
}
cell business_sponsorship
{
    [GraphEdge]
    optional CellId business_sponsorship_sponsored_recipient;
    [GraphEdge]
    optional CellId business_sponsorship_sponsored_by;
}
cell business_stock_ticker_symbol
{
    optional u8string business_stock_ticker_symbol_ticker_symbol;
    [GraphEdge]
    optional CellId business_stock_ticker_symbol_issue;
    [GraphEdge]
    optional List<CellId> business_stock_ticker_symbol_stock_exchange;
}
cell business_trade_union
{
    [GraphEdge]
    optional List<CellId> business_trade_union_professions_represented;
    [GraphEdge]
    optional CellId business_trade_union_industry;
}
cell celebrities_abused_substance
{
    [GraphEdge]
    optional List<CellId> celebrities_abused_substance_abused_by;
}
cell celebrities_celebrity
{
    [GraphEdge]
    optional List<CellId> celebrities_celebrity_substance_abuse_problems;
    [GraphEdge]
    optional List<CellId> celebrities_celebrity_legal_entanglements;
    [GraphEdge]
    optional List<CellId> celebrities_celebrity_celebrity_friends;
    [GraphEdge]
    optional List<CellId> celebrities_celebrity_net_worth;
    [GraphEdge]
    optional List<CellId> celebrities_celebrity_celebrity_rivals;
    [GraphEdge]
    optional List<CellId> celebrities_celebrity_sexual_relationships;
    [GraphEdge]
    optional List<CellId> celebrities_celebrity_sexual_orientation;
    [GraphEdge]
    optional List<CellId> celebrities_celebrity_rehab_history;
}
cell celebrities_friendship
{
    [GraphEdge]
    optional List<CellId> celebrities_friendship_friend;
}
cell celebrities_legal_entanglement
{
    [GraphEdge]
    optional CellId celebrities_legal_entanglement_offense;
    [GraphEdge]
    optional CellId celebrities_legal_entanglement_location;
    [GraphEdge]
    optional CellId celebrities_legal_entanglement_celebrity;
}
cell celebrities_reason_for_arrest
{
    [GraphEdge]
    optional List<CellId> celebrities_reason_for_arrest_celebrities_charged_or_arrested;
}
cell celebrities_rehab
{
    [GraphEdge]
    optional CellId celebrities_rehab_rehab_facility;
    [GraphEdge]
    optional CellId celebrities_rehab_celebrity;
}
cell celebrities_rehab_facility
{
    [GraphEdge]
    optional List<CellId> celebrities_rehab_facility_celebrity_patients;
}
cell celebrities_rivalry
{
    [GraphEdge]
    optional List<CellId> celebrities_rivalry_rival;
}
cell celebrities_romantic_relationship
{
    [GraphEdge]
    optional List<CellId> celebrities_romantic_relationship_celebrity;
    [GraphEdge]
    optional CellId celebrities_romantic_relationship_relationship_type;
}
cell celebrities_sexual_orientation
{
    [GraphEdge]
    optional List<CellId> celebrities_sexual_orientation_celebrities;
}
cell celebrities_sexual_orientation_phase
{
    [GraphEdge]
    optional CellId celebrities_sexual_orientation_phase_celebrity;
    [GraphEdge]
    optional CellId celebrities_sexual_orientation_phase_sexual_orientation;
}
cell celebrities_substance_abuse_problem
{
    [GraphEdge]
    optional CellId celebrities_substance_abuse_problem_celebrity;
    [GraphEdge]
    optional CellId celebrities_substance_abuse_problem_substance;
}
cell celebrities_supercouple
{
    [GraphEdge]
    optional List<CellId> celebrities_supercouple_partners;
}
cell chemistry_atomic_mass
{
    optional float chemistry_atomic_mass_mass;
    optional float chemistry_atomic_mass_uncertainty;
}
cell chemistry_chemical_classification
{
    [GraphEdge]
    optional List<CellId> chemistry_chemical_classification_higher_classifications;
    [GraphEdge]
    optional List<CellId> chemistry_chemical_classification_lower_classifications;
    [GraphEdge]
    optional List<CellId> chemistry_chemical_classification_chemicals_of_this_type;
}
cell chemistry_chemical_compound
{
    optional List<u8string> chemistry_chemical_compound_inchikey;
    optional List<u8string> chemistry_chemical_compound_structure_smiles;
    optional float chemistry_chemical_compound_density;
    optional float chemistry_chemical_compound_molar_entropy_gas;
    optional List<u8string> chemistry_chemical_compound_structure_inchi;
    optional float chemistry_chemical_compound_critical_point_temperature;
    [GraphEdge]
    optional CellId chemistry_chemical_compound_phase_at_stp;
    optional float chemistry_chemical_compound_triple_point_pressure;
    optional float chemistry_chemical_compound_entropy_change_of_fusion;
    optional float chemistry_chemical_compound_enthalpy_change_of_vaporization;
    [GraphEdge]
    optional List<CellId> chemistry_chemical_compound_classifications;
    optional float chemistry_chemical_compound_enthalpy_change_of_fusion;
    optional List<u8string> chemistry_chemical_compound_pubchem_id;
    optional float chemistry_chemical_compound_heat_capacity_liquid;
    optional float chemistry_chemical_compound_melting_point;
    optional float chemistry_chemical_compound_heat_capacity_gas;
    optional float chemistry_chemical_compound_average_molar_mass;
    optional float chemistry_chemical_compound_critical_point_pressure;
    optional List<u8string> chemistry_chemical_compound_iuapc_id;
    optional float chemistry_chemical_compound_molar_entropy_liquid;
    [GraphEdge]
    optional List<CellId> chemistry_chemical_compound_solubility;
    optional float chemistry_chemical_compound_triple_point_temperature;
    optional float chemistry_chemical_compound_boiling_point;
    optional u8string chemistry_chemical_compound_formula;
    optional List<u8string> chemistry_chemical_compound_cas_id;
    optional float chemistry_chemical_compound_enthalpy_change_of_formation_solid;
    optional float chemistry_chemical_compound_molar_entropy_solid;
    optional float chemistry_chemical_compound_vapor_pressure;
}
cell chemistry_chemical_element
{
    optional float chemistry_chemical_element_atomic_radius;
    optional List<u8string> chemistry_chemical_element_isotopes;
    [GraphEdge]
    optional CellId chemistry_chemical_element_periodic_table_block;
    [GraphEdge]
    optional CellId chemistry_chemical_element_atomic_mass;
    [GraphEdge]
    optional List<CellId> chemistry_chemical_element_chemical_series;
    optional u8string chemistry_chemical_element_cas_id;
    optional float chemistry_chemical_element_van_der_waals_radius;
    optional byte chemistry_chemical_element_atomic_number;
    optional float chemistry_chemical_element_ionization_energy;
    optional u8string chemistry_chemical_element_symbol;
    [GraphEdge]
    optional CellId chemistry_chemical_element_electron_affinity;
    optional float chemistry_chemical_element_electronegativity;
    optional float chemistry_chemical_element_boiling_point;
    [GraphEdge]
    optional List<CellId> chemistry_chemical_element_discovering_country;
    optional u8string chemistry_chemical_element_electrons_per_shell;
    optional u8string chemistry_chemical_element_electron_configuration;
    [GraphEdge]
    optional List<CellId> chemistry_chemical_element_discoverer;
    optional float chemistry_chemical_element_covalent_radius;
    optional float chemistry_chemical_element_melting_point;
}
cell chemistry_chemical_series
{
    [GraphEdge]
    optional List<CellId> chemistry_chemical_series_elements;
}
cell chemistry_electron_affinity
{
    optional float chemistry_electron_affinity_uncertainty;
    optional float chemistry_electron_affinity_affinity_value;
}
cell chemistry_element_discoverer
{
    [GraphEdge]
    optional List<CellId> chemistry_element_discoverer_discovered;
}
cell chemistry_isotope
{
    [GraphEdge]
    optional List<CellId> chemistry_isotope_decay_modes;
    [GraphEdge]
    optional CellId chemistry_isotope_isotope_of;
    optional byte chemistry_isotope_mass_number;
    [GraphEdge]
    optional CellId chemistry_isotope_mass;
    optional u8string chemistry_isotope_stable;
    [GraphEdge]
    optional CellId chemistry_isotope_spin;
    optional float chemistry_isotope_half_life;
    optional float chemistry_isotope_natural_abundance;
    optional float chemistry_isotope_magnetic_moment;
}
cell chemistry_isotope_decay
{
    optional float chemistry_isotope_decay_percentage;
    [GraphEdge]
    optional CellId chemistry_isotope_decay_isotope;
    [GraphEdge]
    optional CellId chemistry_isotope_decay_decay_mode;
    optional float chemistry_isotope_decay_decay_energy;
}
cell chemistry_molecular_entity
{
    optional u8string chemistry_molecular_entity_chebi_id;
}
cell chemistry_particle_spin
{
    optional List<u8string> chemistry_particle_spin_isotopes;
}
cell chemistry_periodic_table_block
{
    [GraphEdge]
    optional List<CellId> chemistry_periodic_table_block_elements;
}
cell chemistry_phase_of_matter
{
    [GraphEdge]
    optional List<CellId> chemistry_phase_of_matter_compounds_in_this_phase_at_stp;
}
cell chemistry_radioactive_decay_mode
{
    [GraphEdge]
    optional List<CellId> chemistry_radioactive_decay_mode_isotopes;
}
cell chemistry_solubility
{
    [GraphEdge]
    optional List<CellId> chemistry_solubility_substances;
}
cell chemistry_solubility_relationship
{
    [GraphEdge]
    optional CellId chemistry_solubility_relationship_solute;
    [GraphEdge]
    optional CellId chemistry_solubility_relationship_solubility;
    [GraphEdge]
    optional CellId chemistry_solubility_relationship_solvent;
}
cell chess_chess_game
{
    [GraphEdge]
    optional List<CellId> chess_chess_game_history;
    [GraphEdge]
    optional CellId chess_chess_game_location;
    [GraphEdge]
    optional List<CellId> chess_chess_game_players;
}
cell chess_chess_game_participation
{
    [GraphEdge]
    optional CellId chess_chess_game_participation_game;
    [GraphEdge]
    optional CellId chess_chess_game_participation_color;
    [GraphEdge]
    optional CellId chess_chess_game_participation_player;
    [GraphEdge]
    optional CellId chess_chess_game_participation_outcome;
}
cell chess_chess_move
{
    [GraphEdge]
    optional CellId chess_chess_move_game;
    optional u8string chess_chess_move_white_move;
    optional byte chess_chess_move_sequence;
    optional u8string chess_chess_move_black_move;
}
cell chess_chess_player
{
    [GraphEdge]
    optional List<CellId> chess_chess_player_games_played;
}
cell comedy_comedian
{
    [GraphEdge]
    optional CellId comedy_comedian_groups;
    [GraphEdge]
    optional CellId comedy_comedian_genres;
}
cell comedy_comedy_genre
{
    [GraphEdge]
    optional List<CellId> comedy_comedy_genre_comedians;
}
cell comedy_comedy_group
{
    [GraphEdge]
    optional List<CellId> comedy_comedy_group_members;
}
cell comedy_comedy_group_membership
{
    [GraphEdge]
    optional CellId comedy_comedy_group_membership_member;
    [GraphEdge]
    optional CellId comedy_comedy_group_membership_group;
}
cell comic_books_comic_book_character
{
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_character_cover_appearances;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_character_story_specific_appearances;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_character_created_by;
    [GraphEdge]
    optional CellId comic_books_comic_book_character_primary_universe;
    [GraphEdge]
    optional CellId comic_books_comic_book_character_first_appearance;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_character_regular_featured_appearances;
}
cell comic_books_comic_book_colorist
{
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_colorist_comic_covers_colored;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_colorist_comic_stories_colored;
}
cell comic_books_comic_book_creator
{
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_creator_series_created;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_creator_characters_created;
}
cell comic_books_comic_book_editor
{
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_editor_issues_edited;
}
cell comic_books_comic_book_fictional_universe
{
    [GraphEdge]
    optional CellId comic_books_comic_book_fictional_universe_primary_publisher;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_fictional_universe_characters_primarily_appearing_in_this_universe;
}
cell comic_books_comic_book_genre
{
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_genre_comic_book_series_in_this_genre;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_genre_stories_in_this_genre;
}
cell comic_books_comic_book_inker
{
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_inker_comic_books_inked;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_inker_comic_covers_inked;
}
cell comic_books_comic_book_issue
{
    optional byte comic_books_comic_book_issue_print_run;
    [GraphEdge]
    optional CellId comic_books_comic_book_issue_next_issue;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_issue_editor;
    [GraphEdge]
    optional CellId comic_books_comic_book_issue_cover_letters;
    [GraphEdge]
    optional CellId comic_books_comic_book_issue_cover_pencils;
    [GraphEdge]
    optional CellId comic_books_comic_book_issue_cover_colors;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_issue_cover_inks;
    [GraphEdge]
    optional CellId comic_books_comic_book_issue_previous_issue;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_issue_contents;
    optional ushort comic_books_comic_book_issue_issue_number;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_issue_characters_on_cover;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_issue_part_of_series;
    [GraphEdge]
    optional CellId comic_books_comic_book_issue_cover_price;
}
cell comic_books_comic_book_letterer
{
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_letterer_comic_stories_lettered;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_letterer_comic_covers_lettered;
}
cell comic_books_comic_book_penciler
{
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_penciler_comic_books_penciled;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_penciler_comic_covers_penciled;
}
cell comic_books_comic_book_publisher
{
    optional List<u8string> comic_books_comic_book_publisher_comic_book_series_published;
}
cell comic_books_comic_book_series
{
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_series_publisher;
    optional List<u8string> comic_books_comic_book_series_created_by;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_series_continued_by;
    optional List<u8string> comic_books_comic_book_series_featured_characters;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_series_genre;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_series_issues;
    [GraphEdge]
    optional CellId comic_books_comic_book_series_final_issue;
    [GraphEdge]
    optional CellId comic_books_comic_book_series_first_issue;
    optional byte comic_books_comic_book_series_number_of_issues;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_series_continues;
}
cell comic_books_comic_book_story
{
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_story_characters;
    [GraphEdge]
    optional CellId comic_books_comic_book_story_additional_plotting;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_story_script;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_story_colors;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_story_genre;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_story_inks;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_story_appeared_in;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_story_pencils;
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_story_part_of_story_arc;
    [GraphEdge]
    optional CellId comic_books_comic_book_story_letters;
}
cell comic_books_comic_book_story_arc
{
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_story_arc_spanning;
}
cell comic_books_comic_book_writer
{
    [GraphEdge]
    optional List<CellId> comic_books_comic_book_writer_comic_books_written;
    [GraphEdge]
    optional CellId comic_books_comic_book_writer_additional_plotting_contributions;
}
cell comic_books_comic_story_printing
{
    optional byte comic_books_comic_story_printing_start_page;
    optional byte comic_books_comic_story_printing_end_page;
    [GraphEdge]
    optional CellId comic_books_comic_story_printing_issue;
    [GraphEdge]
    optional CellId comic_books_comic_story_printing_story;
}
cell comic_strips_comic_strip
{
    [GraphEdge]
    optional List<CellId> comic_strips_comic_strip_characters;
    [GraphEdge]
    optional List<CellId> comic_strips_comic_strip_genre;
    [GraphEdge]
    optional List<CellId> comic_strips_comic_strip_syndicate;
    [GraphEdge]
    optional List<CellId> comic_strips_comic_strip_creator_of_strip;
}
cell comic_strips_comic_strip_character
{
    [GraphEdge]
    optional List<CellId> comic_strips_comic_strip_character_comic_strips_appeared_in;
}
cell comic_strips_comic_strip_creator
{
    [GraphEdge]
    optional List<CellId> comic_strips_comic_strip_creator_comic_strips_written;
}
cell comic_strips_comic_strip_creator_duration
{
    [GraphEdge]
    optional CellId comic_strips_comic_strip_creator_duration_creator_role;
    [GraphEdge]
    optional CellId comic_strips_comic_strip_creator_duration_comic_strip;
    [GraphEdge]
    optional CellId comic_strips_comic_strip_creator_duration_creator_of_strip;
}
cell comic_strips_comic_strip_creator_role
{
    [GraphEdge]
    optional List<CellId> comic_strips_comic_strip_creator_role_creators;
}
cell comic_strips_comic_strip_genre
{
    [GraphEdge]
    optional List<CellId> comic_strips_comic_strip_genre_comic_strips_of_this_genre;
}
cell comic_strips_comic_strip_syndicate
{
    [GraphEdge]
    optional List<CellId> comic_strips_comic_strip_syndicate_comic_strips_syndicated;
}
cell comic_strips_comic_strip_syndicate_duration
{
    [GraphEdge]
    optional CellId comic_strips_comic_strip_syndicate_duration_comic_strip;
    [GraphEdge]
    optional CellId comic_strips_comic_strip_syndicate_duration_syndicate;
}
cell common_annotation_category
{
    [GraphEdge]
    optional List<CellId> common_annotation_category_child_categories;
    [GraphEdge]
    optional List<CellId> common_annotation_category_annotations;
    [GraphEdge]
    optional CellId common_annotation_category_parent_category;
}
cell common_annotation_index
{
    [GraphEdge]
    optional List<CellId> common_annotation_index_annotations;
}
cell common_document
{
    [GraphEdge]
    optional CellId common_document_content;
    [GraphEdge]
    optional List<CellId> common_document_replies;
    [GraphEdge]
    optional CellId common_document_lang;
    [GraphEdge]
    optional List<CellId> common_document_contributor;
    optional List<u8string> common_document_text;
    [GraphEdge]
    optional List<CellId> common_document_author;
    [GraphEdge]
    optional CellId common_document_in_reply_to;
}
cell common_foreign_key_property
{
    [GraphEdge]
    optional CellId common_foreign_key_property_uri_template;
    optional u8string common_foreign_key_property_uri_encoding;
}
cell common_identity
{
    optional List<u8string> common_identity_clicker_tv_id;
    optional List<u8string> common_identity_daylife_topic;
    optional u8string common_identity_guardian_uk_tag;
    optional List<ushort> common_identity_sfiff_id;
}
cell common_image
{
    [GraphEdge]
    optional List<CellId> common_image_rights_holder;
    optional List<u8string> common_image_image_caption;
    [GraphEdge]
    optional CellId common_image_size;
    [GraphEdge]
    optional List<CellId> common_image_image_tags;
    [GraphEdge]
    optional List<CellId> common_image_appears_in_topic_gallery;
    [GraphEdge]
    optional List<CellId> common_image_image_location;
    optional u8string common_image_rights_holder_text_attribution;
}
cell common_license
{
    optional u8string common_license_version;
    [GraphEdge]
    optional List<CellId> common_license_license_domain;
    optional u8string common_license_boilerplate_text;
}
cell common_license_permission
{
    [GraphEdge]
    optional List<CellId> common_license_permission_licensed_objects;
}
cell common_license_requirement
{
    [GraphEdge]
    optional List<CellId> common_license_requirement_licensed_objects;
}
cell common_license_usage
{
    [GraphEdge]
    optional CellId common_license_usage_licensed_object;
    optional u8string common_license_usage_attribution_text;
    [GraphEdge]
    optional List<CellId> common_license_usage_permissions;
    [GraphEdge]
    optional CellId common_license_usage_requirements;
}
cell common_licensed_object
{
    optional u8string common_licensed_object_attribution_text;
    [GraphEdge]
    optional CellId common_licensed_object_license_usage;
    [GraphEdge]
    optional List<CellId> common_licensed_object_license;
    optional u8string common_licensed_object_provenance;
}
cell common_media_rights_holder
{
    [GraphEdge]
    optional List<CellId> common_media_rights_holder_images;
}
cell common_notable_for
{
    optional u8string common_notable_for_display_name;
}
cell common_phone_number
{
    optional byte common_phone_number_country_code;
    optional u8string common_phone_number_note;
    [GraphEdge]
    optional List<CellId> common_phone_number_service_location;
    [GraphEdge]
    optional List<CellId> common_phone_number_category;
    optional u8string common_phone_number_number;
}
cell common_rawstring_property
{
    [GraphEdge]
    optional CellId common_rawstring_property_uri_template;
}
cell common_resource
{
    [GraphEdge]
    optional List<CellId> common_resource_annotations;
}
cell common_topic
{
    optional List<u8string> common_topic_alias;
    [GraphEdge]
    optional List<CellId> common_topic_subject_of;
    optional u8string common_topic_notable_for;
    [GraphEdge]
    optional List<CellId> common_topic_notable_types;
    [GraphEdge]
    optional List<CellId> common_topic_subjects;
    optional List<u8string> common_topic_description;
    [GraphEdge]
    optional List<CellId> common_topic_article;
    [GraphEdge]
    optional List<CellId> common_topic_image;
    [GraphEdge]
    optional List<CellId> common_topic_webpage;
}
cell common_uri_property
{
    [GraphEdge]
    optional List<CellId> common_uri_property_uri_template;
}
cell common_uri_template
{
    [GraphEdge]
    optional CellId common_uri_template_key_property;
    [GraphEdge]
    optional List<CellId> common_uri_template_uri_property;
    [GraphEdge]
    optional CellId common_uri_template_ns;
    [GraphEdge]
    optional CellId common_uri_template_rawstring_property;
    optional List<u8string> common_uri_template_recognized_template;
    optional u8string common_uri_template_template;
    [GraphEdge]
    optional CellId common_uri_template_category;
}
cell common_webpage
{
    [GraphEdge]
    optional List<CellId> common_webpage_in_index;
    [GraphEdge]
    optional CellId common_webpage_resource;
    [GraphEdge]
    optional CellId common_webpage_category;
    optional u8string common_webpage_description;
    [GraphEdge]
    optional CellId common_webpage_topic;
}
cell community_discussion_thread
{
    [GraphEdge]
    optional List<CellId> community_discussion_thread_post;
    [GraphEdge]
    optional List<CellId> community_discussion_thread_topic;
    optional u8string community_discussion_thread_thread_type;
}
cell computer_computer
{
    [GraphEdge]
    optional List<CellId> computer_computer_manufacturer;
    [GraphEdge]
    optional List<CellId> computer_computer_peripherals;
    [GraphEdge]
    optional List<CellId> computer_computer_parent_model;
    [GraphEdge]
    optional List<CellId> computer_computer_processor;
    [GraphEdge]
    optional List<CellId> computer_computer_includes_models;
    [GraphEdge]
    optional List<CellId> computer_computer_key_designers;
    [GraphEdge]
    optional List<CellId> computer_computer_compatible_oses;
    [GraphEdge]
    optional List<CellId> computer_computer_emulators;
}
cell computer_computer_designer
{
    [GraphEdge]
    optional List<CellId> computer_computer_designer_computers_designed;
}
cell computer_computer_emulator
{
    [GraphEdge]
    optional List<CellId> computer_computer_emulator_computer;
    [GraphEdge]
    optional List<CellId> computer_computer_emulator_peripherals;
    [GraphEdge]
    optional List<CellId> computer_computer_emulator_peripheral_classes;
}
cell computer_computer_manufacturer_brand
{
    [GraphEdge]
    optional List<CellId> computer_computer_manufacturer_brand_computer_models;
    [GraphEdge]
    optional List<CellId> computer_computer_manufacturer_brand_computer_lines;
}
cell computer_computer_peripheral
{
    [GraphEdge]
    optional List<CellId> computer_computer_peripheral_compatible_computers;
    [GraphEdge]
    optional List<CellId> computer_computer_peripheral_peripheral_class;
    [GraphEdge]
    optional List<CellId> computer_computer_peripheral_supporting_game_versions;
    [GraphEdge]
    optional List<CellId> computer_computer_peripheral_supporting_games;
    [GraphEdge]
    optional List<CellId> computer_computer_peripheral_emulators;
}
cell computer_computer_peripheral_class
{
    [GraphEdge]
    optional CellId computer_computer_peripheral_class_instance_of;
    [GraphEdge]
    optional List<CellId> computer_computer_peripheral_class_products;
    [GraphEdge]
    optional List<CellId> computer_computer_peripheral_class_supporting_games;
    [GraphEdge]
    optional CellId computer_computer_peripheral_class_supporting_game_versions;
    [GraphEdge]
    optional List<CellId> computer_computer_peripheral_class_instances;
    [GraphEdge]
    optional List<CellId> computer_computer_peripheral_class_emulators;
}
cell computer_computer_processor
{
    [GraphEdge]
    optional List<CellId> computer_computer_processor_variants;
    [GraphEdge]
    optional List<CellId> computer_computer_processor_used_in_computers;
    [GraphEdge]
    optional List<CellId> computer_computer_processor_manufacturers;
    [GraphEdge]
    optional List<CellId> computer_computer_processor_processor_family;
}
cell computer_computing_platform
{
    [GraphEdge]
    optional List<CellId> computer_computing_platform_file_formats_supported;
}
cell computer_file_format
{
    [GraphEdge]
    optional List<CellId> computer_file_format_mime_type;
    [GraphEdge]
    optional List<CellId> computer_file_format_genre;
    [GraphEdge]
    optional List<CellId> computer_file_format_extended_from;
    [GraphEdge]
    optional List<CellId> computer_file_format_extended_to;
    [GraphEdge]
    optional List<CellId> computer_file_format_contained_by;
    optional u8string computer_file_format_magic;
    [GraphEdge]
    optional List<CellId> computer_file_format_used_on;
    [GraphEdge]
    optional List<CellId> computer_file_format_container_for;
    [GraphEdge]
    optional List<CellId> computer_file_format_written_by;
    [GraphEdge]
    optional List<CellId> computer_file_format_read_by;
    [GraphEdge]
    optional List<CellId> computer_file_format_format_creator;
    optional List<u8string> computer_file_format_extension;
}
cell computer_file_format_genre
{
    [GraphEdge]
    optional List<CellId> computer_file_format_genre_file_formats;
}
cell computer_html_layout_engine
{
    [GraphEdge]
    optional List<CellId> computer_html_layout_engine_browsers;
}
cell computer_internet_protocol
{
    [GraphEdge]
    optional List<CellId> computer_internet_protocol_software_used_by;
}
cell computer_operating_system
{
    [GraphEdge]
    optional List<CellId> computer_operating_system_includes_os_versions;
    [GraphEdge]
    optional List<CellId> computer_operating_system_supported_architectures;
    optional List<u8string> computer_operating_system_version_number;
    [GraphEdge]
    optional List<CellId> computer_operating_system_parent_os;
    [GraphEdge]
    optional List<CellId> computer_operating_system_developer;
}
cell computer_operating_system_developer
{
    [GraphEdge]
    optional List<CellId> computer_operating_system_developer_operating_systems_developed;
}
cell computer_os_compatibility
{
    optional u8string computer_os_compatibility_dot_version_high;
    [GraphEdge]
    optional CellId computer_os_compatibility_operating_system;
    [GraphEdge]
    optional CellId computer_os_compatibility_computer;
    optional u8string computer_os_compatibility_dot_version_low;
}
cell computer_processor_manufacturer
{
    [GraphEdge]
    optional List<CellId> computer_processor_manufacturer_processors_manufactured;
}
cell computer_programming_language
{
    optional List<u8string> computer_programming_language_language_designers;
    [GraphEdge]
    optional List<CellId> computer_programming_language_dialects;
    [GraphEdge]
    optional List<CellId> computer_programming_language_influenced;
    [GraphEdge]
    optional List<CellId> computer_programming_language_language_paradigms;
    [GraphEdge]
    optional List<CellId> computer_programming_language_influenced_by;
    [GraphEdge]
    optional List<CellId> computer_programming_language_developers;
    [GraphEdge]
    optional List<CellId> computer_programming_language_parent_language;
}
cell computer_programming_language_designer
{
    [GraphEdge]
    optional List<CellId> computer_programming_language_designer_languages_designed;
}
cell computer_programming_language_developer
{
    [GraphEdge]
    optional List<CellId> computer_programming_language_developer_programming_languages_developed;
}
cell computer_programming_language_paradigm
{
    optional List<u8string> computer_programming_language_paradigm_languages;
}
cell computer_software
{
    [GraphEdge]
    optional List<CellId> computer_software_license;
    [GraphEdge]
    optional List<CellId> computer_software_compatible_oses;
    [GraphEdge]
    optional List<CellId> computer_software_software_genre;
    optional List<u8string> computer_software_developer;
    [GraphEdge]
    optional List<CellId> computer_software_languages_used;
    optional List<u8string> computer_software_latest_version;
    [GraphEdge]
    optional List<CellId> computer_software_protocols_used;
    [GraphEdge]
    optional List<CellId> computer_software_service_network;
}
cell computer_software_compatibility
{
    [GraphEdge]
    optional CellId computer_software_compatibility_software;
    [GraphEdge]
    optional CellId computer_software_compatibility_operating_system;
    optional u8string computer_software_compatibility_os_version_end;
    optional u8string computer_software_compatibility_os_version_start;
}
cell computer_software_developer
{
    [GraphEdge]
    optional List<CellId> computer_software_developer_software;
}
cell computer_software_genre
{
    [GraphEdge]
    optional List<CellId> computer_software_genre_parent_genre;
    [GraphEdge]
    optional List<CellId> computer_software_genre_software_in_genre;
    [GraphEdge]
    optional List<CellId> computer_software_genre_subgenres;
}
cell computer_software_license
{
    [GraphEdge]
    optional List<CellId> computer_software_license_versions;
    [GraphEdge]
    optional List<CellId> computer_software_license_version_of;
}
cell computer_web_browser
{
    [GraphEdge]
    optional List<CellId> computer_web_browser_extensions;
    [GraphEdge]
    optional CellId computer_web_browser_layout_engine;
}
cell computer_web_browser_extension
{
    [GraphEdge]
    optional List<CellId> computer_web_browser_extension_works_on_web_browser;
}
cell conferences_conference
{
    [GraphEdge]
    optional List<CellId> conferences_conference_focus;
    [GraphEdge]
    optional List<CellId> conferences_conference_series;
    [GraphEdge]
    optional CellId conferences_conference_venue;
    [GraphEdge]
    optional CellId conferences_conference_proceedings;
}
cell conferences_conference_proceedings
{
    [GraphEdge]
    optional CellId conferences_conference_proceedings_conference;
}
cell conferences_conference_series
{
    [GraphEdge]
    optional List<CellId> conferences_conference_series_sponsoring_organization;
    [GraphEdge]
    optional CellId conferences_conference_series_geographical_scope;
    [GraphEdge]
    optional CellId conferences_conference_series_type_of_conference;
    [GraphEdge]
    optional List<CellId> conferences_conference_series_conference;
    [GraphEdge]
    optional List<CellId> conferences_conference_series_subject;
}
cell conferences_conference_sponsor
{
    [GraphEdge]
    optional List<CellId> conferences_conference_sponsor_conferences;
}
cell conferences_conference_subject
{
    [GraphEdge]
    optional List<CellId> conferences_conference_subject_specific_conferences_about_this;
    [GraphEdge]
    optional List<CellId> conferences_conference_subject_series_of_conferences_about_this;
}
cell conferences_conference_venue
{
    [GraphEdge]
    optional List<CellId> conferences_conference_venue_conferences;
}
cell conferences_type_of_conference
{
    [GraphEdge]
    optional List<CellId> conferences_type_of_conference_conferences_of_this_type;
}
cell cricket_cricket_administrative_body
{
    [GraphEdge]
    optional CellId cricket_cricket_administrative_body_competitions;
    [GraphEdge]
    optional CellId cricket_cricket_administrative_body_jurisdiction;
}
cell cricket_cricket_bowler
{
    [GraphEdge]
    optional CellId cricket_cricket_bowler_bowling_style;
    [GraphEdge]
    optional CellId cricket_cricket_bowler_pace;
    [GraphEdge]
    optional CellId cricket_cricket_bowler_odi_bowling_stats;
    [GraphEdge]
    optional CellId cricket_cricket_bowler_test_bowling_stats;
    [GraphEdge]
    optional List<CellId> cricket_cricket_bowler_technique;
}
cell cricket_cricket_bowler_stats
{
    optional ushort cricket_cricket_bowler_stats_balls_bowled;
    optional byte cricket_cricket_bowler_stats_hat_tricks;
    [GraphEdge]
    optional CellId cricket_cricket_bowler_stats_best_record;
    optional float cricket_cricket_bowler_stats_overs;
    optional float cricket_cricket_bowler_stats_bowling_average;
    [GraphEdge]
    optional CellId cricket_cricket_bowler_stats_odi_bowler;
    optional byte cricket_cricket_bowler_stats_wickets;
    optional ushort cricket_cricket_bowler_stats_runs_against;
    optional float cricket_cricket_bowler_stats_strike_rate;
    [GraphEdge]
    optional CellId cricket_cricket_bowler_stats_best_bowling_in_a_match;
    optional float cricket_cricket_bowler_stats_economy_rate;
    optional byte cricket_cricket_bowler_stats_five_wicket_haul;
    optional byte cricket_cricket_bowler_stats_ten_wicket_haul;
    [GraphEdge]
    optional CellId cricket_cricket_bowler_stats_test_bowler;
}
cell cricket_cricket_bowling_pace
{
    optional byte cricket_cricket_bowling_pace_min_speed_kmph;
    optional byte cricket_cricket_bowling_pace_max_speed_kmph;
}
cell cricket_cricket_coach
{
    [GraphEdge]
    optional List<CellId> cricket_cricket_coach_teams;
    [GraphEdge]
    optional CellId cricket_cricket_coach_current_team;
}
cell cricket_cricket_coach_tenure
{
    [GraphEdge]
    optional CellId cricket_cricket_coach_tenure_coach;
    [GraphEdge]
    optional CellId cricket_cricket_coach_tenure_team;
}
cell cricket_cricket_match
{
    [GraphEdge]
    optional CellId cricket_cricket_match_man_of_the_match;
    optional u8string cricket_cricket_match_result;
    [GraphEdge]
    optional CellId cricket_cricket_match_toss_winner;
    [GraphEdge]
    optional CellId cricket_cricket_match_location;
    [GraphEdge]
    optional List<CellId> cricket_cricket_match_team_rosters;
    [GraphEdge]
    optional CellId cricket_cricket_match_winner;
    [GraphEdge]
    optional CellId cricket_cricket_match_match_referee;
    [GraphEdge]
    optional CellId cricket_cricket_match_third_umpire;
    [GraphEdge]
    optional List<CellId> cricket_cricket_match_field_umpires;
    [GraphEdge]
    optional CellId cricket_cricket_match_match_type;
    [GraphEdge]
    optional CellId cricket_cricket_match_series_event;
    [GraphEdge]
    optional CellId cricket_cricket_match_first_batting_team;
    [GraphEdge]
    optional CellId cricket_cricket_match_date;
}
cell cricket_cricket_match_type
{
    optional byte cricket_cricket_match_type_overs_per_inning;
    optional float cricket_cricket_match_type_maximum_duration;
    optional byte cricket_cricket_match_type_innings_per_team;
}
cell cricket_cricket_player
{
    [GraphEdge]
    optional CellId cricket_cricket_player_batting_style;
    [GraphEdge]
    optional CellId cricket_cricket_player_odi_stats;
    [GraphEdge]
    optional CellId cricket_cricket_player_test_stats;
    optional byte cricket_cricket_player_odi_stumps;
    optional u8string cricket_cricket_player_all_rounder;
    optional byte cricket_cricket_player_test_stumps;
}
cell cricket_cricket_player_debut
{
    [GraphEdge]
    optional CellId cricket_cricket_player_debut_player;
}
cell cricket_cricket_player_stats
{
    optional byte cricket_cricket_player_stats_centuries;
    optional byte cricket_cricket_player_stats_half_centuries;
    optional byte cricket_cricket_player_stats_innings;
    optional byte cricket_cricket_player_stats_run_outs;
    optional ushort cricket_cricket_player_stats_balls_faced;
    [GraphEdge]
    optional CellId cricket_cricket_player_stats_debut;
    optional byte cricket_cricket_player_stats_catches;
    optional float cricket_cricket_player_stats_strike_rate;
    optional byte cricket_cricket_player_stats_matches;
    optional float cricket_cricket_player_stats_batting_average;
    optional byte cricket_cricket_player_stats_not_outs;
    optional ushort cricket_cricket_player_stats_runs;
    optional byte cricket_cricket_player_stats_top_score;
    optional u8string cricket_cricket_player_stats_top_score_not_out;
}
cell cricket_cricket_roster
{
    [GraphEdge]
    optional List<CellId> cricket_cricket_roster_fall_of_wickets;
    [GraphEdge]
    optional CellId cricket_cricket_roster_coach;
    [GraphEdge]
    optional List<CellId> cricket_cricket_roster_bowling;
    [GraphEdge]
    optional CellId cricket_cricket_roster_captain;
    [GraphEdge]
    optional List<CellId> cricket_cricket_roster_batting;
    [GraphEdge]
    optional CellId cricket_cricket_roster_extras;
    [GraphEdge]
    optional CellId cricket_cricket_roster_roster_in_match;
    [GraphEdge]
    optional CellId cricket_cricket_roster_team_batting;
    optional byte cricket_cricket_roster_inning;
    [GraphEdge]
    optional CellId cricket_cricket_roster_keeping;
}
cell cricket_cricket_roster_batting
{
    [GraphEdge]
    optional CellId cricket_cricket_roster_batting_bowled;
    optional byte cricket_cricket_roster_batting_balls;
    [GraphEdge]
    optional CellId cricket_cricket_roster_batting_player;
    optional byte cricket_cricket_roster_batting_fours;
    optional byte cricket_cricket_roster_batting_minutes;
    optional byte cricket_cricket_roster_batting_sixes;
    optional byte cricket_cricket_roster_batting_position;
    [GraphEdge]
    optional CellId cricket_cricket_roster_batting_dismissed_by;
    optional byte cricket_cricket_roster_batting_runs;
    [GraphEdge]
    optional CellId cricket_cricket_roster_batting_roster;
    [GraphEdge]
    optional CellId cricket_cricket_roster_batting_dismissal_type;
}
cell cricket_cricket_roster_bowling
{
    [GraphEdge]
    optional CellId cricket_cricket_roster_bowling_bowler;
    optional byte cricket_cricket_roster_bowling_maidens;
    optional float cricket_cricket_roster_bowling_overs;
    [GraphEdge]
    optional CellId cricket_cricket_roster_bowling_roster;
    optional byte cricket_cricket_roster_bowling_no_balls;
    optional byte cricket_cricket_roster_bowling_wickets;
    optional byte cricket_cricket_roster_bowling_runs_against;
}
cell cricket_cricket_roster_extras
{
    [GraphEdge]
    optional CellId cricket_cricket_roster_extras_roster;
    optional byte cricket_cricket_roster_extras_wides;
    optional byte cricket_cricket_roster_extras_leg_byes;
    optional byte cricket_cricket_roster_extras_no_balls;
    optional byte cricket_cricket_roster_extras_byes;
}
cell cricket_cricket_roster_keeping
{
    optional byte cricket_cricket_roster_keeping_stumpings;
    [GraphEdge]
    optional CellId cricket_cricket_roster_keeping_player;
    [GraphEdge]
    optional CellId cricket_cricket_roster_keeping_roster;
}
cell cricket_cricket_series
{
    [GraphEdge]
    optional List<CellId> cricket_cricket_series_series_events;
    [GraphEdge]
    optional CellId cricket_cricket_series_team_two;
    [GraphEdge]
    optional CellId cricket_cricket_series_team_one;
}
cell cricket_cricket_series_event
{
    [GraphEdge]
    optional CellId cricket_cricket_series_event_matches;
    [GraphEdge]
    optional CellId cricket_cricket_series_event_series;
    [GraphEdge]
    optional CellId cricket_cricket_series_event_dates;
}
cell cricket_cricket_team
{
    [GraphEdge]
    optional List<CellId> cricket_cricket_team_country;
    [GraphEdge]
    optional CellId cricket_cricket_team_odi_stats;
    [GraphEdge]
    optional List<CellId> cricket_cricket_team_coach;
    [GraphEdge]
    optional List<CellId> cricket_cricket_team_coaches;
}
cell cricket_cricket_team_stats
{
    optional byte cricket_cricket_team_stats_matches;
    optional byte cricket_cricket_team_stats_wins;
    [GraphEdge]
    optional CellId cricket_cricket_team_stats_odi_team;
    optional byte cricket_cricket_team_stats_losses;
}
cell cricket_cricket_tournament
{
    [GraphEdge]
    optional List<CellId> cricket_cricket_tournament_events;
}
cell cricket_cricket_tournament_event
{
    [GraphEdge]
    optional List<CellId> cricket_cricket_tournament_event_teams;
    [GraphEdge]
    optional List<CellId> cricket_cricket_tournament_event_host;
    [GraphEdge]
    optional CellId cricket_cricket_tournament_event_dates;
    [GraphEdge]
    optional CellId cricket_cricket_tournament_event_tournament;
}
cell cricket_cricket_umpire
{
    optional byte cricket_cricket_umpire_test_matches_refereed;
    [GraphEdge]
    optional CellId cricket_cricket_umpire_accreditions;
    optional byte cricket_cricket_umpire_odi_matches_refereed;
}
cell cricket_cricket_umpire_panel
{
    [GraphEdge]
    optional List<CellId> cricket_cricket_umpire_panel_members;
    [GraphEdge]
    optional CellId cricket_cricket_umpire_panel_administrator;
}
cell cricket_cricket_umpire_panel_membership
{
    [GraphEdge]
    optional CellId cricket_cricket_umpire_panel_membership_umpire;
    [GraphEdge]
    optional CellId cricket_cricket_umpire_panel_membership_panel;
}
cell cricket_fall_of_wicket
{
    optional byte cricket_fall_of_wicket_score;
    optional byte cricket_fall_of_wicket_wicket_number;
    optional float cricket_fall_of_wicket_over;
    [GraphEdge]
    optional CellId cricket_fall_of_wicket_batsman;
}
cell cricket_team_inning_batting_stats
{
    optional float cricket_team_inning_batting_stats_overs;
    [GraphEdge]
    optional CellId cricket_team_inning_batting_stats_roster;
    optional byte cricket_team_inning_batting_stats_runs;
    optional byte cricket_team_inning_batting_stats_wickets;
    optional byte cricket_team_inning_batting_stats_duration;
}
cell cvg_computer_game_compilation
{
    [GraphEdge]
    optional List<CellId> cvg_computer_game_compilation_games_included;
}
cell cvg_computer_game_content_descriptor
{
    [GraphEdge]
    optional CellId cvg_computer_game_content_descriptor_rating_system;
    [GraphEdge]
    optional List<CellId> cvg_computer_game_content_descriptor_versions_with_this_descriptor;
}
cell cvg_computer_game_distribution_system
{
    [GraphEdge]
    optional List<CellId> cvg_computer_game_distribution_system_platforms_supported;
    [GraphEdge]
    optional List<CellId> cvg_computer_game_distribution_system_games_distributed;
    [GraphEdge]
    optional List<CellId> cvg_computer_game_distribution_system_payment_system;
}
cell cvg_computer_game_engine
{
    optional List<u8string> cvg_computer_game_engine_used_for_computer_games;
    [GraphEdge]
    optional CellId cvg_computer_game_engine_engine_family;
    [GraphEdge]
    optional List<CellId> cvg_computer_game_engine_developer;
    [GraphEdge]
    optional CellId cvg_computer_game_engine_predecessor_engine;
    [GraphEdge]
    optional List<CellId> cvg_computer_game_engine_successor_engine;
}
cell cvg_computer_game_engine_developer
{
    [GraphEdge]
    optional List<CellId> cvg_computer_game_engine_developer_computer_game_engines_developed;
}
cell cvg_computer_game_engine_family
{
    [GraphEdge]
    optional List<CellId> cvg_computer_game_engine_family_engines_in_this_family;
}
cell cvg_computer_game_evaluation
{
    [GraphEdge]
    optional List<CellId> cvg_computer_game_evaluation_content_descriptors;
    [GraphEdge]
    optional CellId cvg_computer_game_evaluation_release_rated;
    [GraphEdge]
    optional CellId cvg_computer_game_evaluation_rating;
}
cell cvg_computer_game_expansion
{
    optional u8string cvg_computer_game_expansion_standalone;
    [GraphEdge]
    optional CellId cvg_computer_game_expansion_expansion_for;
}
cell cvg_computer_game_mod
{
    [GraphEdge]
    optional List<CellId> cvg_computer_game_mod_game_modded;
}
cell cvg_computer_game_performance_type
{
    [GraphEdge]
    optional List<CellId> cvg_computer_game_performance_type_performances;
}
cell cvg_computer_game_rating
{
    [GraphEdge]
    optional CellId cvg_computer_game_rating_rating_system;
    [GraphEdge]
    optional List<CellId> cvg_computer_game_rating_versions_with_this_rating;
    [GraphEdge]
    optional CellId cvg_computer_game_rating_age_range;
}
cell cvg_computer_game_rating_system
{
    [GraphEdge]
    optional List<CellId> cvg_computer_game_rating_system_ratings;
    [GraphEdge]
    optional List<CellId> cvg_computer_game_rating_system_content_descriptors;
}
cell cvg_computer_game_region
{
    [GraphEdge]
    optional List<CellId> cvg_computer_game_region_versions_released_in_this_region;
}
cell cvg_computer_game_subject
{
    [GraphEdge]
    optional List<CellId> cvg_computer_game_subject_games;
}
cell cvg_computer_videogame
{
    [GraphEdge]
    optional List<CellId> cvg_computer_videogame_characters;
    [GraphEdge]
    optional List<CellId> cvg_computer_videogame_soundtracks;
    [GraphEdge]
    optional List<CellId> cvg_computer_videogame_game_series;
    optional List<u8string> cvg_computer_videogame_uses_game_engine;
    [GraphEdge]
    optional List<CellId> cvg_computer_videogame_online_reviews;
    [GraphEdge]
    optional List<CellId> cvg_computer_videogame_prequel;
    [GraphEdge]
    optional List<CellId> cvg_computer_videogame_sequel;
    optional List<u8string> cvg_computer_videogame_expansions;
    [GraphEdge]
    optional List<CellId> cvg_computer_videogame_publisher;
    [GraphEdge]
    optional List<CellId> cvg_computer_videogame_developer;
    [GraphEdge]
    optional List<CellId> cvg_computer_videogame_peripherals_supported;
    [GraphEdge]
    optional List<CellId> cvg_computer_videogame_influenced_by;
    [GraphEdge]
    optional List<CellId> cvg_computer_videogame_subjects;
    [GraphEdge]
    optional List<CellId> cvg_computer_videogame_peripheral_classes_supported;
    [GraphEdge]
    optional List<CellId> cvg_computer_videogame_platforms;
    [GraphEdge]
    optional List<CellId> cvg_computer_videogame_processors_supported;
    [GraphEdge]
    optional List<CellId> cvg_computer_videogame_gameplay_modes;
    optional List<u8string> cvg_computer_videogame_designers;
    [GraphEdge]
    optional List<CellId> cvg_computer_videogame_cvg_genre;
    [GraphEdge]
    optional List<CellId> cvg_computer_videogame_influenced;
    [GraphEdge]
    optional List<CellId> cvg_computer_videogame_versions;
    [GraphEdge]
    optional List<CellId> cvg_computer_videogame_mods;
}
cell cvg_cvg_designer
{
    [GraphEdge]
    optional List<CellId> cvg_cvg_designer_games_designed;
}
cell cvg_cvg_developer
{
    [GraphEdge]
    optional List<CellId> cvg_cvg_developer_games_developed;
    [GraphEdge]
    optional List<CellId> cvg_cvg_developer_game_versions_developed;
}
cell cvg_cvg_genre
{
    optional List<u8string> cvg_cvg_genre_games;
}
cell cvg_cvg_platform
{
    [GraphEdge]
    optional List<CellId> cvg_cvg_platform_games_on_this_platform;
    [GraphEdge]
    optional List<CellId> cvg_cvg_platform_platform_family;
    [GraphEdge]
    optional List<CellId> cvg_cvg_platform_games;
}
cell cvg_cvg_platform_family
{
    [GraphEdge]
    optional CellId cvg_cvg_platform_family_platforms;
}
cell cvg_cvg_publisher
{
    [GraphEdge]
    optional List<CellId> cvg_cvg_publisher_games_published;
    [GraphEdge]
    optional List<CellId> cvg_cvg_publisher_game_versions_published;
}
cell cvg_game_character
{
    [GraphEdge]
    optional List<CellId> cvg_game_character_games;
}
cell cvg_game_performance
{
    [GraphEdge]
    optional CellId cvg_game_performance_game;
    [GraphEdge]
    optional List<CellId> cvg_game_performance_performance_type;
    optional u8string cvg_game_performance_playable;
    [GraphEdge]
    optional CellId cvg_game_performance_voice_actor;
    [GraphEdge]
    optional CellId cvg_game_performance_character;
}
cell cvg_game_series
{
    optional List<u8string> cvg_game_series_games_in_series;
}
cell cvg_game_version
{
    [GraphEdge]
    optional List<CellId> cvg_game_version_publisher;
    [GraphEdge]
    optional List<CellId> cvg_game_version_rating;
    [GraphEdge]
    optional List<CellId> cvg_game_version_peripheral_classes_supported;
    optional u8string cvg_game_version_version_specific_name;
    [GraphEdge]
    optional List<CellId> cvg_game_version_regions;
    [GraphEdge]
    optional List<CellId> cvg_game_version_peripherals_supported;
    [GraphEdge]
    optional CellId cvg_game_version_distributed_through;
    [GraphEdge]
    optional CellId cvg_game_version_game;
    [GraphEdge]
    optional List<CellId> cvg_game_version_developer;
    [GraphEdge]
    optional CellId cvg_game_version_platform;
}
cell cvg_game_voice_actor
{
    [GraphEdge]
    optional List<CellId> cvg_game_voice_actor_computer_game_voice_performances;
}
cell cvg_gameplay_mode
{
    optional List<u8string> cvg_gameplay_mode_games_with_this_mode;
}
cell cvg_input_method
{
    optional List<u8string> cvg_input_method_games_using_this;
}
cell cvg_musical_game
{
    [GraphEdge]
    optional List<CellId> cvg_musical_game_input_method;
    [GraphEdge]
    optional List<CellId> cvg_musical_game_songs;
}
cell cvg_musical_game_song
{
    [GraphEdge]
    optional List<CellId> cvg_musical_game_song_games;
}
cell cvg_musical_game_song_relationship
{
    [GraphEdge]
    optional CellId cvg_musical_game_song_relationship_game;
    [GraphEdge]
    optional CellId cvg_musical_game_song_relationship_song;
    [GraphEdge]
    optional List<CellId> cvg_musical_game_song_relationship_platforms;
    optional u8string cvg_musical_game_song_relationship_download;
}
cell cvg_video_game_soundtrack
{
    [GraphEdge]
    optional List<CellId> cvg_video_game_soundtrack_video_game;
}
cell dataworld_attribution_namespace
{
    [GraphEdge]
    optional CellId dataworld_attribution_namespace_attribution_template;
}
cell dataworld_attribution_template
{
    [GraphEdge]
    optional List<CellId> dataworld_attribution_template_source;
    optional u8string dataworld_attribution_template_attribution_link;
    [GraphEdge]
    optional List<CellId> dataworld_attribution_template_attribution_namespace;
}
cell dataworld_data_project
{
    optional u8string dataworld_data_project_project_description;
    [GraphEdge]
    optional CellId dataworld_data_project_affected_domain;
    [GraphEdge]
    optional CellId dataworld_data_project_project_type;
}
cell dataworld_data_provider
{
    optional List<u8string> dataworld_data_provider_datasets_provided;
}
cell dataworld_data_task
{
    [GraphEdge]
    optional List<CellId> dataworld_data_task_dependency_of;
    [GraphEdge]
    optional List<CellId> dataworld_data_task_task_category;
    [GraphEdge]
    optional List<CellId> dataworld_data_task_assigned_to;
    [GraphEdge]
    optional List<CellId> dataworld_data_task_interested_user;
    [GraphEdge]
    optional List<CellId> dataworld_data_task_depends_on;
    [GraphEdge]
    optional CellId dataworld_data_task_status;
    [GraphEdge]
    optional List<CellId> dataworld_data_task_affected_type;
    optional List<u8string> dataworld_data_task_status_note;
}
cell dataworld_data_tool
{
    [GraphEdge]
    optional CellId dataworld_data_tool_used_by_tool;
    [GraphEdge]
    optional List<CellId> dataworld_data_tool_uses_tools;
    [GraphEdge]
    optional CellId dataworld_data_tool_bot_users;
    [GraphEdge]
    optional CellId dataworld_data_tool_maintainers;
}
cell dataworld_do_not_merge_mediator
{
    [GraphEdge]
    optional List<CellId> dataworld_do_not_merge_mediator_never_merge_with;
}
cell dataworld_external
{
    optional u8string dataworld_external_acts_unique;
    [GraphEdge]
    optional CellId dataworld_external_acts_like;
    [GraphEdge]
    optional CellId dataworld_external_stored_as;
}
cell dataworld_gardening_hint
{
    [GraphEdge]
    optional CellId dataworld_gardening_hint_replaced_by;
    [GraphEdge]
    optional CellId dataworld_gardening_hint_last_referenced_by;
    [GraphEdge]
    optional List<CellId> dataworld_gardening_hint_never_merge_with;
    [GraphEdge]
    optional List<CellId> dataworld_gardening_hint_split_to;
}
cell dataworld_gardening_task
{
    optional u8string dataworld_gardening_task_async_delete;
    [GraphEdge]
    optional List<CellId> dataworld_gardening_task_topics;
}
cell dataworld_incompatible_types
{
    [GraphEdge]
    optional List<CellId> dataworld_incompatible_types_types;
}
cell dataworld_information_source
{
    [GraphEdge]
    optional List<CellId> dataworld_information_source_authority;
    [GraphEdge]
    optional CellId dataworld_information_source_provider;
    [GraphEdge]
    optional List<CellId> dataworld_information_source_data_operations;
    [GraphEdge]
    optional CellId dataworld_information_source_attribution_template;
}
cell dataworld_mass_data_operation
{
    [GraphEdge]
    optional List<CellId> dataworld_mass_data_operation_authority;
    [GraphEdge]
    optional List<CellId> dataworld_mass_data_operation_operator;
    optional uint dataworld_mass_data_operation_estimated_primitive_count;
    [GraphEdge]
    optional CellId dataworld_mass_data_operation_using_account;
    [GraphEdge]
    optional List<CellId> dataworld_mass_data_operation_affected_type;
    [GraphEdge]
    optional List<CellId> dataworld_mass_data_operation_information_source;
    [GraphEdge]
    optional CellId dataworld_mass_data_operation_task;
    optional u8string dataworld_mass_data_operation_software_tool_used;
}
cell dataworld_property_value_assignment
{
    [GraphEdge]
    optional CellId dataworld_property_value_assignment_property_to_assign;
    [GraphEdge]
    optional CellId dataworld_property_value_assignment_value_if_topic;
}
cell dataworld_provenance
{
    [GraphEdge]
    optional List<CellId> dataworld_provenance_data_operation;
    [GraphEdge]
    optional CellId dataworld_provenance_tool;
    [GraphEdge]
    optional List<CellId> dataworld_provenance_source;
}
cell dataworld_public_type_schema_change
{
    [GraphEdge]
    optional List<CellId> dataworld_public_type_schema_change_types_affected;
    [GraphEdge]
    optional CellId dataworld_public_type_schema_change_user_making_changes;
}
cell dataworld_software_tool
{
    [GraphEdge]
    optional List<CellId> dataworld_software_tool_provenances;
}
cell dataworld_type_project_mediator
{
    [GraphEdge]
    optional CellId dataworld_type_project_mediator_type_needing_work;
    optional u8string dataworld_type_project_mediator_detail;
}
cell dataworld_type_projects
{
    [GraphEdge]
    optional List<CellId> dataworld_type_projects_type_needing_work;
}
cell dataworld_user_reversion_operation
{
    [GraphEdge]
    optional CellId dataworld_user_reversion_operation_reverted_user;
}
cell digicams_camera_color_filter_array_type
{
    [GraphEdge]
    optional List<CellId> digicams_camera_color_filter_array_type_cameras;
}
cell digicams_camera_compressed_format
{
    optional List<u8string> digicams_camera_compressed_format_cameras;
}
cell digicams_camera_digital_zoom_capability
{
    optional float digicams_camera_digital_zoom_capability_magnification;
    optional u8string digicams_camera_digital_zoom_capability_has_digital_zoom;
}
cell digicams_camera_dimensions
{
    optional float digicams_camera_dimensions_depth;
    optional float digicams_camera_dimensions_height;
    optional float digicams_camera_dimensions_width;
}
cell digicams_camera_format
{
    optional List<u8string> digicams_camera_format_cameras;
}
cell digicams_camera_image_ratio
{
    [GraphEdge]
    optional List<CellId> digicams_camera_image_ratio_cameras;
}
cell digicams_camera_image_stabilization
{
    [GraphEdge]
    optional CellId digicams_camera_image_stabilization_image_stabilization_type;
    optional u8string digicams_camera_image_stabilization_has_capability;
}
cell digicams_camera_iso
{
    optional List<u8string> digicams_camera_iso_cameras;
}
cell digicams_camera_resolution
{
    optional ushort digicams_camera_resolution_vertical_resolution;
    optional ushort digicams_camera_resolution_horizontal_resolution;
}
cell digicams_camera_sensor_manufacturer
{
    [GraphEdge]
    optional List<CellId> digicams_camera_sensor_manufacturer_cameras;
}
cell digicams_camera_sensor_size
{
    optional float digicams_camera_sensor_size_vertical_size;
    optional float digicams_camera_sensor_size_horizontal_size;
}
cell digicams_camera_sensor_type
{
    optional List<u8string> digicams_camera_sensor_type_digital_cameras;
}
cell digicams_camera_storage_type
{
    optional List<u8string> digicams_camera_storage_type_compatible_cameras;
}
cell digicams_camera_uncompressed_format
{
    [GraphEdge]
    optional List<CellId> digicams_camera_uncompressed_format_cameras;
}
cell digicams_camera_viewfinder_type
{
    [GraphEdge]
    optional List<CellId> digicams_camera_viewfinder_type_digital_cameras;
}
cell digicams_digital_camera
{
    [GraphEdge]
    optional List<CellId> digicams_digital_camera_iso_setting;
    [GraphEdge]
    optional List<CellId> digicams_digital_camera_supported_resolutions;
    [GraphEdge]
    optional CellId digicams_digital_camera_image_stabilization_capability;
    optional float digicams_digital_camera_lcd_screen_dimensions;
    [GraphEdge]
    optional CellId digicams_digital_camera_digital_zoom_capability;
    [GraphEdge]
    optional List<CellId> digicams_digital_camera_supported_storage_types;
    [GraphEdge]
    optional CellId digicams_digital_camera_color_filter_array_type;
    optional float digicams_digital_camera_digital_zoom;
    [GraphEdge]
    optional CellId digicams_digital_camera_max_resolution;
    [GraphEdge]
    optional List<CellId> digicams_digital_camera_compressed_formats;
    [GraphEdge]
    optional List<CellId> digicams_digital_camera_image_stabilization;
    [GraphEdge]
    optional List<CellId> digicams_digital_camera_street_price;
    optional float digicams_digital_camera_lcd_pixels;
    [GraphEdge]
    optional List<CellId> digicams_digital_camera_image_ratio;
    [GraphEdge]
    optional List<CellId> digicams_digital_camera_manufacturer;
    [GraphEdge]
    optional List<CellId> digicams_digital_camera_sensor_type;
    [GraphEdge]
    optional List<CellId> digicams_digital_camera_viewfinder_type;
    optional List<u8string> digicams_digital_camera_orientation_sensor;
    [GraphEdge]
    optional List<CellId> digicams_digital_camera_uncompressed_formats;
    optional float digicams_digital_camera_sensor_resolution;
    optional u8string digicams_digital_camera_dpreview_detail_id;
    optional float digicams_digital_camera_tele_focal_length;
    [GraphEdge]
    optional CellId digicams_digital_camera_sensor_size;
    [GraphEdge]
    optional List<CellId> digicams_digital_camera_dimensions;
    optional float digicams_digital_camera_wide_focal_length;
    optional float digicams_digital_camera_weight;
    optional float digicams_digital_camera_optical_zoom;
    [GraphEdge]
    optional List<CellId> digicams_digital_camera_format;
    optional float digicams_digital_camera_effective_resolution;
    [GraphEdge]
    optional CellId digicams_digital_camera_camera_sensor_manufacturer;
}
cell digicams_digital_camera_manufacturer
{
    optional List<u8string> digicams_digital_camera_manufacturer_cameras;
}
cell digicams_image_stabilization_type
{
    [GraphEdge]
    optional List<CellId> digicams_image_stabilization_type_digital_camera;
}
cell dining_chef
{
    [GraphEdge]
    optional List<CellId> dining_chef_restaurants;
    [GraphEdge]
    optional List<CellId> dining_chef_cuisines;
}
cell dining_cuisine
{
    optional List<u8string> dining_cuisine_restaurant;
    [GraphEdge]
    optional List<CellId> dining_cuisine_chefs;
    optional u8string dining_cuisine_description;
    [GraphEdge]
    optional List<CellId> dining_cuisine_dishes;
    [GraphEdge]
    optional List<CellId> dining_cuisine_ingredients;
    [GraphEdge]
    optional List<CellId> dining_cuisine_region_of_origin;
}
cell dining_restaurant
{
    [GraphEdge]
    optional List<CellId> dining_restaurant_related_webpages;
    [GraphEdge]
    optional List<CellId> dining_restaurant_chefs;
    [GraphEdge]
    optional List<CellId> dining_restaurant_cuisine;
}
cell dining_restaurant_chef_association
{
    [GraphEdge]
    optional CellId dining_restaurant_chef_association_chef;
    [GraphEdge]
    optional CellId dining_restaurant_chef_association_restaurant;
}
cell distilled_spirits_blended_spirit
{
    optional byte distilled_spirits_blended_spirit_age;
    [GraphEdge]
    optional List<CellId> distilled_spirits_blended_spirit_style;
    [GraphEdge]
    optional List<CellId> distilled_spirits_blended_spirit_components;
    [GraphEdge]
    optional CellId distilled_spirits_blended_spirit_blender;
    optional float distilled_spirits_blended_spirit_abv;
}
cell distilled_spirits_blended_spirit_style
{
    [GraphEdge]
    optional List<CellId> distilled_spirits_blended_spirit_style_blends;
}
cell distilled_spirits_distilled_spirit
{
    [GraphEdge]
    optional CellId distilled_spirits_distilled_spirit_spirit_type;
    optional float distilled_spirits_distilled_spirit_abv;
    [GraphEdge]
    optional List<CellId> distilled_spirits_distilled_spirit_aging;
    [GraphEdge]
    optional List<CellId> distilled_spirits_distilled_spirit_distillery;
    optional byte distilled_spirits_distilled_spirit_age;
    [GraphEdge]
    optional CellId distilled_spirits_distilled_spirit_bottler;
    [GraphEdge]
    optional List<CellId> distilled_spirits_distilled_spirit_fermentation_base;
}
cell distilled_spirits_distilled_spirit_type
{
    [GraphEdge]
    optional List<CellId> distilled_spirits_distilled_spirit_type_blends;
    [GraphEdge]
    optional List<CellId> distilled_spirits_distilled_spirit_type_spirits;
    [GraphEdge]
    optional List<CellId> distilled_spirits_distilled_spirit_type_fermentation_base;
    [GraphEdge]
    optional List<CellId> distilled_spirits_distilled_spirit_type_infusions;
}
cell distilled_spirits_distillery
{
    [GraphEdge]
    optional CellId distilled_spirits_distillery_region;
    [GraphEdge]
    optional List<CellId> distilled_spirits_distillery_spirits;
}
cell distilled_spirits_fermentation_base
{
    [GraphEdge]
    optional List<CellId> distilled_spirits_fermentation_base_spirit_products;
}
cell distilled_spirits_infused_spirit
{
    [GraphEdge]
    optional CellId distilled_spirits_infused_spirit_producer;
    [GraphEdge]
    optional CellId distilled_spirits_infused_spirit_base_spirit;
    [GraphEdge]
    optional CellId distilled_spirits_infused_spirit_infusion_style;
    [GraphEdge]
    optional List<CellId> distilled_spirits_infused_spirit_infusion;
    optional float distilled_spirits_infused_spirit_abv;
}
cell distilled_spirits_infused_spirit_style
{
    [GraphEdge]
    optional CellId distilled_spirits_infused_spirit_style_infusions;
}
cell distilled_spirits_spirit_aging
{
    optional float distilled_spirits_spirit_aging_time;
    [GraphEdge]
    optional CellId distilled_spirits_spirit_aging_prior_contents;
    [GraphEdge]
    optional CellId distilled_spirits_spirit_aging_container;
    [GraphEdge]
    optional CellId distilled_spirits_spirit_aging_spirit;
}
cell distilled_spirits_spirit_blender
{
    [GraphEdge]
    optional CellId distilled_spirits_spirit_blender_infusions;
    [GraphEdge]
    optional List<CellId> distilled_spirits_spirit_blender_blends;
}
cell distilled_spirits_spirit_bottler
{
    [GraphEdge]
    optional List<CellId> distilled_spirits_spirit_bottler_spirits_bottled;
}
cell distilled_spirits_spirit_producing_region
{
    [GraphEdge]
    optional List<CellId> distilled_spirits_spirit_producing_region_distilleries;
}
cell education_academic
{
    [GraphEdge]
    optional List<CellId> education_academic_advisees;
    [GraphEdge]
    optional List<CellId> education_academic_research_areas;
    optional List<u8string> education_academic_advisors;
    [GraphEdge]
    optional List<CellId> education_academic_appointments_fellowships_etc;
    [GraphEdge]
    optional List<CellId> education_academic_departments_old;
}
cell education_academic_institution
{
    [GraphEdge]
    optional List<CellId> education_academic_institution_visiting_scholars_fellows_etc;
}
cell education_academic_post
{
    [GraphEdge]
    optional CellId education_academic_post_person;
    [GraphEdge]
    optional CellId education_academic_post_position_or_title;
    [GraphEdge]
    optional CellId education_academic_post_institution;
}
cell education_academic_post_title
{
    [GraphEdge]
    optional List<CellId> education_academic_post_title_people_with_this_title;
}
cell education_acceptance_rate
{
    optional float education_acceptance_rate_rate;
}
cell education_athletics_brand
{
    [GraphEdge]
    optional List<CellId> education_athletics_brand_teams;
    [GraphEdge]
    optional CellId education_athletics_brand_institution;
}
cell education_department
{
    [GraphEdge]
    optional List<CellId> education_department_institution;
    [GraphEdge]
    optional List<CellId> education_department_subsidiary_departments;
    [GraphEdge]
    optional List<CellId> education_department_field;
    [GraphEdge]
    optional List<CellId> education_department_department_of;
    [GraphEdge]
    optional List<CellId> education_department_academics_old;
}
cell education_dissertation
{
    [GraphEdge]
    optional CellId education_dissertation_degree;
    [GraphEdge]
    optional CellId education_dissertation_institution;
}
cell education_education
{
    [GraphEdge]
    optional CellId education_education_student;
    [GraphEdge]
    optional List<CellId> education_education_major_field_of_study;
    [GraphEdge]
    optional CellId education_education_institution;
    [GraphEdge]
    optional CellId education_education_degree;
    [GraphEdge]
    optional List<CellId> education_education_minor;
    [GraphEdge]
    optional List<CellId> education_education_specialization;
}
cell education_educational_degree
{
    [GraphEdge]
    optional List<CellId> education_educational_degree_people_with_this_degree;
    [GraphEdge]
    optional List<CellId> education_educational_degree_honorary_degree_recipients;
}
cell education_educational_institution
{
    [GraphEdge]
    optional List<CellId> education_educational_institution_honorary_degrees_awarded;
    [GraphEdge]
    optional List<CellId> education_educational_institution_phone_number;
    [GraphEdge]
    optional List<CellId> education_educational_institution_sports_teams;
    optional List<u8string> education_educational_institution_nickname;
    [GraphEdge]
    optional List<CellId> education_educational_institution_athletics_brand;
    [GraphEdge]
    optional List<CellId> education_educational_institution_radio_station;
    [GraphEdge]
    optional List<CellId> education_educational_institution_colors;
    [GraphEdge]
    optional List<CellId> education_educational_institution_school_magazines;
    [GraphEdge]
    optional List<CellId> education_educational_institution_number_of_staff;
    [GraphEdge]
    optional List<CellId> education_educational_institution_mascot;
    optional List<u8string> education_educational_institution_motto;
    [GraphEdge]
    optional List<CellId> education_educational_institution_newspaper;
    [GraphEdge]
    optional List<CellId> education_educational_institution_subsidiary_or_constituent_schools;
    [GraphEdge]
    optional List<CellId> education_educational_institution_students_graduates;
    [GraphEdge]
    optional List<CellId> education_educational_institution_parent_institution;
    [GraphEdge]
    optional List<CellId> education_educational_institution_total_enrollment;
    [GraphEdge]
    optional List<CellId> education_educational_institution_sexes_accepted;
    [GraphEdge]
    optional List<CellId> education_educational_institution_campuses;
    [GraphEdge]
    optional List<CellId> education_educational_institution_school_type;
    [GraphEdge]
    optional List<CellId> education_educational_institution_faculty;
}
cell education_educational_institution_campus
{
    [GraphEdge]
    optional List<CellId> education_educational_institution_campus_educational_institution;
}
cell education_field_of_study
{
    [GraphEdge]
    optional List<CellId> education_field_of_study_academic_departments;
    [GraphEdge]
    optional List<CellId> education_field_of_study_journals_in_this_discipline;
    [GraphEdge]
    optional List<CellId> education_field_of_study_students_majoring;
    [GraphEdge]
    optional List<CellId> education_field_of_study_academics_in_this_field;
    [GraphEdge]
    optional List<CellId> education_field_of_study_subdiscipline_of;
    [GraphEdge]
    optional List<CellId> education_field_of_study_subdisciplines;
}
cell education_fraternity_sorority
{
    [GraphEdge]
    optional List<CellId> education_fraternity_sorority_colors;
    [GraphEdge]
    optional List<CellId> education_fraternity_sorority_official_charity;
    optional u8string education_fraternity_sorority_mission_statement;
    [GraphEdge]
    optional CellId education_fraternity_sorority_founded_location;
    [GraphEdge]
    optional List<CellId> education_fraternity_sorority_fraternity_sorority_type;
    optional List<u8string> education_fraternity_sorority_symbol;
    optional byte education_fraternity_sorority_number_of_colonies;
    optional byte education_fraternity_sorority_number_of_chapters;
    [GraphEdge]
    optional List<CellId> education_fraternity_sorority_accepted_genders;
    [GraphEdge]
    optional List<CellId> education_fraternity_sorority_colleges_and_universities;
}
cell education_fraternity_sorority_type
{
    [GraphEdge]
    optional List<CellId> education_fraternity_sorority_type_fraternities_and_sororities;
}
cell education_gender_enrollment
{
    [GraphEdge]
    optional CellId education_gender_enrollment_sex;
    [GraphEdge]
    optional CellId education_gender_enrollment_institution;
}
cell education_grade_level
{
    [GraphEdge]
    optional List<CellId> education_grade_level_locations_used;
    optional byte education_grade_level_typical_age_maximum;
    optional byte education_grade_level_typical_age_minimum;
}
cell education_honorary_degree
{
    [GraphEdge]
    optional CellId education_honorary_degree_recipient;
    [GraphEdge]
    optional CellId education_honorary_degree_institution;
    [GraphEdge]
    optional CellId education_honorary_degree_degree;
}
cell education_honorary_degree_recipient
{
    [GraphEdge]
    optional List<CellId> education_honorary_degree_recipient_honorary_degrees;
}
cell education_school
{
    [GraphEdge]
    optional List<CellId> education_school_school_district;
    optional List<ulong> education_school_nces_school_id;
    optional byte education_school_ministry_of_education_no;
    [GraphEdge]
    optional CellId education_school_lowest_grade_taught;
    [GraphEdge]
    optional List<CellId> education_school_student_teacher_ratio;
    [GraphEdge]
    optional CellId education_school_highest_grade_taught;
    [GraphEdge]
    optional List<CellId> education_school_class_size;
}
cell education_school_category
{
    [GraphEdge]
    optional List<CellId> education_school_category_schools_of_this_kind;
}
cell education_school_district
{
    optional List<uint> education_school_district_leaid;
    optional byte education_school_district_number_of_schools;
    [GraphEdge]
    optional CellId education_school_district_highest_grade_taught;
    [GraphEdge]
    optional CellId education_school_district_lowest_grade_taught;
    [GraphEdge]
    optional List<CellId> education_school_district_phone_number;
    [GraphEdge]
    optional List<CellId> education_school_district_schools;
    [GraphEdge]
    optional List<CellId> education_school_district_enrollment;
    [GraphEdge]
    optional List<CellId> education_school_district_locations_served;
}
cell education_school_magazine
{
    [GraphEdge]
    optional CellId education_school_magazine_school;
}
cell education_school_mascot
{
    [GraphEdge]
    optional List<CellId> education_school_mascot_school;
}
cell education_school_newspaper
{
    [GraphEdge]
    optional List<CellId> education_school_newspaper_school;
}
cell education_student_radio_station
{
    [GraphEdge]
    optional List<CellId> education_student_radio_station_school;
}
cell education_student_teacher_ratio
{
    optional byte education_student_teacher_ratio_students;
    optional byte education_student_teacher_ratio_teachers;
}
cell education_university
{
    [GraphEdge]
    optional List<CellId> education_university_number_of_doctoral_candidates;
    [GraphEdge]
    optional List<CellId> education_university_domestic_tuition;
    [GraphEdge]
    optional List<CellId> education_university_fraternities_and_sororities;
    [GraphEdge]
    optional List<CellId> education_university_acceptance_rate;
    [GraphEdge]
    optional List<CellId> education_university_number_of_postgraduates;
    [GraphEdge]
    optional List<CellId> education_university_local_tuition;
    [GraphEdge]
    optional List<CellId> education_university_number_of_undergraduates;
    [GraphEdge]
    optional List<CellId> education_university_departments;
    [GraphEdge]
    optional List<CellId> education_university_international_tuition;
}
cell engineering_battery
{
    optional float engineering_battery_capacity;
    [GraphEdge]
    optional CellId engineering_battery_cell_type;
    optional float engineering_battery_voltage;
    [GraphEdge]
    optional CellId engineering_battery_size;
    optional byte engineering_battery_number_of_cells;
    optional float engineering_battery_mass;
    [GraphEdge]
    optional CellId engineering_battery_chemistry;
}
cell engineering_battery_cell_type
{
    [GraphEdge]
    optional CellId engineering_battery_cell_type_battery_sizes;
    optional u8string engineering_battery_cell_type_rechargeable;
    [GraphEdge]
    optional List<CellId> engineering_battery_cell_type_batteries;
}
cell engineering_battery_shape_format
{
    [GraphEdge]
    optional List<CellId> engineering_battery_shape_format_battery_sizes;
}
cell engineering_battery_size
{
    [GraphEdge]
    optional CellId engineering_battery_size_shape_format;
    [GraphEdge]
    optional List<CellId> engineering_battery_size_cell_variations;
    [GraphEdge]
    optional List<CellId> engineering_battery_size_batteries_of_this_size;
}
cell engineering_battery_size_cell_variation
{
    optional u8string engineering_battery_size_cell_variation_ansi_neda_name;
    [GraphEdge]
    optional CellId engineering_battery_size_cell_variation_size;
    optional u8string engineering_battery_size_cell_variation_iec_60086_name;
    [GraphEdge]
    optional CellId engineering_battery_size_cell_variation_cell_type;
    optional float engineering_battery_size_cell_variation_capacity;
    optional float engineering_battery_size_cell_variation_voltage;
}
cell engineering_channel_access_method
{
    [GraphEdge]
    optional CellId engineering_channel_access_method_parent_method;
    [GraphEdge]
    optional List<CellId> engineering_channel_access_method_child_method;
}
cell engineering_engine
{
    [GraphEdge]
    optional List<CellId> engineering_engine_category;
    [GraphEdge]
    optional List<CellId> engineering_engine_variants;
    [GraphEdge]
    optional List<CellId> engineering_engine_energy_source;
    [GraphEdge]
    optional CellId engineering_engine_designer;
    optional float engineering_engine_mass;
    optional float engineering_engine_power;
    [GraphEdge]
    optional CellId engineering_engine_variation_of;
}
cell engineering_engine_category
{
    [GraphEdge]
    optional List<CellId> engineering_engine_category_category_of;
    [GraphEdge]
    optional List<CellId> engineering_engine_category_sub_categories;
    [GraphEdge]
    optional List<CellId> engineering_engine_category_engines;
}
cell engineering_engine_cooling_method
{
    [GraphEdge]
    optional List<CellId> engineering_engine_cooling_method_engines;
}
cell engineering_engine_designer
{
    [GraphEdge]
    optional List<CellId> engineering_engine_designer_engines_designed;
}
cell engineering_engine_energy_source
{
    [GraphEdge]
    optional List<CellId> engineering_engine_energy_source_engines;
}
cell engineering_location_with_mains_power
{
    [GraphEdge]
    optional CellId engineering_location_with_mains_power_mains_power_standards;
}
cell engineering_mains_power
{
    optional float engineering_mains_power_nominal_voltage;
    [GraphEdge]
    optional CellId engineering_mains_power_location;
    optional float engineering_mains_power_ac_frequency;
    [GraphEdge]
    optional List<CellId> engineering_mains_power_compatible_plugs;
}
cell engineering_material
{
    [GraphEdge]
    optional List<CellId> engineering_material_subclass;
    [GraphEdge]
    optional List<CellId> engineering_material_parent_material_class;
}
cell engineering_material_composition
{
    [GraphEdge]
    optional CellId engineering_material_composition_material;
    optional float engineering_material_composition_mass;
}
cell engineering_piston_configuration
{
    [GraphEdge]
    optional List<CellId> engineering_piston_configuration_engines;
    optional byte engineering_piston_configuration_number_of_pistons;
}
cell engineering_piston_engine
{
    optional float engineering_piston_engine_piston_stroke;
    optional float engineering_piston_engine_cylinder_bore;
    [GraphEdge]
    optional CellId engineering_piston_engine_piston_configuration;
    optional float engineering_piston_engine_capacity;
    [GraphEdge]
    optional CellId engineering_piston_engine_cooling_method;
}
cell engineering_power_plug_standard
{
    optional u8string engineering_power_plug_standard_fused;
    optional u8string engineering_power_plug_standard_polarised;
    optional u8string engineering_power_plug_standard_grounded;
    [GraphEdge]
    optional CellId engineering_power_plug_standard_plug_type;
    optional float engineering_power_plug_standard_rated_voltage;
    optional float engineering_power_plug_standard_rated_current;
}
cell engineering_power_plug_standard_type
{
    [GraphEdge]
    optional List<CellId> engineering_power_plug_standard_type_compatible_power_systems;
    [GraphEdge]
    optional CellId engineering_power_plug_standard_type_plug_standards;
}
cell engineering_reaction_engine
{
    optional float engineering_reaction_engine_thrust;
}
cell engineering_signal_modulation_mode
{
    [GraphEdge]
    optional List<CellId> engineering_signal_modulation_mode_parent_modulation;
    [GraphEdge]
    optional List<CellId> engineering_signal_modulation_mode_child_modulation;
}
cell event_disaster
{
    [GraphEdge]
    optional List<CellId> event_disaster_notable_structures_damaged;
    [GraphEdge]
    optional List<CellId> event_disaster_survivors;
    [GraphEdge]
    optional List<CellId> event_disaster_structures_destroyed;
    [GraphEdge]
    optional CellId event_disaster_damage;
    optional byte event_disaster_injuries;
    optional byte event_disaster_fatalities;
    [GraphEdge]
    optional List<CellId> event_disaster_structures_damaged;
    [GraphEdge]
    optional List<CellId> event_disaster_surviving_structures;
    [GraphEdge]
    optional List<CellId> event_disaster_type_of_disaster;
    [GraphEdge]
    optional List<CellId> event_disaster_areas_affected;
    [GraphEdge]
    optional List<CellId> event_disaster_notable_people_killed;
    [GraphEdge]
    optional List<CellId> event_disaster_victims;
}
cell event_disaster_affected_structure
{
    [GraphEdge]
    optional CellId event_disaster_affected_structure_survived_disasters;
    [GraphEdge]
    optional CellId event_disaster_affected_structure_damaged_by_disasters;
    [GraphEdge]
    optional CellId event_disaster_affected_structure_destroyed_by_disaster;
}
cell event_disaster_survivor
{
    [GraphEdge]
    optional List<CellId> event_disaster_survivor_survived_disasters;
}
cell event_disaster_type
{
    [GraphEdge]
    optional List<CellId> event_disaster_type_disasters_of_this_type;
}
cell event_disaster_victim
{
    [GraphEdge]
    optional List<CellId> event_disaster_victim_killed_in_disaster;
}
cell event_event_producer
{
    [GraphEdge]
    optional List<CellId> event_event_producer_events_produced;
}
cell event_event_promoter
{
    [GraphEdge]
    optional List<CellId> event_event_promoter_events_promoted;
}
cell event_presented_work
{
    [GraphEdge]
    optional CellId event_presented_work_performances;
}
cell event_produced_event
{
    [GraphEdge]
    optional List<CellId> event_produced_event_produced_by;
}
cell event_promoted_event
{
    [GraphEdge]
    optional CellId event_promoted_event_promoted_by;
}
cell event_public_speaker
{
    [GraphEdge]
    optional List<CellId> event_public_speaker_speeches_or_presentations;
}
cell event_public_speaking_event
{
    [GraphEdge]
    optional List<CellId> event_public_speaking_event_speech_presentation_discussion;
}
cell event_speech_or_presentation
{
    [GraphEdge]
    optional List<CellId> event_speech_or_presentation_speech_topic;
    [GraphEdge]
    optional CellId event_speech_or_presentation_presented_work;
    [GraphEdge]
    optional List<CellId> event_speech_or_presentation_type_or_format_of_presentation;
    [GraphEdge]
    optional List<CellId> event_speech_or_presentation_speaker_s;
    [GraphEdge]
    optional List<CellId> event_speech_or_presentation_event;
}
cell event_speech_topic
{
    [GraphEdge]
    optional List<CellId> event_speech_topic_speeches_or_presentations_on_this_topic;
}
cell event_type_of_public_presentation
{
    [GraphEdge]
    optional List<CellId> event_type_of_public_presentation_presentations_of_this_type;
}
cell exhibitions_exhibit
{
    [GraphEdge]
    optional List<CellId> exhibitions_exhibit_exhibitions_displayed_in;
}
cell exhibitions_exhibition
{
    [GraphEdge]
    optional List<CellId> exhibitions_exhibition_venues;
    [GraphEdge]
    optional List<CellId> exhibitions_exhibition_curators;
    [GraphEdge]
    optional List<CellId> exhibitions_exhibition_exhibition_types;
    [GraphEdge]
    optional List<CellId> exhibitions_exhibition_subjects;
    [GraphEdge]
    optional List<CellId> exhibitions_exhibition_exhibits;
    [GraphEdge]
    optional List<CellId> exhibitions_exhibition_produced_by;
}
cell exhibitions_exhibition_curator
{
    [GraphEdge]
    optional List<CellId> exhibitions_exhibition_curator_exhibitions_curated;
}
cell exhibitions_exhibition_producer
{
    [GraphEdge]
    optional List<CellId> exhibitions_exhibition_producer_exhibitions_produced;
}
cell exhibitions_exhibition_run
{
    optional u8string exhibitions_exhibition_run_admission_fee;
    [GraphEdge]
    optional CellId exhibitions_exhibition_run_exhibition;
    [GraphEdge]
    optional List<CellId> exhibitions_exhibition_run_sponsor;
    [GraphEdge]
    optional CellId exhibitions_exhibition_run_venue;
}
cell exhibitions_exhibition_sponsor
{
    [GraphEdge]
    optional List<CellId> exhibitions_exhibition_sponsor_exhibitions_sponsored;
}
cell exhibitions_exhibition_subject
{
    [GraphEdge]
    optional List<CellId> exhibitions_exhibition_subject_exhibitions_created_about_this_subject;
}
cell exhibitions_exhibition_venue
{
    [GraphEdge]
    optional List<CellId> exhibitions_exhibition_venue_exhibitions_at_this_venue;
}
cell exhibitions_type_of_exhibition
{
    [GraphEdge]
    optional List<CellId> exhibitions_type_of_exhibition_exhibitions_of_this_type;
}
cell fashion_clothing_size
{
    [GraphEdge]
    optional CellId fashion_clothing_size_article_of_clothing;
    [GraphEdge]
    optional CellId fashion_clothing_size_person;
    optional u8string fashion_clothing_size_size;
    [GraphEdge]
    optional CellId fashion_clothing_size_region;
    optional u8string fashion_clothing_size_notation;
}
cell fashion_designer_label_association
{
    [GraphEdge]
    optional CellId fashion_designer_label_association_designer;
    [GraphEdge]
    optional CellId fashion_designer_label_association_label;
}
cell fashion_fashion_designer
{
    [GraphEdge]
    optional List<CellId> fashion_fashion_designer_labels;
}
cell fashion_fashion_label
{
    [GraphEdge]
    optional List<CellId> fashion_fashion_label_designers;
}
cell fashion_fiber
{
    [GraphEdge]
    optional List<CellId> fashion_fiber_textiles_made_from_this_fiber;
}
cell fashion_garment
{
    [GraphEdge]
    optional List<CellId> fashion_garment_specialization_of;
    [GraphEdge]
    optional List<CellId> fashion_garment_more_specialized_forms;
}
cell fashion_textile
{
    [GraphEdge]
    optional List<CellId> fashion_textile_fiber;
    [GraphEdge]
    optional CellId fashion_textile_weave;
}
cell fashion_weave
{
    [GraphEdge]
    optional List<CellId> fashion_weave_textiles_of_this_weave;
}
cell fictional_universe_calendar_system_directionality
{
    [GraphEdge]
    optional List<CellId> fictional_universe_calendar_system_directionality_calendars;
}
cell fictional_universe_character_gender
{
    optional List<u8string> fictional_universe_character_gender_characters_of_this_gender;
}
cell fictional_universe_character_occupation
{
    [GraphEdge]
    optional List<CellId> fictional_universe_character_occupation_characters_with_this_occupation;
}
cell fictional_universe_character_powers
{
    optional List<u8string> fictional_universe_character_powers_characters_with_this_ability;
}
cell fictional_universe_character_rank
{
    [GraphEdge]
    optional List<CellId> fictional_universe_character_rank_characters_of_this_rank;
}
cell fictional_universe_character_species
{
    [GraphEdge]
    optional List<CellId> fictional_universe_character_species_characters_of_this_species;
    [GraphEdge]
    optional List<CellId> fictional_universe_character_species_found_in_fictional_universe;
}
cell fictional_universe_ethnicity_in_fiction
{
    [GraphEdge]
    optional List<CellId> fictional_universe_ethnicity_in_fiction_characters_of_this_ethnicity;
}
cell fictional_universe_event_in_fiction
{
    [GraphEdge]
    optional List<CellId> fictional_universe_event_in_fiction_included_by_these_events;
    [GraphEdge]
    optional List<CellId> fictional_universe_event_in_fiction_includes_events;
    [GraphEdge]
    optional List<CellId> fictional_universe_event_in_fiction_location;
    [GraphEdge]
    optional List<CellId> fictional_universe_event_in_fiction_start_date;
    [GraphEdge]
    optional CellId fictional_universe_event_in_fiction_end_date;
    [GraphEdge]
    optional List<CellId> fictional_universe_event_in_fiction_appears_in_these_works;
}
cell fictional_universe_fictional_calendar_system
{
    [GraphEdge]
    optional CellId fictional_universe_fictional_calendar_system_directionality;
    [GraphEdge]
    optional CellId fictional_universe_fictional_calendar_system_replaced_with;
    [GraphEdge]
    optional CellId fictional_universe_fictional_calendar_system_used_in_fictional_universes;
    [GraphEdge]
    optional CellId fictional_universe_fictional_calendar_system_preceded_by;
}
cell fictional_universe_fictional_character
{
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_based_on;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_ethnicity;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_occupation;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_romantically_involved_with;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_species;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_quotations;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_places_lived;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_gender;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_character_created_by;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_appears_in_these_fictional_universes;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_parents;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_has_possessed;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_powers_or_abilities;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_siblings;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_date_of_birth;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_medical_conditions;
    optional float fictional_universe_fictional_character_height;
    optional float fictional_universe_fictional_character_weight;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_married_to;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_rank;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_organizations;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_employers;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_children;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_education;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_character_place_of_birth;
}
cell fictional_universe_fictional_character_creator
{
    optional List<u8string> fictional_universe_fictional_character_creator_fictional_characters_created;
}
cell fictional_universe_fictional_creature
{
    [GraphEdge]
    optional CellId fictional_universe_fictional_creature_featured_in_fictional_universe;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_creature_fictional_creature_species;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_creature_attributes_powers_or_abilities;
}
cell fictional_universe_fictional_date_time
{
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_date_time_portrayed_in;
    optional u8string fictional_universe_fictional_date_time_other_date_time;
    [GraphEdge]
    optional CellId fictional_universe_fictional_date_time_other_calendar_system;
}
cell fictional_universe_fictional_employer
{
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_employer_employees;
}
cell fictional_universe_fictional_employment_tenure
{
    [GraphEdge]
    optional CellId fictional_universe_fictional_employment_tenure_employee;
    [GraphEdge]
    optional CellId fictional_universe_fictional_employment_tenure_employer;
    [GraphEdge]
    optional CellId fictional_universe_fictional_employment_tenure_title;
}
cell fictional_universe_fictional_job_title
{
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_job_title_fictional_characters_with_this_job;
}
cell fictional_universe_fictional_language
{
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_language_found_in_fictional_universe;
    optional u8string fictional_universe_fictional_language_spoken_by;
    optional List<u8string> fictional_universe_fictional_language_where_spoken;
}
cell fictional_universe_fictional_object
{
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_object_location;
    [GraphEdge]
    optional CellId fictional_universe_fictional_object_destruction_date;
    [GraphEdge]
    optional CellId fictional_universe_fictional_object_creation_date;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_object_composition;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_object_owner;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_object_created_by;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_object_featured_in_fictional_universe;
    optional List<u8string> fictional_universe_fictional_object_attributes_properties;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_object_destroyer;
    optional u8string fictional_universe_fictional_object_destroyed_by;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_object_destruction_method;
}
cell fictional_universe_fictional_object_destroyer
{
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_object_destroyer_fictional_objects_destroyed;
}
cell fictional_universe_fictional_object_destruction_method
{
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_object_destruction_method_fictional_objects_destroyed;
}
cell fictional_universe_fictional_organization
{
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_organization_sub_organization_in_fiction;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_organization_appears_in_universes;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_organization_parent_organization_in_fiction;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_organization_type_of_organization;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_organization_fictional_organization_founder;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_organization_members;
}
cell fictional_universe_fictional_organization_founder
{
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_organization_founder_fictional_organizations_founded;
}
cell fictional_universe_fictional_organization_type
{
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_organization_type_organizations;
}
cell fictional_universe_fictional_plant
{
    [GraphEdge]
    optional CellId fictional_universe_fictional_plant_featured_in_fictional_universe;
}
cell fictional_universe_fictional_setting
{
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_setting_fictional_characters_born_here;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_setting_setting_type;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_setting_works_set_here;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_setting_events;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_setting_universe;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_setting_languages;
    optional List<u8string> fictional_universe_fictional_setting_characters_that_have_lived_here;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_setting_contained_by;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_setting_contains;
}
cell fictional_universe_fictional_substance
{
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_substance_fictional_object;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_substance_appears_in_fictional_universe;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_substance_color;
}
cell fictional_universe_fictional_universe
{
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_universe_organizations;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_universe_locations;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_universe_works_set_here;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_universe_created_by;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_universe_languages;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_universe_species;
    optional List<u8string> fictional_universe_fictional_universe_contains_fictional_settings;
    optional List<u8string> fictional_universe_fictional_universe_characters;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_universe_calendar_systems;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_universe_literary_series_set_here;
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_universe_fictional_objects;
}
cell fictional_universe_fictional_universe_creator
{
    [GraphEdge]
    optional List<CellId> fictional_universe_fictional_universe_creator_fictional_universes_created;
}
cell fictional_universe_marriage_of_fictional_characters
{
    [GraphEdge]
    optional List<CellId> fictional_universe_marriage_of_fictional_characters_spouses;
}
cell fictional_universe_medical_condition_in_fiction
{
    [GraphEdge]
    optional List<CellId> fictional_universe_medical_condition_in_fiction_characters_with_this_condition;
}
cell fictional_universe_person_in_fiction
{
    [GraphEdge]
    optional List<CellId> fictional_universe_person_in_fiction_representations_in_fiction;
}
cell fictional_universe_romantic_involvement
{
    [GraphEdge]
    optional List<CellId> fictional_universe_romantic_involvement_partner;
}
cell fictional_universe_school_in_fiction
{
    [GraphEdge]
    optional List<CellId> fictional_universe_school_in_fiction_students_graduates;
}
cell fictional_universe_sibling_relationship_of_fictional_characters
{
    [GraphEdge]
    optional List<CellId> fictional_universe_sibling_relationship_of_fictional_characters_siblings;
}
cell fictional_universe_type_of_fictional_setting
{
    [GraphEdge]
    optional List<CellId> fictional_universe_type_of_fictional_setting_settings;
}
cell fictional_universe_work_of_fiction
{
    [GraphEdge]
    optional List<CellId> fictional_universe_work_of_fiction_part_of_these_fictional_universes;
    [GraphEdge]
    optional List<CellId> fictional_universe_work_of_fiction_setting;
    [GraphEdge]
    optional List<CellId> fictional_universe_work_of_fiction_events;
}
cell film_actor
{
    [GraphEdge]
    optional List<CellId> film_actor_dubbing_performances;
    [GraphEdge]
    optional List<CellId> film_actor_film;
}
cell film_cinematographer
{
    [GraphEdge]
    optional List<CellId> film_cinematographer_film;
}
cell film_content_rating
{
    optional byte film_content_rating_minimum_unaccompanied_age;
    optional List<u8string> film_content_rating_film;
    optional byte film_content_rating_minimum_accompanied_age;
    [GraphEdge]
    optional CellId film_content_rating_film_rating_system;
    [GraphEdge]
    optional CellId film_content_rating_country;
}
cell film_content_rating_system
{
    [GraphEdge]
    optional CellId film_content_rating_system_jurisdiction;
    [GraphEdge]
    optional List<CellId> film_content_rating_system_film_ratings;
}
cell film_director
{
    [GraphEdge]
    optional List<CellId> film_director_film;
}
cell film_dubbing_performance
{
    [GraphEdge]
    optional CellId film_dubbing_performance_actor;
    [GraphEdge]
    optional CellId film_dubbing_performance_language;
    [GraphEdge]
    optional CellId film_dubbing_performance_character;
    [GraphEdge]
    optional CellId film_dubbing_performance_film;
}
cell film_editor
{
    [GraphEdge]
    optional List<CellId> film_editor_film;
}
cell film_film
{
    [GraphEdge]
    optional List<CellId> film_film_runtime;
    [GraphEdge]
    optional List<CellId> film_film_language;
    [GraphEdge]
    optional List<CellId> film_film_other_crew;
    [GraphEdge]
    optional List<CellId> film_film_film_production_design_by;
    [GraphEdge]
    optional List<CellId> film_film_locations;
    [GraphEdge]
    optional CellId film_film_post_production;
    [GraphEdge]
    optional List<CellId> film_film_film_art_direction_by;
    [GraphEdge]
    optional List<CellId> film_film_cinematography;
    [GraphEdge]
    optional List<CellId> film_film_other_film_companies;
    [GraphEdge]
    optional List<CellId> film_film_music;
    [GraphEdge]
    optional List<CellId> film_film_distributors;
    [GraphEdge]
    optional List<CellId> film_film_edited_by;
    [GraphEdge]
    optional List<CellId> film_film_subjects;
    [GraphEdge]
    optional List<CellId> film_film_featured_song;
    [GraphEdge]
    optional List<CellId> film_film_starring;
    [GraphEdge]
    optional List<CellId> film_film_costume_design_by;
    [GraphEdge]
    optional List<CellId> film_film_written_by;
    [GraphEdge]
    optional List<CellId> film_film_country;
    [GraphEdge]
    optional List<CellId> film_film_film_collections;
    [GraphEdge]
    optional List<CellId> film_film_directed_by;
    [GraphEdge]
    optional List<CellId> film_film_rating;
    [GraphEdge]
    optional List<CellId> film_film_film_festivals;
    [GraphEdge]
    optional List<CellId> film_film_film_casting_director;
    [GraphEdge]
    optional List<CellId> film_film_genre;
    [GraphEdge]
    optional List<CellId> film_film_soundtrack;
    optional List<u8string> film_film_rottentomatoes_id;
    optional List<uint> film_film_netflix_id;
    [GraphEdge]
    optional List<CellId> film_film_film_set_decoration_by;
    [GraphEdge]
    optional List<CellId> film_film_executive_produced_by;
    [GraphEdge]
    optional List<CellId> film_film_prequel;
    [GraphEdge]
    optional CellId film_film_gross_revenue;
    optional u8string film_film_apple_movietrailer_id;
    [GraphEdge]
    optional List<CellId> film_film_estimated_budget;
    [GraphEdge]
    optional List<CellId> film_film_film_format;
    [GraphEdge]
    optional List<CellId> film_film_sequel;
    [GraphEdge]
    optional List<CellId> film_film_film_series;
    [GraphEdge]
    optional List<CellId> film_film_personal_appearances;
    optional List<u8string> film_film_tagline;
    [GraphEdge]
    optional List<CellId> film_film_dubbing_performances;
    [GraphEdge]
    optional List<CellId> film_film_featured_film_locations;
    [GraphEdge]
    optional List<CellId> film_film_production_companies;
    [GraphEdge]
    optional List<CellId> film_film_primary_language;
    optional List<uint> film_film_fandango_id;
    [GraphEdge]
    optional List<CellId> film_film_story_by;
    [GraphEdge]
    optional List<CellId> film_film_songs;
    optional uint film_film_nytimes_id;
    [GraphEdge]
    optional List<CellId> film_film_produced_by;
    optional List<u8string> film_film_metacritic_id;
    [GraphEdge]
    optional CellId film_film_pre_production;
    [GraphEdge]
    optional List<CellId> film_film_release_date_s;
    optional List<u8string> film_film_traileraddict_id;
    [GraphEdge]
    optional CellId film_film_filming;
}
cell film_film_art_director
{
    [GraphEdge]
    optional List<CellId> film_film_art_director_films_art_directed;
}
cell film_film_casting_director
{
    [GraphEdge]
    optional List<CellId> film_film_casting_director_films_casting_directed;
}
cell film_film_character
{
    [GraphEdge]
    optional List<CellId> film_film_character_portrayed_in_films_dubbed;
    [GraphEdge]
    optional List<CellId> film_film_character_portrayed_in_films;
}
cell film_film_collection
{
    [GraphEdge]
    optional List<CellId> film_film_collection_films_in_collection;
}
cell film_film_company
{
    [GraphEdge]
    optional List<CellId> film_film_company_films;
}
cell film_film_company_role_or_service
{
    [GraphEdge]
    optional List<CellId> film_film_company_role_or_service_companies_performing_this_role_or_service;
}
cell film_film_costumer_designer
{
    [GraphEdge]
    optional List<CellId> film_film_costumer_designer_costume_design_for_film;
}
cell film_film_crew_gig
{
    [GraphEdge]
    optional CellId film_film_crew_gig_crewmember;
    [GraphEdge]
    optional CellId film_film_crew_gig_film;
    [GraphEdge]
    optional CellId film_film_crew_gig_film_crew_role;
}
cell film_film_crewmember
{
    [GraphEdge]
    optional List<CellId> film_film_crewmember_films_crewed;
}
cell film_film_cut
{
    [GraphEdge]
    optional CellId film_film_cut_film;
    optional u8string film_film_cut_note;
    optional float film_film_cut_runtime;
    [GraphEdge]
    optional CellId film_film_cut_film_release_region;
    [GraphEdge]
    optional CellId film_film_cut_type_of_film_cut;
}
cell film_film_distribution_medium
{
    [GraphEdge]
    optional List<CellId> film_film_distribution_medium_films_distributed_in_this_medium;
}
cell film_film_distributor
{
    optional List<u8string> film_film_distributor_films_distributed;
}
cell film_film_featured_song
{
    [GraphEdge]
    optional List<CellId> film_film_featured_song_featured_in_film;
    [GraphEdge]
    optional List<CellId> film_film_featured_song_performed_by;
}
cell film_film_festival
{
    [GraphEdge]
    optional List<CellId> film_film_festival_sponsoring_organization;
    [GraphEdge]
    optional CellId film_film_festival_focus;
    [GraphEdge]
    optional List<CellId> film_film_festival_individual_festivals;
    [GraphEdge]
    optional List<CellId> film_film_festival_location;
}
cell film_film_festival_event
{
    [GraphEdge]
    optional CellId film_film_festival_event_festival;
    [GraphEdge]
    optional List<CellId> film_film_festival_event_films;
}
cell film_film_festival_focus
{
    [GraphEdge]
    optional List<CellId> film_film_festival_focus_festivals_with_this_focus;
}
cell film_film_festival_sponsor
{
    [GraphEdge]
    optional List<CellId> film_film_festival_sponsor_festivals_sponsored;
}
cell film_film_festival_sponsorship
{
    [GraphEdge]
    optional CellId film_film_festival_sponsorship_festival;
    [GraphEdge]
    optional CellId film_film_festival_sponsorship_sponsor;
}
cell film_film_film_company_relationship
{
    [GraphEdge]
    optional CellId film_film_film_company_relationship_film;
    [GraphEdge]
    optional CellId film_film_film_company_relationship_film_cut;
    [GraphEdge]
    optional CellId film_film_film_company_relationship_film_company;
    [GraphEdge]
    optional List<CellId> film_film_film_company_relationship_role_service;
}
cell film_film_film_distributor_relationship
{
    [GraphEdge]
    optional CellId film_film_film_distributor_relationship_distributor;
    [GraphEdge]
    optional CellId film_film_film_distributor_relationship_film_distribution_medium;
    [GraphEdge]
    optional List<CellId> film_film_film_distributor_relationship_region;
    [GraphEdge]
    optional CellId film_film_film_distributor_relationship_film_cut;
    [GraphEdge]
    optional CellId film_film_film_distributor_relationship_film;
}
cell film_film_format
{
    [GraphEdge]
    optional List<CellId> film_film_format_film_format;
}
cell film_film_genre
{
    optional List<u8string> film_film_genre_films_in_this_genre;
}
cell film_film_job
{
    [GraphEdge]
    optional List<CellId> film_film_job_films_with_this_crew_job;
}
cell film_film_location
{
    [GraphEdge]
    optional List<CellId> film_film_location_featured_in_films;
}
cell film_film_production_designer
{
    [GraphEdge]
    optional List<CellId> film_film_production_designer_films_production_designed;
}
cell film_film_regional_release_date
{
    [GraphEdge]
    optional List<CellId> film_film_regional_release_date_film_release_distribution_medium;
    [GraphEdge]
    optional List<CellId> film_film_regional_release_date_film_release_region;
    [GraphEdge]
    optional CellId film_film_regional_release_date_film;
    [GraphEdge]
    optional List<CellId> film_film_regional_release_date_film_regional_debut_venue;
}
cell film_film_series
{
    [GraphEdge]
    optional List<CellId> film_film_series_films_in_series;
}
cell film_film_set_designer
{
    [GraphEdge]
    optional List<CellId> film_film_set_designer_film_sets_designed;
}
cell film_film_song
{
    [GraphEdge]
    optional List<CellId> film_film_song_films;
}
cell film_film_song_performer
{
    [GraphEdge]
    optional List<CellId> film_film_song_performer_film_songs;
}
cell film_film_song_relationship
{
    [GraphEdge]
    optional List<CellId> film_film_song_relationship_performers;
    [GraphEdge]
    optional CellId film_film_song_relationship_composition;
    [GraphEdge]
    optional CellId film_film_song_relationship_film;
}
cell film_film_story_contributor
{
    [GraphEdge]
    optional List<CellId> film_film_story_contributor_film_story_credits;
}
cell film_film_subject
{
    [GraphEdge]
    optional List<CellId> film_film_subject_films;
}
cell film_music_contributor
{
    [GraphEdge]
    optional List<CellId> film_music_contributor_film;
}
cell film_performance
{
    [GraphEdge]
    optional CellId film_performance_film;
    [GraphEdge]
    optional CellId film_performance_character;
    [GraphEdge]
    optional CellId film_performance_actor;
    optional u8string film_performance_character_note;
    [GraphEdge]
    optional List<CellId> film_performance_special_performance_type;
}
cell film_person_or_entity_appearing_in_film
{
    [GraphEdge]
    optional List<CellId> film_person_or_entity_appearing_in_film_films;
}
cell film_personal_film_appearance
{
    [GraphEdge]
    optional CellId film_personal_film_appearance_type_of_appearance;
    [GraphEdge]
    optional CellId film_personal_film_appearance_film;
    [GraphEdge]
    optional CellId film_personal_film_appearance_person;
}
cell film_personal_film_appearance_type
{
    [GraphEdge]
    optional List<CellId> film_personal_film_appearance_type_film_appearances;
}
cell film_producer
{
    [GraphEdge]
    optional List<CellId> film_producer_film;
    [GraphEdge]
    optional List<CellId> film_producer_films_executive_produced;
}
cell film_production_company
{
    [GraphEdge]
    optional List<CellId> film_production_company_films;
}
cell film_special_film_performance_type
{
    [GraphEdge]
    optional List<CellId> film_special_film_performance_type_film_performance_type;
}
cell film_writer
{
    [GraphEdge]
    optional List<CellId> film_writer_film;
}
cell finance_currency
{
    [GraphEdge]
    optional CellId finance_currency_sub_units;
    [GraphEdge]
    optional List<CellId> finance_currency_countries_used;
    [GraphEdge]
    optional List<CellId> finance_currency_countries_formerly_used;
    optional List<u8string> finance_currency_prefix_symbol;
    optional List<u8string> finance_currency_currency_code;
    [GraphEdge]
    optional List<CellId> finance_currency_target_of_exchange;
    [GraphEdge]
    optional List<CellId> finance_currency_source_of_exchange;
}
cell finance_exchange_operator
{
    [GraphEdge]
    optional List<CellId> finance_exchange_operator_exchanges_operated;
}
cell finance_exchange_operator_relationship
{
    [GraphEdge]
    optional CellId finance_exchange_operator_relationship_exchange;
    [GraphEdge]
    optional CellId finance_exchange_operator_relationship_exchange_operator;
}
cell finance_exchange_rate
{
    [GraphEdge]
    optional CellId finance_exchange_rate_source_of_exchange;
    optional float finance_exchange_rate_amount;
    [GraphEdge]
    optional CellId finance_exchange_rate_target_of_exchange;
}
cell finance_stock_exchange
{
    [GraphEdge]
    optional List<CellId> finance_stock_exchange_companies_traded;
    [GraphEdge]
    optional CellId finance_stock_exchange_primary_regions;
    [GraphEdge]
    optional CellId finance_stock_exchange_operated_by;
}
cell food_beer
{
    optional float food_beer_final_gravity;
    [GraphEdge]
    optional CellId food_beer_country;
    [GraphEdge]
    optional List<CellId> food_beer_containers;
    [GraphEdge]
    optional List<CellId> food_beer_beer_style;
    optional float food_beer_ibu_scale;
    [GraphEdge]
    optional List<CellId> food_beer_brewery_brand;
    [GraphEdge]
    optional List<CellId> food_beer_from_region;
    optional float food_beer_alcohol_content;
    optional float food_beer_original_gravity;
    optional byte food_beer_color_srm;
}
cell food_beer_container
{
    [GraphEdge]
    optional List<CellId> food_beer_container_beers;
}
cell food_beer_containment
{
    optional float food_beer_containment_size;
    [GraphEdge]
    optional CellId food_beer_containment_container_type;
    [GraphEdge]
    optional CellId food_beer_containment_beer;
}
cell food_beer_country_region
{
    [GraphEdge]
    optional List<CellId> food_beer_country_region_beers_from_here;
}
cell food_beer_production
{
    optional float food_beer_production_volume;
}
cell food_beer_style
{
    [GraphEdge]
    optional CellId food_beer_style_final_gravity_range;
    [GraphEdge]
    optional List<CellId> food_beer_style_beers;
    [GraphEdge]
    optional CellId food_beer_style_original_gravity_range;
    [GraphEdge]
    optional CellId food_beer_style_srm_range;
    [GraphEdge]
    optional CellId food_beer_style_alcohol_by_volume_range;
    [GraphEdge]
    optional CellId food_beer_style_ibu_range;
    [GraphEdge]
    optional CellId food_beer_style_bjcp_style_category;
}
cell food_beer_style_category
{
    [GraphEdge]
    optional List<CellId> food_beer_style_category_styles;
    optional byte food_beer_style_category_bjcp_id;
}
cell food_bottled_water
{
    optional float food_bottled_water_lithium_content;
    optional float food_bottled_water_floride_content;
    optional float food_bottled_water_silica_content;
    optional u8string food_bottled_water_water_type;
    optional float food_bottled_water_potassium_content;
    optional float food_bottled_water_chloride_content;
    optional float food_bottled_water_sodium_content;
    optional float food_bottled_water_calcium_content;
    [GraphEdge]
    optional CellId food_bottled_water_source;
    optional float food_bottled_water_ph;
    optional float food_bottled_water_nitrate_content;
    optional float food_bottled_water_bromine_content;
}
cell food_brewery_brand_of_beer
{
    [GraphEdge]
    optional List<CellId> food_brewery_brand_of_beer_beers_produced;
    [GraphEdge]
    optional List<CellId> food_brewery_brand_of_beer_annual_production;
}
cell food_candy_bar
{
    [GraphEdge]
    optional List<CellId> food_candy_bar_sold_in;
    [GraphEdge]
    optional List<CellId> food_candy_bar_manufacturer;
}
cell food_candy_bar_manufacturer
{
    [GraphEdge]
    optional List<CellId> food_candy_bar_manufacturer_candy_bars;
}
cell food_cheese
{
    [GraphEdge]
    optional List<CellId> food_cheese_country_of_origin;
    optional u8string food_cheese_cheesemaker;
    optional u8string food_cheese_rennet;
    optional u8string food_cheese_farm_company;
    optional u8string food_cheese_rind;
    optional u8string food_cheese_pasteurized;
    optional u8string food_cheese_affineur;
    optional List<u8string> food_cheese_aging_time;
    [GraphEdge]
    optional List<CellId> food_cheese_region;
    [GraphEdge]
    optional CellId food_cheese_certification;
    [GraphEdge]
    optional List<CellId> food_cheese_texture;
    [GraphEdge]
    optional List<CellId> food_cheese_source_of_milk;
}
cell food_cheese_certification
{
    [GraphEdge]
    optional List<CellId> food_cheese_certification_certified_cheeses;
    [GraphEdge]
    optional CellId food_cheese_certification_certification_region;
}
cell food_cheese_milk_source
{
    optional List<u8string> food_cheese_milk_source_cheeses;
}
cell food_cheese_texture
{
    [GraphEdge]
    optional List<CellId> food_cheese_texture_cheeses;
}
cell food_culinary_technique
{
    [GraphEdge]
    optional List<CellId> food_culinary_technique_recipes;
}
cell food_culinary_tool
{
    [GraphEdge]
    optional List<CellId> food_culinary_tool_used_in_recipes;
}
cell food_diet
{
    [GraphEdge]
    optional List<CellId> food_diet_recipes;
    [GraphEdge]
    optional List<CellId> food_diet_followers;
}
cell food_diet_follower
{
    [GraphEdge]
    optional List<CellId> food_diet_follower_follows_diet;
}
cell food_dietary_restriction
{
    optional List<u8string> food_dietary_restriction_compatible_ingredients;
    [GraphEdge]
    optional List<CellId> food_dietary_restriction_incompatible_ingredients;
}
cell food_dish
{
    [GraphEdge]
    optional List<CellId> food_dish_recipes;
    [GraphEdge]
    optional List<CellId> food_dish_type_of_dish1;
    [GraphEdge]
    optional List<CellId> food_dish_ingredients;
    [GraphEdge]
    optional List<CellId> food_dish_cuisine;
}
cell food_drinking_establishment
{
    [GraphEdge]
    optional List<CellId> food_drinking_establishment_drinking_establishment_type;
    [GraphEdge]
    optional CellId food_drinking_establishment_licensee;
}
cell food_drinking_establishment_type
{
    [GraphEdge]
    optional List<CellId> food_drinking_establishment_type_establishments_of_this_type;
}
cell food_food
{
    optional ushort food_food_usda_equivalent;
    optional ushort food_food_usda_id;
    [GraphEdge]
    optional List<CellId> food_food_nutrients;
    optional float food_food_energy;
}
cell food_ingredient
{
    [GraphEdge]
    optional List<CellId> food_ingredient_more_general_ingredient;
    [GraphEdge]
    optional List<CellId> food_ingredient_compatible_with_dietary_restrictions;
    [GraphEdge]
    optional List<CellId> food_ingredient_dishes;
    [GraphEdge]
    optional List<CellId> food_ingredient_more_specific_ingredient;
    [GraphEdge]
    optional List<CellId> food_ingredient_incompatible_with_dietary_restrictions;
    [GraphEdge]
    optional List<CellId> food_ingredient_recipes;
    [GraphEdge]
    optional List<CellId> food_ingredient_cuisine;
}
cell food_licensee
{
    [GraphEdge]
    optional CellId food_licensee_drinking_establishments;
}
cell food_licensee_tenure
{
    [GraphEdge]
    optional CellId food_licensee_tenure_drinking_establishment;
    [GraphEdge]
    optional List<CellId> food_licensee_tenure_licensee;
}
cell food_nutrient
{
    optional ushort food_nutrient_usda_id;
}
cell food_nutrition_fact
{
    [GraphEdge]
    optional CellId food_nutrition_fact_food;
    [GraphEdge]
    optional CellId food_nutrition_fact_nutrient;
    optional float food_nutrition_fact_quantity;
    optional float food_nutrition_fact_ius;
}
cell food_recipe
{
    [GraphEdge]
    optional CellId food_recipe_author;
    [GraphEdge]
    optional List<CellId> food_recipe_part_of_recipe_collection;
    [GraphEdge]
    optional CellId food_recipe_dish;
    [GraphEdge]
    optional CellId food_recipe_servings;
    [GraphEdge]
    optional List<CellId> food_recipe_ingredients;
    optional float food_recipe_cooking_time;
    optional List<u8string> food_recipe_suitable_for_diets;
    optional float food_recipe_preparation_time;
    [GraphEdge]
    optional List<CellId> food_recipe_equipment;
    [GraphEdge]
    optional List<CellId> food_recipe_techniques;
}
cell food_recipe_author
{
    [GraphEdge]
    optional List<CellId> food_recipe_author_recipes;
}
cell food_recipe_collection
{
    [GraphEdge]
    optional List<CellId> food_recipe_collection_recipes;
}
cell food_recipe_ingredient
{
    [GraphEdge]
    optional CellId food_recipe_ingredient_unit;
    optional float food_recipe_ingredient_quantity;
    [GraphEdge]
    optional CellId food_recipe_ingredient_recipe;
    [GraphEdge]
    optional CellId food_recipe_ingredient_ingredient;
    optional u8string food_recipe_ingredient_notes;
}
cell food_tea
{
    [GraphEdge]
    optional List<CellId> food_tea_regions_where_grown;
    [GraphEdge]
    optional List<CellId> food_tea_tea_type;
}
cell food_tea_type
{
    [GraphEdge]
    optional List<CellId> food_tea_type_tea;
}
cell food_type_of_dish
{
    [GraphEdge]
    optional List<CellId> food_type_of_dish_dishes;
}
cell food_wine_style
{
    [GraphEdge]
    optional List<CellId> food_wine_style_wines;
    [GraphEdge]
    optional List<CellId> food_wine_style_grape_varieties;
    [GraphEdge]
    optional CellId food_wine_style_place_of_origin;
    [GraphEdge]
    optional List<CellId> food_wine_style_wine_types;
}
cell games_game
{
    [GraphEdge]
    optional List<CellId> games_game_publisher;
    [GraphEdge]
    optional List<CellId> games_game_expansions;
    optional float games_game_minimum_age_years;
    [GraphEdge]
    optional List<CellId> games_game_derivative_games;
    [GraphEdge]
    optional List<CellId> games_game_designer;
    [GraphEdge]
    optional List<CellId> games_game_game_subjects;
    optional float games_game_maximum_playing_time_minutes;
    [GraphEdge]
    optional List<CellId> games_game_origin;
    [GraphEdge]
    optional List<CellId> games_game_genre;
    [GraphEdge]
    optional List<CellId> games_game_derived_from;
    optional float games_game_playing_time_minutes;
    [GraphEdge]
    optional CellId games_game_number_of_players;
}
cell games_game_designer
{
    [GraphEdge]
    optional List<CellId> games_game_designer_games_designed;
}
cell games_game_expansion
{
    optional u8string games_game_expansion_standalone;
    [GraphEdge]
    optional CellId games_game_expansion_game;
}
cell games_game_genre
{
    [GraphEdge]
    optional List<CellId> games_game_genre_boardgames;
}
cell games_game_publisher
{
    [GraphEdge]
    optional List<CellId> games_game_publisher_games_published;
}
cell games_playing_card_deck_type
{
    [GraphEdge]
    optional List<CellId> games_playing_card_deck_type_card_games;
}
cell games_playing_card_game
{
    optional List<byte> games_playing_card_game_number_of_cards;
    [GraphEdge]
    optional List<CellId> games_playing_card_game_deck_type;
    [GraphEdge]
    optional CellId games_playing_card_game_play_direction;
}
cell games_playing_card_game_play_direction
{
    [GraphEdge]
    optional List<CellId> games_playing_card_game_play_direction_card_games;
}
cell geography_body_of_water
{
    optional float geography_body_of_water_depth;
    optional float geography_body_of_water_surface_area;
    [GraphEdge]
    optional List<CellId> geography_body_of_water_islands;
    optional float geography_body_of_water_volume;
    optional float geography_body_of_water_mean_depth;
    optional List<u8string> geography_body_of_water_bridges;
}
cell geography_geographical_feature
{
    [GraphEdge]
    optional List<CellId> geography_geographical_feature_category;
}
cell geography_geographical_feature_category
{
    [GraphEdge]
    optional List<CellId> geography_geographical_feature_category_features;
    [GraphEdge]
    optional CellId geography_geographical_feature_category_subcategory_of;
    [GraphEdge]
    optional List<CellId> geography_geographical_feature_category_subcategories;
}
cell geography_glacier
{
    optional float geography_glacier_thickness;
    [GraphEdge]
    optional CellId geography_glacier_status;
    [GraphEdge]
    optional List<CellId> geography_glacier_glacier_type;
    optional float geography_glacier_length;
    [GraphEdge]
    optional List<CellId> geography_glacier_terminus;
}
cell geography_glacier_status
{
    [GraphEdge]
    optional List<CellId> geography_glacier_status_glaciers_of_this_status;
}
cell geography_island
{
    [GraphEdge]
    optional List<CellId> geography_island_body_of_water;
    [GraphEdge]
    optional List<CellId> geography_island_island_group;
    optional float geography_island_max_width;
    optional float geography_island_max_length;
}
cell geography_island_group
{
    optional List<u8string> geography_island_group_islands_in_group;
}
cell geography_lake
{
    optional byte geography_lake_no_islands;
    [GraphEdge]
    optional List<CellId> geography_lake_inflow;
    [GraphEdge]
    optional List<CellId> geography_lake_lake_type;
    optional List<u8string> geography_lake_outflow;
    optional float geography_lake_surface_elevation;
    optional float geography_lake_length;
    optional float geography_lake_width;
    [GraphEdge]
    optional List<CellId> geography_lake_cities;
    optional float geography_lake_shore_length;
    [GraphEdge]
    optional List<CellId> geography_lake_basin_countries;
    optional float geography_lake_catchment_area;
}
cell geography_lake_type
{
    optional List<u8string> geography_lake_type_lakes_of_this_type;
}
cell geography_mountain
{
    [GraphEdge]
    optional List<CellId> geography_mountain_listings;
    optional float geography_mountain_prominence;
    [GraphEdge]
    optional List<CellId> geography_mountain_age_of_rock;
    [GraphEdge]
    optional List<CellId> geography_mountain_mountain_range;
    [GraphEdge]
    optional List<CellId> geography_mountain_first_ascenders;
    optional float geography_mountain_elevation;
    [GraphEdge]
    optional List<CellId> geography_mountain_mountain_type;
}
cell geography_mountain_age
{
    optional float geography_mountain_age_age_in_years;
    [GraphEdge]
    optional CellId geography_mountain_age_geologic_era;
}
cell geography_mountain_listing
{
    [GraphEdge]
    optional List<CellId> geography_mountain_listing_mountains;
}
cell geography_mountain_pass
{
    [GraphEdge]
    optional List<CellId> geography_mountain_pass_range;
    [GraphEdge]
    optional List<CellId> geography_mountain_pass_transversed_by;
    optional float geography_mountain_pass_elevation;
}
cell geography_mountain_range
{
    [GraphEdge]
    optional List<CellId> geography_mountain_range_mountains;
    [GraphEdge]
    optional List<CellId> geography_mountain_range_passes;
}
cell geography_mountain_type
{
    optional List<u8string> geography_mountain_type_mountains_of_this_type;
}
cell geography_mountaineer
{
    [GraphEdge]
    optional List<CellId> geography_mountaineer_first_ascents;
}
cell geography_river
{
    optional float geography_river_basin_area;
    optional float geography_river_length;
    optional float geography_river_discharge;
    [GraphEdge]
    optional List<CellId> geography_river_origin_long_lat;
    [GraphEdge]
    optional List<CellId> geography_river_mouth;
    optional float geography_river_mouth_elevation_in_meters;
    [GraphEdge]
    optional CellId geography_river_mouth_long_lat;
    [GraphEdge]
    optional List<CellId> geography_river_origin;
    [GraphEdge]
    optional List<CellId> geography_river_basin_countries;
    [GraphEdge]
    optional List<CellId> geography_river_cities;
    optional float geography_river_source_elevation;
}
cell geography_waterfall
{
    optional float geography_waterfall_flow_rate;
    optional byte geography_waterfall_drop_number;
    optional float geography_waterfall_longest_height;
    optional float geography_waterfall_height;
    [GraphEdge]
    optional CellId geography_waterfall_waterfall_type;
}
cell geography_waterfall_type
{
    [GraphEdge]
    optional List<CellId> geography_waterfall_type_waterfalls;
}
cell geology_geological_formation
{
    [GraphEdge]
    optional List<CellId> geology_geological_formation_type_of_rock;
    [GraphEdge]
    optional CellId geology_geological_formation_formed_during_period;
}
cell geology_rock_type
{
    [GraphEdge]
    optional List<CellId> geology_rock_type_sub_types;
    [GraphEdge]
    optional List<CellId> geology_rock_type_formations;
    [GraphEdge]
    optional List<CellId> geology_rock_type_parent_rock_type;
}
cell government_australian_mp
{
    optional u8string government_australian_mp_house_id;
    optional u8string government_australian_mp_senate_id;
}
cell government_canadian_mp
{
    optional uint government_canadian_mp_house_id;
    optional u8string government_canadian_mp_senate_id;
}
cell government_election
{
    [GraphEdge]
    optional List<CellId> government_election_general_election;
    [GraphEdge]
    optional CellId government_election_district;
    [GraphEdge]
    optional List<CellId> government_election_campaigns;
    [GraphEdge]
    optional List<CellId> government_election_office;
    [GraphEdge]
    optional List<CellId> government_election_winner;
    [GraphEdge]
    optional List<CellId> government_election_primaries;
}
cell government_election_campaign
{
    [GraphEdge]
    optional CellId government_election_campaign_total_amount_raised;
    [GraphEdge]
    optional CellId government_election_campaign_candidate;
    [GraphEdge]
    optional List<CellId> government_election_campaign_election;
    [GraphEdge]
    optional List<CellId> government_election_campaign_party;
}
cell government_election_poll
{
    [GraphEdge]
    optional CellId government_election_poll_type_of_people_polled;
    [GraphEdge]
    optional List<CellId> government_election_poll_subject;
    [GraphEdge]
    optional List<CellId> government_election_poll_taken_by;
    optional float government_election_poll_margin_of_error;
    optional ushort government_election_poll_number_polled;
    [GraphEdge]
    optional CellId government_election_poll_election;
}
cell government_election_poll_score
{
    [GraphEdge]
    optional CellId government_election_poll_score_subject;
    [GraphEdge]
    optional CellId government_election_poll_score_poll;
    optional float government_election_poll_score_score;
}
cell government_election_with_polls
{
    [GraphEdge]
    optional List<CellId> government_election_with_polls_polls;
}
cell government_electoral_college
{
    [GraphEdge]
    optional List<CellId> government_electoral_college_elections;
    [GraphEdge]
    optional List<CellId> government_electoral_college_offices;
}
cell government_electoral_college_elected_office
{
    [GraphEdge]
    optional CellId government_electoral_college_elected_office_office;
    [GraphEdge]
    optional CellId government_electoral_college_elected_office_electoral_college;
}
cell government_form_of_government
{
    [GraphEdge]
    optional List<CellId> government_form_of_government_countries;
}
cell government_general_election
{
    [GraphEdge]
    optional List<CellId> government_general_election_legislative_results;
    [GraphEdge]
    optional List<CellId> government_general_election_includes_general_elections;
    [GraphEdge]
    optional List<CellId> government_general_election_contests;
    [GraphEdge]
    optional List<CellId> government_general_election_part_of_general_election;
    optional float government_general_election_turnout;
}
cell government_government
{
    [GraphEdge]
    optional List<CellId> government_government_agency;
    [GraphEdge]
    optional CellId government_government_government_for;
}
cell government_government_agency
{
    [GraphEdge]
    optional List<CellId> government_government_agency_jurisdiction;
    [GraphEdge]
    optional CellId government_government_agency_government;
    [GraphEdge]
    optional List<CellId> government_government_agency_provides_service;
    [GraphEdge]
    optional List<CellId> government_government_agency_predecessor_agency;
    [GraphEdge]
    optional List<CellId> government_government_agency_successor_agency;
}
cell government_government_issued_permit
{
    [GraphEdge]
    optional CellId government_government_issued_permit_permit_type;
    [GraphEdge]
    optional CellId government_government_issued_permit_renewal_channel;
    [GraphEdge]
    optional CellId government_government_issued_permit_issuing_service;
    [GraphEdge]
    optional CellId government_government_issued_permit_application_channel;
}
cell government_government_office_category
{
    [GraphEdge]
    optional List<CellId> government_government_office_category_officeholders;
    [GraphEdge]
    optional List<CellId> government_government_office_category_offices;
}
cell government_government_office_or_title
{
    [GraphEdge]
    optional CellId government_government_office_or_title_category;
    [GraphEdge]
    optional List<CellId> government_government_office_or_title_jurisdiction;
    [GraphEdge]
    optional List<CellId> government_government_office_or_title_office_holders;
    [GraphEdge]
    optional List<CellId> government_government_office_or_title_governmental_body_if_any;
}
cell government_government_permit_type
{
    [GraphEdge]
    optional List<CellId> government_government_permit_type_permit;
}
cell government_government_position_held
{
    [GraphEdge]
    optional List<CellId> government_government_position_held_legislative_sessions;
    [GraphEdge]
    optional CellId government_government_position_held_appointed_by;
    [GraphEdge]
    optional CellId government_government_position_held_office_position_or_title;
    [GraphEdge]
    optional CellId government_government_position_held_jurisdiction_of_office;
    [GraphEdge]
    optional CellId government_government_position_held_basic_title;
    [GraphEdge]
    optional CellId government_government_position_held_office_holder;
    [GraphEdge]
    optional CellId government_government_position_held_district_represented;
    [GraphEdge]
    optional CellId government_government_position_held_governmental_body;
}
cell government_government_service
{
    [GraphEdge]
    optional CellId government_government_service_government_service_channel;
    [GraphEdge]
    optional List<CellId> government_government_service_operating_organization;
    [GraphEdge]
    optional List<CellId> government_government_service_providing_agency;
    [GraphEdge]
    optional List<CellId> government_government_service_issues_permit;
    [GraphEdge]
    optional CellId government_government_service_government_service_type;
}
cell government_government_service_channel
{
    [GraphEdge]
    optional CellId government_government_service_channel_physical_location_access;
    [GraphEdge]
    optional CellId government_government_service_channel_government_service;
    [GraphEdge]
    optional CellId government_government_service_channel_phone_access;
    [GraphEdge]
    optional List<CellId> government_government_service_channel_available_language;
    [GraphEdge]
    optional List<CellId> government_government_service_channel_mailing_address_access;
}
cell government_government_service_type
{
    [GraphEdge]
    optional CellId government_government_service_type_government_service;
}
cell government_governmental_body
{
    optional List<u8string> government_governmental_body_members;
    [GraphEdge]
    optional List<CellId> government_governmental_body_jurisdiction;
    [GraphEdge]
    optional List<CellId> government_governmental_body_body_this_is_a_component_of;
    [GraphEdge]
    optional List<CellId> government_governmental_body_component_bodies;
    [GraphEdge]
    optional List<CellId> government_governmental_body_offices_positions;
    [GraphEdge]
    optional List<CellId> government_governmental_body_sessions;
    [GraphEdge]
    optional List<CellId> government_governmental_body_committees;
}
cell government_governmental_jurisdiction
{
    [GraphEdge]
    optional List<CellId> government_governmental_jurisdiction_government_bodies;
    [GraphEdge]
    optional List<CellId> government_governmental_jurisdiction_official_symbols;
    [GraphEdge]
    optional List<CellId> government_governmental_jurisdiction_agencies;
    [GraphEdge]
    optional List<CellId> government_governmental_jurisdiction_governing_officials;
    [GraphEdge]
    optional List<CellId> government_governmental_jurisdiction_government_positions;
    [GraphEdge]
    optional CellId government_governmental_jurisdiction_government;
}
cell government_indirect_election
{
    [GraphEdge]
    optional CellId government_indirect_election_electors;
}
cell government_legislative_committee
{
    [GraphEdge]
    optional CellId government_legislative_committee_subcommittee_of;
    [GraphEdge]
    optional CellId government_legislative_committee_legislature;
    [GraphEdge]
    optional List<CellId> government_legislative_committee_subcommittees;
    [GraphEdge]
    optional List<CellId> government_legislative_committee_members;
}
cell government_legislative_committee_membership
{
    [GraphEdge]
    optional CellId government_legislative_committee_membership_member;
    [GraphEdge]
    optional CellId government_legislative_committee_membership_committee;
    [GraphEdge]
    optional CellId government_legislative_committee_membership_title;
    [GraphEdge]
    optional CellId government_legislative_committee_membership_session;
}
cell government_legislative_committee_title
{
    [GraphEdge]
    optional List<CellId> government_legislative_committee_title_held_by;
}
cell government_legislative_election_results
{
    optional byte government_legislative_election_results_number_of_seats;
    [GraphEdge]
    optional CellId government_legislative_election_results_legislature;
    [GraphEdge]
    optional CellId government_legislative_election_results_party;
}
cell government_legislative_session
{
    [GraphEdge]
    optional List<CellId> government_legislative_session_legislature;
    [GraphEdge]
    optional List<CellId> government_legislative_session_members;
}
cell government_national_anthem
{
    [GraphEdge]
    optional List<CellId> government_national_anthem_national_anthem_of;
}
cell government_national_anthem_of_a_country
{
    [GraphEdge]
    optional CellId government_national_anthem_of_a_country_anthem;
    [GraphEdge]
    optional CellId government_national_anthem_of_a_country_country;
}
cell government_parliamentary_election
{
    [GraphEdge]
    optional CellId government_parliamentary_election_resulting_head_of_government;
    [GraphEdge]
    optional List<CellId> government_parliamentary_election_government_formed_by;
}
cell government_political_appointer
{
    [GraphEdge]
    optional List<CellId> government_political_appointer_appointees;
}
cell government_political_district
{
    [GraphEdge]
    optional List<CellId> government_political_district_elections;
    [GraphEdge]
    optional List<CellId> government_political_district_representatives;
}
cell government_political_ideology
{
    [GraphEdge]
    optional List<CellId> government_political_ideology_political_parties;
}
cell government_political_party
{
    [GraphEdge]
    optional List<CellId> government_political_party_country;
    optional List<u8string> government_political_party_politicians_in_this_party;
    [GraphEdge]
    optional List<CellId> government_political_party_ideology;
}
cell government_political_party_tenure
{
    [GraphEdge]
    optional CellId government_political_party_tenure_party;
    [GraphEdge]
    optional CellId government_political_party_tenure_politician;
}
cell government_politician
{
    [GraphEdge]
    optional List<CellId> government_politician_government_positions_held;
    optional List<u8string> government_politician_party;
    [GraphEdge]
    optional List<CellId> government_politician_election_campaigns;
    [GraphEdge]
    optional List<CellId> government_politician_legislative_committees_served_on;
}
cell government_poll_respondent_category
{
    [GraphEdge]
    optional List<CellId> government_poll_respondent_category_polls;
}
cell government_polled_entity
{
    [GraphEdge]
    optional List<CellId> government_polled_entity_poll_scores;
}
cell government_polling_authority
{
    [GraphEdge]
    optional List<CellId> government_polling_authority_polls;
}
cell government_primary_election
{
    [GraphEdge]
    optional CellId government_primary_election_party;
    [GraphEdge]
    optional CellId government_primary_election_follow_on_election;
}
cell government_u_s_congressperson
{
    optional u8string government_u_s_congressperson_thomas_id;
}
cell government_us_president
{
    optional List<byte> government_us_president_presidency_number;
    [GraphEdge]
    optional List<CellId> government_us_president_vice_president;
}
cell government_us_presidential_campaign
{
    [GraphEdge]
    optional CellId government_us_presidential_campaign_running_mate;
}
cell government_us_vice_president
{
    [GraphEdge]
    optional List<CellId> government_us_vice_president_to_president;
    optional byte government_us_vice_president_vice_president_number;
}
cell government_us_vice_presidential_campaign
{
    [GraphEdge]
    optional CellId government_us_vice_presidential_campaign_running_mate;
}
cell ice_hockey_hockey_coach
{
    [GraphEdge]
    optional List<CellId> ice_hockey_hockey_coach_current_team;
}
cell ice_hockey_hockey_conference
{
    [GraphEdge]
    optional List<CellId> ice_hockey_hockey_conference_teams;
    [GraphEdge]
    optional List<CellId> ice_hockey_hockey_conference_divisions;
    [GraphEdge]
    optional CellId ice_hockey_hockey_conference_league;
}
cell ice_hockey_hockey_division
{
    [GraphEdge]
    optional List<CellId> ice_hockey_hockey_division_teams;
    [GraphEdge]
    optional CellId ice_hockey_hockey_division_conference;
}
cell ice_hockey_hockey_player
{
    [GraphEdge]
    optional List<CellId> ice_hockey_hockey_player_hockey_position;
    [GraphEdge]
    optional List<CellId> ice_hockey_hockey_player_shoots;
}
cell ice_hockey_hockey_position
{
    optional List<u8string> ice_hockey_hockey_position_players;
}
cell ice_hockey_hockey_team
{
    [GraphEdge]
    optional CellId ice_hockey_hockey_team_conference;
    [GraphEdge]
    optional List<CellId> ice_hockey_hockey_team_coach;
    [GraphEdge]
    optional List<CellId> ice_hockey_hockey_team_captain;
    [GraphEdge]
    optional CellId ice_hockey_hockey_team_division;
}
cell imdb_topic
{
    optional List<u8string> imdb_topic_title_id;
    optional List<u8string> imdb_topic_company_id;
    optional List<u8string> imdb_topic_character_id;
    optional List<u8string> imdb_topic_name_id;
}
cell influence_influence_node
{
    [GraphEdge]
    optional List<CellId> influence_influence_node_influenced_by;
    [GraphEdge]
    optional List<CellId> influence_influence_node_influenced;
    [GraphEdge]
    optional List<CellId> influence_influence_node_peers;
}
cell influence_peer_relationship
{
    [GraphEdge]
    optional List<CellId> influence_peer_relationship_peers;
}
cell interests_collectable_item
{
    [GraphEdge]
    optional List<CellId> interests_collectable_item_collection_category;
    [GraphEdge]
    optional List<CellId> interests_collectable_item_in_collections;
}
cell interests_collection
{
    [GraphEdge]
    optional CellId interests_collection_category;
    [GraphEdge]
    optional CellId interests_collection_collector;
    [GraphEdge]
    optional List<CellId> interests_collection_items;
}
cell interests_collection_activity
{
    [GraphEdge]
    optional List<CellId> interests_collection_activity_type_of_thing_collected;
}
cell interests_collection_category
{
    [GraphEdge]
    optional List<CellId> interests_collection_category_name_of_collection_activity;
    [GraphEdge]
    optional List<CellId> interests_collection_category_parent_category;
    [GraphEdge]
    optional List<CellId> interests_collection_category_items_in_this_category;
    [GraphEdge]
    optional List<CellId> interests_collection_category_collectors;
    [GraphEdge]
    optional List<CellId> interests_collection_category_sub_categories;
}
cell interests_collector
{
    [GraphEdge]
    optional List<CellId> interests_collector_collections;
}
cell interests_hobby
{
    [GraphEdge]
    optional List<CellId> interests_hobby_people_with_this_hobby;
}
cell interests_hobbyist
{
    [GraphEdge]
    optional List<CellId> interests_hobbyist_hobbies;
}
cell interests_interest
{
    [GraphEdge]
    optional List<CellId> interests_interest_people_with_this_interest;
}
cell internet_api
{
    [GraphEdge]
    optional List<CellId> internet_api_protocols;
    [GraphEdge]
    optional List<CellId> internet_api_site;
}
cell internet_blog
{
    [GraphEdge]
    optional List<CellId> internet_blog_language;
    [GraphEdge]
    optional List<CellId> internet_blog_focus;
    [GraphEdge]
    optional List<CellId> internet_blog_blogger;
}
cell internet_blogger
{
    [GraphEdge]
    optional List<CellId> internet_blogger_blog;
}
cell internet_localized_uri
{
    [GraphEdge]
    optional List<CellId> internet_localized_uri_language;
    [GraphEdge]
    optional List<CellId> internet_localized_uri_location;
}
cell internet_protocol
{
    [GraphEdge]
    optional List<CellId> internet_protocol_api;
}
cell internet_top_level_domain
{
    [GraphEdge]
    optional List<CellId> internet_top_level_domain_status;
    [GraphEdge]
    optional List<CellId> internet_top_level_domain_domain_type;
    [GraphEdge]
    optional List<CellId> internet_top_level_domain_registry;
    [GraphEdge]
    optional List<CellId> internet_top_level_domain_sponsor;
}
cell internet_top_level_domain_registry
{
    [GraphEdge]
    optional List<CellId> internet_top_level_domain_registry_domains;
}
cell internet_top_level_domain_sponsor
{
    [GraphEdge]
    optional List<CellId> internet_top_level_domain_sponsor_domains;
}
cell internet_top_level_domain_status
{
    [GraphEdge]
    optional List<CellId> internet_top_level_domain_status_domains;
}
cell internet_top_level_domain_type
{
    [GraphEdge]
    optional List<CellId> internet_top_level_domain_type_domains;
}
cell internet_website
{
    [GraphEdge]
    optional List<CellId> internet_website_status;
    [GraphEdge]
    optional List<CellId> internet_website_category;
    [GraphEdge]
    optional List<CellId> internet_website_owner_new;
    [GraphEdge]
    optional List<CellId> internet_website_owner;
    [GraphEdge]
    optional List<CellId> internet_website_sub_web_properties;
    [GraphEdge]
    optional CellId internet_website_parent_web_property;
    [GraphEdge]
    optional List<CellId> internet_website_api;
}
cell internet_website_category
{
    [GraphEdge]
    optional List<CellId> internet_website_category_sites;
}
cell internet_website_owner
{
    [GraphEdge]
    optional List<CellId> internet_website_owner_websites_owned_new;
    [GraphEdge]
    optional List<CellId> internet_website_owner_websites_owned;
}
cell internet_website_ownership
{
    [GraphEdge]
    optional CellId internet_website_ownership_owner;
    [GraphEdge]
    optional CellId internet_website_ownership_website;
}
cell internet_website_status
{
    optional List<u8string> internet_website_status_sites;
}
cell kg_object_profile
{
    optional u8string kg_object_profile_prominent_type;
}
cell kp_lw_philosopher
{
    [GraphEdge]
    optional List<CellId> kp_lw_philosopher_influenced;
    [GraphEdge]
    optional List<CellId> kp_lw_philosopher_influenced_by;
    [GraphEdge]
    optional List<CellId> kp_lw_philosopher_era;
    [GraphEdge]
    optional List<CellId> kp_lw_philosopher_region;
    [GraphEdge]
    optional List<CellId> kp_lw_philosopher_main_interests;
    [GraphEdge]
    optional List<CellId> kp_lw_philosopher_school;
}
cell kp_lw_philosophy_influencee
{
    [GraphEdge]
    optional CellId kp_lw_philosophy_influencee_influencer;
}
cell kp_lw_philosophy_influencer
{
    [GraphEdge]
    optional List<CellId> kp_lw_philosophy_influencer_influencee;
}
cell kp_lw_wine_grape_variety
{
    [GraphEdge]
    optional CellId kp_lw_wine_grape_variety_origin;
}
cell language_conlang
{
    [GraphEdge]
    optional List<CellId> language_conlang_created_by;
    [GraphEdge]
    optional CellId language_conlang_conlang_type;
}
cell language_conlang_purpose
{
    [GraphEdge]
    optional CellId language_conlang_purpose_languages_of_this_type;
}
cell language_human_language
{
    optional List<u8string> language_human_language_iso_639_3_code;
    [GraphEdge]
    optional List<CellId> language_human_language_writing_system;
    [GraphEdge]
    optional List<CellId> language_human_language_countries_spoken_in;
    optional List<u8string> language_human_language_iso_639_2_code;
    [GraphEdge]
    optional CellId language_human_language_region;
    [GraphEdge]
    optional List<CellId> language_human_language_language_family;
    [GraphEdge]
    optional List<CellId> language_human_language_main_country;
    [GraphEdge]
    optional List<CellId> language_human_language_dialects;
    optional u8string language_human_language_rosetta_project_code;
    optional List<u8string> language_human_language_iso_639_1_code;
}
cell language_language_creator
{
    [GraphEdge]
    optional List<CellId> language_language_creator_languages_created;
}
cell language_language_dialect
{
    [GraphEdge]
    optional List<CellId> language_language_dialect_language;
}
cell language_language_family
{
    optional List<u8string> language_language_family_languages;
    optional u8string language_language_family_iso_639_5_code;
    [GraphEdge]
    optional List<CellId> language_language_family_geographic_distribution;
    [GraphEdge]
    optional List<CellId> language_language_family_sub_families;
    [GraphEdge]
    optional List<CellId> language_language_family_member_of_language_families;
}
cell language_language_regulator
{
    [GraphEdge]
    optional CellId language_language_regulator_language;
}
cell language_language_writing_system
{
    [GraphEdge]
    optional List<CellId> language_language_writing_system_type_of_writing;
    optional u8string language_language_writing_system_iso_15924_alpha;
    [GraphEdge]
    optional List<CellId> language_language_writing_system_child_writing_systems;
    optional ushort language_language_writing_system_iso_15924_numeric;
    optional List<u8string> language_language_writing_system_ISO_15924_code;
    [GraphEdge]
    optional List<CellId> language_language_writing_system_languages;
    [GraphEdge]
    optional List<CellId> language_language_writing_system_parent_writing_systems;
}
cell language_language_writing_type
{
    optional List<u8string> language_language_writing_type_writing_systems;
}
cell law_constitution
{
    [GraphEdge]
    optional List<CellId> law_constitution_unratified_amendments;
    [GraphEdge]
    optional List<CellId> law_constitution_amendments;
    [GraphEdge]
    optional List<CellId> law_constitution_constitutional_convention;
    [GraphEdge]
    optional CellId law_constitution_country;
}
cell law_constitutional_amendment
{
    [GraphEdge]
    optional CellId law_constitutional_amendment_proposed_by;
    [GraphEdge]
    optional CellId law_constitutional_amendment_constitution;
}
cell law_constitutional_amendment_proposer
{
    [GraphEdge]
    optional List<CellId> law_constitutional_amendment_proposer_constitutional_amendments_proposed;
}
cell law_constitutional_convention
{
    [GraphEdge]
    optional CellId law_constitutional_convention_constitution;
    [GraphEdge]
    optional List<CellId> law_constitutional_convention_delegates;
}
cell law_constitutional_convention_delegate
{
    [GraphEdge]
    optional CellId law_constitutional_convention_delegate_constitutional_conventions;
}
cell law_court
{
    [GraphEdge]
    optional List<CellId> law_court_jurisdiction;
    [GraphEdge]
    optional List<CellId> law_court_inferior_courts;
    [GraphEdge]
    optional List<CellId> law_court_superior_courts;
    [GraphEdge]
    optional List<CellId> law_court_judges;
    [GraphEdge]
    optional List<CellId> law_court_legal_cases;
    [GraphEdge]
    optional CellId law_court_courthouse;
}
cell law_court_courthouse_relationship
{
    [GraphEdge]
    optional CellId law_court_courthouse_relationship_court;
    [GraphEdge]
    optional CellId law_court_courthouse_relationship_courthouse;
}
cell law_court_jurisdiction_area
{
    [GraphEdge]
    optional List<CellId> law_court_jurisdiction_area_courts;
}
cell law_courthouse
{
    [GraphEdge]
    optional List<CellId> law_courthouse_courts_sitting_here;
}
cell law_international_patent_category
{
    [GraphEdge]
    optional CellId law_international_patent_category_patents;
}
cell law_invention
{
    [GraphEdge]
    optional List<CellId> law_invention_patents;
    [GraphEdge]
    optional List<CellId> law_invention_inventor;
}
cell law_inventor
{
    [GraphEdge]
    optional List<CellId> law_inventor_inventions;
    [GraphEdge]
    optional List<CellId> law_inventor_us_patents;
}
cell law_judge
{
    [GraphEdge]
    optional List<CellId> law_judge_courts;
    [GraphEdge]
    optional List<CellId> law_judge_cases;
}
cell law_judicial_tenure
{
    [GraphEdge]
    optional CellId law_judicial_tenure_title;
    [GraphEdge]
    optional CellId law_judicial_tenure_court;
    [GraphEdge]
    optional CellId law_judicial_tenure_judge;
}
cell law_judicial_title
{
    [GraphEdge]
    optional List<CellId> law_judicial_title_judges;
}
cell law_legal_case
{
    optional List<u8string> law_legal_case_citations;
    [GraphEdge]
    optional List<CellId> law_legal_case_parties;
    [GraphEdge]
    optional CellId law_legal_case_court;
    [GraphEdge]
    optional List<CellId> law_legal_case_judges;
    [GraphEdge]
    optional List<CellId> law_legal_case_subject;
}
cell law_legal_case_party_relationship
{
    [GraphEdge]
    optional List<CellId> law_legal_case_party_relationship_parties;
    [GraphEdge]
    optional List<CellId> law_legal_case_party_relationship_role;
    [GraphEdge]
    optional CellId law_legal_case_party_relationship_case;
}
cell law_legal_party_role
{
    [GraphEdge]
    optional List<CellId> law_legal_party_role_parties;
}
cell law_legal_subject
{
    [GraphEdge]
    optional List<CellId> law_legal_subject_legal_cases;
}
cell law_litigant
{
    [GraphEdge]
    optional List<CellId> law_litigant_party_to_cases;
}
cell law_patent_assignee
{
    [GraphEdge]
    optional List<CellId> law_patent_assignee_patents_assigned;
}
cell law_patent_office
{
    [GraphEdge]
    optional List<CellId> law_patent_office_patents;
}
cell law_us_patent
{
    [GraphEdge]
    optional List<CellId> law_us_patent_us_classification_category;
    [GraphEdge]
    optional List<CellId> law_us_patent_assignee;
    [GraphEdge]
    optional CellId law_us_patent_us_patent_type;
    [GraphEdge]
    optional List<CellId> law_us_patent_inventor;
    [GraphEdge]
    optional CellId law_us_patent_international_classification;
    optional u8string law_us_patent_application_number;
    optional u8string law_us_patent_patent_number;
    [GraphEdge]
    optional CellId law_us_patent_patent_office;
    [GraphEdge]
    optional List<CellId> law_us_patent_associated_inventions;
}
cell law_us_patent_category
{
    [GraphEdge]
    optional CellId law_us_patent_category_patents;
}
cell law_us_patent_type
{
    [GraphEdge]
    optional List<CellId> law_us_patent_type_patents;
}
cell library_public_library
{
    [GraphEdge]
    optional CellId library_public_library_phone_number;
    [GraphEdge]
    optional CellId library_public_library_address;
    [GraphEdge]
    optional CellId library_public_library_library_system;
}
cell library_public_library_system
{
    [GraphEdge]
    optional List<CellId> library_public_library_system_collection_size;
    [GraphEdge]
    optional CellId library_public_library_system_central_library;
    [GraphEdge]
    optional List<CellId> library_public_library_system_annual_visits;
    [GraphEdge]
    optional List<CellId> library_public_library_system_branches;
    optional List<u8string> library_public_library_system_nces_code;
    [GraphEdge]
    optional List<CellId> library_public_library_system_annual_circulation;
}
cell location_adjoining_relationship
{
    [GraphEdge]
    optional List<CellId> location_adjoining_relationship_adjoins;
}
cell location_administrative_division
{
    [GraphEdge]
    optional CellId location_administrative_division_country;
    optional List<u8string> location_administrative_division_fips_10_4_region_code;
    optional List<u8string> location_administrative_division_iso_3166_2_code;
    [GraphEdge]
    optional CellId location_administrative_division_second_level_division_of;
    [GraphEdge]
    optional CellId location_administrative_division_fourth_level_division_of;
    [GraphEdge]
    optional CellId location_administrative_division_third_level_division_of;
    [GraphEdge]
    optional List<CellId> location_administrative_division_capital;
    [GraphEdge]
    optional CellId location_administrative_division_first_level_division_of;
}
cell location_administrative_division_capital_relationship
{
    [GraphEdge]
    optional CellId location_administrative_division_capital_relationship_capital;
    [GraphEdge]
    optional CellId location_administrative_division_capital_relationship_administrative_division;
    [GraphEdge]
    optional List<CellId> location_administrative_division_capital_relationship_capital_type;
}
cell location_ar_department
{
    [GraphEdge]
    optional CellId location_ar_department_capital;
}
cell location_ar_province
{
    [GraphEdge]
    optional CellId location_ar_province_capital;
}
cell location_australian_state
{
    [GraphEdge]
    optional List<CellId> location_australian_state_premiers;
    [GraphEdge]
    optional CellId location_australian_state_capital_city;
    [GraphEdge]
    optional List<CellId> location_australian_state_governors;
}
cell location_australian_suburb
{
    [GraphEdge]
    optional CellId location_australian_suburb_postal_code;
}
cell location_australian_territory
{
    [GraphEdge]
    optional CellId location_australian_territory_capital_city;
}
cell location_br_state
{
    [GraphEdge]
    optional CellId location_br_state_capital;
}
cell location_ca_indian_reserve
{
    [GraphEdge]
    optional CellId location_ca_indian_reserve_aboriginal_groups;
}
cell location_capital_category
{
    [GraphEdge]
    optional List<CellId> location_capital_category_capitals_of_administrative_divisions;
}
cell location_capital_of_administrative_division
{
    [GraphEdge]
    optional List<CellId> location_capital_of_administrative_division_capital_of;
}
cell location_census_tract
{
    [GraphEdge]
    optional CellId location_census_tract_ams_bus;
    [GraphEdge]
    optional CellId location_census_tract_bus_vac;
    [GraphEdge]
    optional CellId location_census_tract_avg_vac_r;
    [GraphEdge]
    optional CellId location_census_tract_res_vac;
    optional ulong location_census_tract_geoid;
    [GraphEdge]
    optional CellId location_census_tract_avg_vac_b;
    [GraphEdge]
    optional CellId location_census_tract_ams_oth;
    [GraphEdge]
    optional CellId location_census_tract_oth_vac;
    [GraphEdge]
    optional CellId location_census_tract_ams_res;
}
cell location_citytown
{
    [GraphEdge]
    optional CellId location_citytown_city_limits;
    [GraphEdge]
    optional List<CellId> location_citytown_postal_codes;
}
cell location_cn_autonomous_county
{
    [GraphEdge]
    optional List<CellId> location_cn_autonomous_county_designated_minority;
}
cell location_cn_autonomous_prefecture
{
    [GraphEdge]
    optional List<CellId> location_cn_autonomous_prefecture_designated_minority;
}
cell location_cn_autonomous_region
{
    [GraphEdge]
    optional CellId location_cn_autonomous_region_designated_minority;
}
cell location_cn_prefecture
{
    [GraphEdge]
    optional CellId location_cn_prefecture_capital;
}
cell location_cn_province
{
    [GraphEdge]
    optional CellId location_cn_province_capital;
}
cell location_co2_emission
{
    optional float location_co2_emission_emissions;
}
cell location_cotermination
{
    [GraphEdge]
    optional List<CellId> location_cotermination_location;
}
cell location_country
{
    optional ushort location_country_calling_code;
    [GraphEdge]
    optional List<CellId> location_country_languages_spoken;
    [GraphEdge]
    optional CellId location_country_gdp_nominal;
    [GraphEdge]
    optional List<CellId> location_country_currency_used;
    [GraphEdge]
    optional List<CellId> location_country_national_anthem;
    [GraphEdge]
    optional List<CellId> location_country_capital;
    [GraphEdge]
    optional List<CellId> location_country_second_level_divisions;
    [GraphEdge]
    optional List<CellId> location_country_administrative_divisions;
    optional u8string location_country_fifa_code;
    [GraphEdge]
    optional List<CellId> location_country_third_level_divisions;
    [GraphEdge]
    optional List<CellId> location_country_first_level_divisions;
    [GraphEdge]
    optional List<CellId> location_country_currency_formerly_used;
    optional u8string location_country_iso3166_1_shortname;
    optional ushort location_country_iso_numeric;
    [GraphEdge]
    optional List<CellId> location_country_gdp_nominal_per_capita;
    [GraphEdge]
    optional CellId location_country_fourth_level_divisions;
    [GraphEdge]
    optional List<CellId> location_country_official_language;
    optional u8string location_country_iso3166_1_alpha2;
    optional u8string location_country_iso_alpha_3;
    optional u8string location_country_fips10_4;
    [GraphEdge]
    optional List<CellId> location_country_internet_tld;
    [GraphEdge]
    optional List<CellId> location_country_form_of_government;
}
cell location_de_regierungsbezirk
{
    [GraphEdge]
    optional CellId location_de_regierungsbezirk_district_seat;
}
cell location_de_rural_district
{
    [GraphEdge]
    optional CellId location_de_rural_district_district_seat;
}
cell location_de_state
{
    [GraphEdge]
    optional CellId location_de_state_capital;
}
cell location_electricity_production
{
    optional float location_electricity_production_electricity_produced;
}
cell location_es_autonomous_community
{
    [GraphEdge]
    optional CellId location_es_autonomous_community_capital;
}
cell location_es_comarca
{
    [GraphEdge]
    optional List<CellId> location_es_comarca_capital;
}
cell location_es_province
{
    [GraphEdge]
    optional CellId location_es_province_capital;
}
cell location_fr_department
{
    optional byte location_fr_department_code_insee;
    [GraphEdge]
    optional CellId location_fr_department_region;
    [GraphEdge]
    optional CellId location_fr_department_chef_lieu;
}
cell location_fr_region
{
    [GraphEdge]
    optional List<CellId> location_fr_region_departments;
    [GraphEdge]
    optional CellId location_fr_region_capital;
}
cell location_geocode
{
    optional float location_geocode_longitude;
    optional float location_geocode_latitude;
    optional u8string location_geocode_datum;
    optional float location_geocode_elevation;
}
cell location_geometry
{
    [GraphEdge]
    optional CellId location_geometry_delineates_location;
}
cell location_hud_county_place
{
    [GraphEdge]
    optional CellId location_hud_county_place_place;
    optional List<ulong> location_hud_county_place_countyplace_id;
    [GraphEdge]
    optional CellId location_hud_county_place_county;
}
cell location_hud_foreclosure_area
{
    [GraphEdge]
    optional List<CellId> location_hud_foreclosure_area_bls_unemployment_rate;
    [GraphEdge]
    optional List<CellId> location_hud_foreclosure_area_total_90_day_vacant_residential_addresses;
    [GraphEdge]
    optional List<CellId> location_hud_foreclosure_area_estimated_number_foreclosures;
    [GraphEdge]
    optional List<CellId> location_hud_foreclosure_area_total_residential_addresses;
    [GraphEdge]
    optional List<CellId> location_hud_foreclosure_area_hhuniv;
    [GraphEdge]
    optional List<CellId> location_hud_foreclosure_area_ofheo_price_change;
    [GraphEdge]
    optional List<CellId> location_hud_foreclosure_area_estimated_number_of_mortgages;
}
cell location_hud_section_8_area
{
    optional u8string location_hud_section_8_area_section_8_area_id;
    [GraphEdge]
    optional CellId location_hud_section_8_area_median_family_income;
    [GraphEdge]
    optional List<CellId> location_hud_section_8_area_county;
}
cell location_id_province
{
    [GraphEdge]
    optional CellId location_id_province_Capital;
}
cell location_id_regency
{
    [GraphEdge]
    optional CellId location_id_regency_regency_seat;
}
cell location_imports_and_exports
{
    [GraphEdge]
    optional CellId location_imports_and_exports_currency;
    optional float location_imports_and_exports_amount;
    [GraphEdge]
    optional CellId location_imports_and_exports_exported_to;
    [GraphEdge]
    optional CellId location_imports_and_exports_imported_from;
}
cell location_imports_exports_by_industry
{
    optional float location_imports_exports_by_industry_amount;
    [GraphEdge]
    optional CellId location_imports_exports_by_industry_currency;
    [GraphEdge]
    optional CellId location_imports_exports_by_industry_industry;
}
cell location_in_division
{
    [GraphEdge]
    optional CellId location_in_division_administrative_headquarters;
}
cell location_in_state
{
    [GraphEdge]
    optional List<CellId> location_in_state_administrative_capital;
    [GraphEdge]
    optional List<CellId> location_in_state_legislative_capital;
    [GraphEdge]
    optional List<CellId> location_in_state_judicial_capital;
}
cell location_it_province
{
    [GraphEdge]
    optional List<CellId> location_it_province_capital;
}
cell location_it_region
{
    [GraphEdge]
    optional CellId location_it_region_capital;
}
cell location_jp_prefecture
{
    [GraphEdge]
    optional CellId location_jp_prefecture_capital;
}
cell location_kp_province
{
    [GraphEdge]
    optional CellId location_kp_province_capital;
}
cell location_location
{
    [GraphEdge]
    optional List<CellId> location_location_coterminous_with;
    [GraphEdge]
    optional List<CellId> location_location_partially_contains;
    [GraphEdge]
    optional List<CellId> location_location_partially_contained_by;
    optional float location_location_area_water;
    [GraphEdge]
    optional List<CellId> location_location_partially_containedby;
    optional List<u8string> location_location_people_born_here;
    optional List<uint> location_location_gnis_feature_id;
    [GraphEdge]
    optional List<CellId> location_location_events;
    optional float location_location_area;
    optional List<u8string> location_location_adjectival_form;
    [GraphEdge]
    optional List<CellId> location_location_primarily_containedby;
    [GraphEdge]
    optional List<CellId> location_location_containedby;
    optional float location_location_mean_elevation;
    [GraphEdge]
    optional List<CellId> location_location_time_zones;
    optional u8string location_location_gns_ufi;
    [GraphEdge]
    optional CellId location_location_geolocation;
    optional List<u8string> location_location_unlocode;
    optional float location_location_area_land;
    [GraphEdge]
    optional List<CellId> location_location_partiallycontains;
    optional List<u8string> location_location_contains;
    [GraphEdge]
    optional List<CellId> location_location_geometry;
    [GraphEdge]
    optional List<CellId> location_location_contains_major_portion_of;
    [GraphEdge]
    optional List<CellId> location_location_adjoin_s;
    optional u8string location_location_usbg_name;
    [GraphEdge]
    optional CellId location_location_street_address;
    [GraphEdge]
    optional List<CellId> location_location_nearby_airports;
}
cell location_location_symbol_relationship
{
    [GraphEdge]
    optional CellId location_location_symbol_relationship_administrative_division;
    [GraphEdge]
    optional CellId location_location_symbol_relationship_Kind_of_symbol;
    [GraphEdge]
    optional List<CellId> location_location_symbol_relationship_symbol;
}
cell location_mailing_address
{
    [GraphEdge]
    optional CellId location_mailing_address_state_province_region;
    optional u8string location_mailing_address_street_address_2;
    [GraphEdge]
    optional CellId location_mailing_address_citytown;
    optional List<u8string> location_mailing_address_street_address;
    optional u8string location_mailing_address_street_address_3;
    [GraphEdge]
    optional CellId location_mailing_address_postal_code;
    [GraphEdge]
    optional CellId location_mailing_address_country;
    optional u8string location_mailing_address_street_address_4;
}
cell location_metropolitan_area
{
    [GraphEdge]
    optional List<CellId> location_metropolitan_area_anchor_city;
    [GraphEdge]
    optional CellId location_metropolitan_area_category;
}
cell location_metropolitan_area_anchor
{
    [GraphEdge]
    optional List<CellId> location_metropolitan_area_anchor_metropolitan_area;
}
cell location_metropolitan_area_category
{
    [GraphEdge]
    optional List<CellId> location_metropolitan_area_category_metro_areas;
}
cell location_mx_state
{
    [GraphEdge]
    optional CellId location_mx_state_capital;
}
cell location_natural_gas_production
{
    optional float location_natural_gas_production_natural_gas_produced;
}
cell location_neighborhood
{
    [GraphEdge]
    optional List<CellId> location_neighborhood_neighborhood_of;
}
cell location_nl_province
{
    [GraphEdge]
    optional CellId location_nl_province_capital;
}
cell location_offical_symbol_variety
{
    [GraphEdge]
    optional List<CellId> location_offical_symbol_variety_symbols_of_this_kind;
}
cell location_oil_production
{
    optional float location_oil_production_oil_produced;
}
cell location_partial_containment_relationship
{
    optional float location_partial_containment_relationship_percent_area;
    [GraphEdge]
    optional CellId location_partial_containment_relationship_partially_contains;
    [GraphEdge]
    optional CellId location_partial_containment_relationship_partially_contained_by;
    optional float location_partial_containment_relationship_area;
}
cell location_place_with_neighborhoods
{
    [GraphEdge]
    optional List<CellId> location_place_with_neighborhoods_neighborhoods;
}
cell location_postal_code
{
    optional u8string location_postal_code_postal_code;
    [GraphEdge]
    optional CellId location_postal_code_country;
}
cell location_province
{
    [GraphEdge]
    optional CellId location_province_capital;
}
cell location_religion_percentage
{
    [GraphEdge]
    optional CellId location_religion_percentage_religion;
    optional float location_religion_percentage_percentage;
}
cell location_ru_oblast
{
    [GraphEdge]
    optional CellId location_ru_oblast_administrative_center;
}
cell location_ru_raion
{
    [GraphEdge]
    optional CellId location_ru_raion_administrative_center;
}
cell location_ru_republic
{
    [GraphEdge]
    optional CellId location_ru_republic_capital;
}
cell location_statistical_region
{
    [GraphEdge]
    optional List<CellId> location_statistical_region_co2_emissions_commercial;
    [GraphEdge]
    optional List<CellId> location_statistical_region_rent50_3;
    optional List<u8string> location_statistical_region_consumer_price_index;
    optional List<u8string> location_statistical_region_poverty_rate_2dollars_per_day;
    [GraphEdge]
    optional CellId location_statistical_region_crude_death_rate;
    optional List<u8string> location_statistical_region_gdp_real;
    [GraphEdge]
    optional List<CellId> location_statistical_region_places_imported_from;
    optional List<u8string> location_statistical_region_high_tech_as_percent_of_manufactured_exports;
    [GraphEdge]
    optional CellId location_statistical_region_arithmetic_population_density;
    [GraphEdge]
    optional List<CellId> location_statistical_region_co2_emissions_total;
    [GraphEdge]
    optional List<CellId> location_statistical_region_rent50_0;
    optional List<u8string> location_statistical_region_gdp_growth_rate;
    optional List<u8string> location_statistical_region_health_expenditure_as_percent_of_gdp;
    [GraphEdge]
    optional List<CellId> location_statistical_region_rent50_2;
    [GraphEdge]
    optional List<CellId> location_statistical_region_co2_emissions_mobile;
    optional List<u8string> location_statistical_region_external_debt_stock;
    optional List<u8string> location_statistical_region_renewable_freshwater_per_capita;
    [GraphEdge]
    optional List<CellId> location_statistical_region_co2_emissions_residential;
    optional List<ulong> location_statistical_region_hud_id;
    optional List<u8string> location_statistical_region_fertility_rate;
    optional List<u8string> location_statistical_region_literacy_rate;
    [GraphEdge]
    optional List<CellId> location_statistical_region_major_imports;
    [GraphEdge]
    optional List<CellId> location_statistical_region_automobiles_per_capita;
    [GraphEdge]
    optional List<CellId> location_statistical_region_co2_emissions_industrial;
    [GraphEdge]
    optional List<CellId> location_statistical_region_rent50_4;
    optional List<u8string> location_statistical_region_internet_users_percent_population;
    optional List<u8string> location_statistical_region_diesel_price_liter;
    [GraphEdge]
    optional List<CellId> location_statistical_region_rent50_1;
    optional List<u8string> location_statistical_region_deposit_interest_rate;
    optional List<u8string> location_statistical_region_household_consumption_expenditure_as_percent_of_gdp;
    [GraphEdge]
    optional CellId location_statistical_region_crude_birth_rate;
    optional List<u8string> location_statistical_region_gender_balance_members_of_parliament;
    optional List<u8string> location_statistical_region_merchandise_trade_percent_of_gdp;
    [GraphEdge]
    optional CellId location_statistical_region_electricity_production;
    [GraphEdge]
    optional List<CellId> location_statistical_region_oil_production;
    optional List<u8string> location_statistical_region_co2_emissions_per_capita;
    [GraphEdge]
    optional CellId location_statistical_region_natural_gas_production;
    optional List<u8string> location_statistical_region_labor_participation_rate;
    optional List<u8string> location_statistical_region_gdp_nominal_per_capita;
    optional List<u8string> location_statistical_region_child_labor_percent;
    optional List<u8string> location_statistical_region_government_debt_percent_gdp;
    optional List<u8string> location_statistical_region_population;
    optional List<u8string> location_statistical_region_population_growth_rate;
    optional List<u8string> location_statistical_region_long_term_unemployment_rate;
    optional List<u8string> location_statistical_region_lending_interest_rate;
    optional List<u8string> location_statistical_region_unemployment_rate;
    optional List<u8string> location_statistical_region_part_time_employment_percent;
    optional List<u8string> location_statistical_region_size_of_armed_forces;
    optional List<u8string> location_statistical_region_official_development_assistance;
    optional List<u8string> location_statistical_region_debt_service_as_percent_of_trade_volume;
    optional List<u8string> location_statistical_region_trade_balance_as_percent_of_gdp;
    [GraphEdge]
    optional CellId location_statistical_region_industry_as_percent_of_gdp;
    optional List<u8string> location_statistical_region_gni_in_ppp_dollars;
    optional List<u8string> location_statistical_region_gdp_nominal;
    [GraphEdge]
    optional List<CellId> location_statistical_region_religions;
    optional List<u8string> location_statistical_region_agriculture_as_percent_of_gdp;
    optional List<u8string> location_statistical_region_services_as_percent_of_gdp;
    optional List<u8string> location_statistical_region_net_migration;
    optional List<u8string> location_statistical_region_minimum_wage;
    [GraphEdge]
    optional List<CellId> location_statistical_region_hiv_prevalence_rate;
    optional List<u8string> location_statistical_region_energy_use_per_capita;
    optional List<u8string> location_statistical_region_military_expenditure_percent_gdp;
    optional List<u8string> location_statistical_region_gdp_deflator_change;
    optional List<u8string> location_statistical_region_life_expectancy;
    optional List<u8string> location_statistical_region_brain_drain_percent;
    [GraphEdge]
    optional List<CellId> location_statistical_region_major_exports;
    [GraphEdge]
    optional CellId location_statistical_region_primary_education_completion_rate;
    optional List<u8string> location_statistical_region_electricity_consumption_per_capita;
    optional List<u8string> location_statistical_region_gross_savings_as_percent_of_gdp;
    optional List<u8string> location_statistical_region_foreign_direct_investment_net_inflows;
    [GraphEdge]
    optional CellId location_statistical_region_hospital_beds_relative;
    optional List<u8string> location_statistical_region_gni_per_capita_in_ppp_dollars;
    optional List<u8string> location_statistical_region_time_required_to_start_a_business;
    optional List<u8string> location_statistical_region_prevalence_of_undernourisment;
    [GraphEdge]
    optional CellId location_statistical_region_internet_users;
    optional List<u8string> location_statistical_region_cpi_inflation_rate;
    optional List<u8string> location_statistical_region_market_cap_of_listed_companies_as_percent_of_gdp;
    [GraphEdge]
    optional List<CellId> location_statistical_region_places_exported_to;
    optional List<u8string> location_statistical_region_broadband_penetration_rate;
}
cell location_symbol_of_administrative_division
{
    [GraphEdge]
    optional List<CellId> location_symbol_of_administrative_division_official_symbol_of;
}
cell location_tw_province
{
    [GraphEdge]
    optional CellId location_tw_province_capital;
}
cell location_uk_council_area
{
    [GraphEdge]
    optional CellId location_uk_council_area_administrative_headquarters;
}
cell location_uk_district
{
    [GraphEdge]
    optional CellId location_uk_district_administrative_headquarters;
}
cell location_uk_metropolitan_borough
{
    [GraphEdge]
    optional CellId location_uk_metropolitan_borough_administrative_headquarters;
}
cell location_uk_non_metropolitan_county
{
    [GraphEdge]
    optional CellId location_uk_non_metropolitan_county_administrative_headquarters;
}
cell location_uk_non_metropolitan_district
{
    [GraphEdge]
    optional CellId location_uk_non_metropolitan_district_administrative_headquarters;
}
cell location_uk_region
{
    [GraphEdge]
    optional List<CellId> location_uk_region_headquarters;
}
cell location_uk_statistical_location
{
    optional u8string location_uk_statistical_location_ons_code;
    optional u8string location_uk_statistical_location_gss_code;
}
cell location_us_cbsa
{
    optional ushort location_us_cbsa_cbsa_id;
}
cell location_us_county
{
    [GraphEdge]
    optional CellId location_us_county_county_seat;
    [GraphEdge]
    optional List<CellId> location_us_county_hud_county_place;
    [GraphEdge]
    optional List<CellId> location_us_county_hud_section_8_area;
}
cell location_us_indian_reservation
{
    [GraphEdge]
    optional List<CellId> location_us_indian_reservation_tribes;
}
cell location_us_metropolitan_division
{
    optional ushort location_us_metropolitan_division_div_code;
}
cell location_us_state
{
    [GraphEdge]
    optional CellId location_us_state_capital;
}
cell location_vn_province
{
    [GraphEdge]
    optional CellId location_vn_province_capital;
}
cell martial_arts_martial_art
{
    [GraphEdge]
    optional List<CellId> martial_arts_martial_art_well_known_practitioner;
    [GraphEdge]
    optional List<CellId> martial_arts_martial_art_origin;
    [GraphEdge]
    optional List<CellId> martial_arts_martial_art_category;
}
cell martial_arts_martial_art_category
{
    [GraphEdge]
    optional List<CellId> martial_arts_martial_art_category_martial_arts;
}
cell martial_arts_martial_artist
{
    [GraphEdge]
    optional List<CellId> martial_arts_martial_artist_martial_art;
    [GraphEdge]
    optional List<CellId> martial_arts_martial_artist_instructor;
    [GraphEdge]
    optional List<CellId> martial_arts_martial_artist_martial_arts_students;
    [GraphEdge]
    optional List<CellId> martial_arts_martial_artist_certifications;
}
cell martial_arts_martial_arts_certification
{
    [GraphEdge]
    optional CellId martial_arts_martial_arts_certification_certifying_body;
    [GraphEdge]
    optional CellId martial_arts_martial_arts_certification_qualification;
    [GraphEdge]
    optional CellId martial_arts_martial_arts_certification_person;
    [GraphEdge]
    optional List<CellId> martial_arts_martial_arts_certification_art;
}
cell martial_arts_martial_arts_organization
{
    [GraphEdge]
    optional List<CellId> martial_arts_martial_arts_organization_martial_arts;
    [GraphEdge]
    optional List<CellId> martial_arts_martial_arts_organization_qualifications_awarded;
}
cell martial_arts_martial_arts_qualification
{
    [GraphEdge]
    optional List<CellId> martial_arts_martial_arts_qualification_martial_artists;
}
cell measurement_unit_absorbed_dose_rate_unit
{
    optional float measurement_unit_absorbed_dose_rate_unit_rate_in_grays_per_second;
    [GraphEdge]
    optional CellId measurement_unit_absorbed_dose_rate_unit_measurement_system;
}
cell measurement_unit_absorbed_dose_unit
{
    [GraphEdge]
    optional CellId measurement_unit_absorbed_dose_unit_measurement_system;
    optional float measurement_unit_absorbed_dose_unit_dose_in_grays;
}
cell measurement_unit_acceleration_unit
{
    optional float measurement_unit_acceleration_unit_acceleration_in_meters_per_second_squared;
    [GraphEdge]
    optional CellId measurement_unit_acceleration_unit_measurement_system;
}
cell measurement_unit_adjusted_money_value
{
    [GraphEdge]
    optional CellId measurement_unit_adjusted_money_value_source;
    optional float measurement_unit_adjusted_money_value_adjusted_value;
    [GraphEdge]
    optional CellId measurement_unit_adjusted_money_value_adjustment_currency;
    optional float measurement_unit_adjusted_money_value_measurement_value;
    [GraphEdge]
    optional CellId measurement_unit_adjusted_money_value_measurement_currency;
}
cell measurement_unit_amount_concentration_unit
{
    optional float measurement_unit_amount_concentration_unit_concentration_in_moles_per_cubic_meter;
    [GraphEdge]
    optional CellId measurement_unit_amount_concentration_unit_measurement_system;
}
cell measurement_unit_angle_unit
{
    optional float measurement_unit_angle_unit_angle_in_radians;
    [GraphEdge]
    optional CellId measurement_unit_angle_unit_measurement_system;
}
cell measurement_unit_angular_acceleration_unit
{
    optional float measurement_unit_angular_acceleration_unit_acceleration_in_radians_per_second_squared;
    [GraphEdge]
    optional CellId measurement_unit_angular_acceleration_unit_measurement_system;
}
cell measurement_unit_angular_velocity_unit
{
    [GraphEdge]
    optional CellId measurement_unit_angular_velocity_unit_measurement_system;
    optional float measurement_unit_angular_velocity_unit_frequency_in_radians_per_second;
}
cell measurement_unit_area_unit
{
    [GraphEdge]
    optional List<CellId> measurement_unit_area_unit_measurement_system;
    optional float measurement_unit_area_unit_area_in_square_meters;
}
cell measurement_unit_capacitance_unit
{
    optional float measurement_unit_capacitance_unit_capacitance_in_farads;
    [GraphEdge]
    optional CellId measurement_unit_capacitance_unit_measurement_system;
}
cell measurement_unit_catalytic_activity_unit
{
    [GraphEdge]
    optional CellId measurement_unit_catalytic_activity_unit_measurement_system;
    optional float measurement_unit_catalytic_activity_unit_activity_in_katals;
}
cell measurement_unit_catalytic_concentration_unit
{
    optional float measurement_unit_catalytic_concentration_unit_concentration_in_katals_per_cubic_meter;
    [GraphEdge]
    optional CellId measurement_unit_catalytic_concentration_unit_measurement_system;
}
cell measurement_unit_charge_unit
{
    [GraphEdge]
    optional CellId measurement_unit_charge_unit_measurement_system;
    optional float measurement_unit_charge_unit_charge_in_coulombs;
}
cell measurement_unit_conductance_unit
{
    [GraphEdge]
    optional CellId measurement_unit_conductance_unit_measurement_system;
    optional float measurement_unit_conductance_unit_conductance_in_siemens;
}
cell measurement_unit_current_unit
{
    [GraphEdge]
    optional CellId measurement_unit_current_unit_measurement_system;
    optional float measurement_unit_current_unit_current_in_amperes;
}
cell measurement_unit_data_size_unit
{
    optional float measurement_unit_data_size_unit_size_in_bytes;
}
cell measurement_unit_dated_float
{
    [GraphEdge]
    optional CellId measurement_unit_dated_float_source;
    optional float measurement_unit_dated_float_number;
}
cell measurement_unit_dated_index_value
{
    optional float measurement_unit_dated_index_value_index_value;
}
cell measurement_unit_dated_integer
{
    optional ulong measurement_unit_dated_integer_number;
    [GraphEdge]
    optional CellId measurement_unit_dated_integer_source;
}
cell measurement_unit_dated_kgoe
{
    [GraphEdge]
    optional CellId measurement_unit_dated_kgoe_source;
    optional float measurement_unit_dated_kgoe_number;
}
cell measurement_unit_dated_kilowatt_hour
{
    [GraphEdge]
    optional CellId measurement_unit_dated_kilowatt_hour_source;
    optional float measurement_unit_dated_kilowatt_hour_number;
}
cell measurement_unit_dated_metric_ton
{
    [GraphEdge]
    optional CellId measurement_unit_dated_metric_ton_source;
    optional float measurement_unit_dated_metric_ton_number;
}
cell measurement_unit_dated_money_value
{
    [GraphEdge]
    optional CellId measurement_unit_dated_money_value_source;
    [GraphEdge]
    optional CellId measurement_unit_dated_money_value_currency;
    optional float measurement_unit_dated_money_value_amount;
}
cell measurement_unit_dated_percentage
{
    [GraphEdge]
    optional CellId measurement_unit_dated_percentage_source;
    optional float measurement_unit_dated_percentage_rate;
}
cell measurement_unit_dated_ratio
{
    optional ushort measurement_unit_dated_ratio_denominator;
    [GraphEdge]
    optional CellId measurement_unit_dated_ratio_source;
    optional float measurement_unit_dated_ratio_numerator;
}
cell measurement_unit_dimension
{
    [GraphEdge]
    optional List<CellId> measurement_unit_dimension_instruments;
    [GraphEdge]
    optional CellId measurement_unit_dimension_si_base_unit;
    optional List<u8string> measurement_unit_dimension_units;
}
cell measurement_unit_dimensions
{
    optional float measurement_unit_dimensions_depth_meters;
    optional float measurement_unit_dimensions_width_meters;
    optional float measurement_unit_dimensions_height_meters;
}
cell measurement_unit_distance_unit
{
    optional float measurement_unit_distance_unit_distance_in_meters;
    [GraphEdge]
    optional List<CellId> measurement_unit_distance_unit_measurement_system;
}
cell measurement_unit_dose_equivalence_unit
{
    [GraphEdge]
    optional CellId measurement_unit_dose_equivalence_unit_measurement_system;
    optional float measurement_unit_dose_equivalence_unit_equivalence_in_sieverts;
}
cell measurement_unit_electric_charge_density_unit
{
    optional float measurement_unit_electric_charge_density_unit_density_in_coulombs_per_cubic_meter;
    [GraphEdge]
    optional CellId measurement_unit_electric_charge_density_unit_measurement_system;
}
cell measurement_unit_electric_field_strength_unit
{
    optional float measurement_unit_electric_field_strength_unit_strength_in_volts_per_meter;
    [GraphEdge]
    optional CellId measurement_unit_electric_field_strength_unit_measurement_system;
}
cell measurement_unit_electric_flux_density_unit
{
    [GraphEdge]
    optional CellId measurement_unit_electric_flux_density_unit_measurement_system;
    optional float measurement_unit_electric_flux_density_unit_density_in_coulombs_per_square_meter;
}
cell measurement_unit_energy_density_unit
{
    optional float measurement_unit_energy_density_unit_density_in_joules_per_cubic_meter;
    [GraphEdge]
    optional CellId measurement_unit_energy_density_unit_measurement_system;
}
cell measurement_unit_energy_unit
{
    optional float measurement_unit_energy_unit_energy_in_joules;
    [GraphEdge]
    optional CellId measurement_unit_energy_unit_measurement_system;
}
cell measurement_unit_exposure_unit
{
    [GraphEdge]
    optional CellId measurement_unit_exposure_unit_measurement_system;
    optional float measurement_unit_exposure_unit_exposure_in_coulombs_per_kilogram;
}
cell measurement_unit_floating_point_range
{
    optional float measurement_unit_floating_point_range_low_value;
    optional float measurement_unit_floating_point_range_high_value;
}
cell measurement_unit_force_moment_unit
{
    optional float measurement_unit_force_moment_unit_moment_in_newton_meters;
    [GraphEdge]
    optional CellId measurement_unit_force_moment_unit_measurement_system;
}
cell measurement_unit_fuel_economy_unit
{
    optional float measurement_unit_fuel_economy_unit_economy_in_litres_per_kilometre;
    optional float measurement_unit_fuel_economy_unit_economy_in_kilometres_per_litre;
}
cell measurement_unit_heat_capacity_unit
{
    optional float measurement_unit_heat_capacity_unit_capacity_in_joules_per_kelvin;
    [GraphEdge]
    optional CellId measurement_unit_heat_capacity_unit_measurement_system;
}
cell measurement_unit_illuminance_unit
{
    optional float measurement_unit_illuminance_unit_illuminance_in_lux;
    [GraphEdge]
    optional CellId measurement_unit_illuminance_unit_measurement_system;
}
cell measurement_unit_inductance_unit
{
    [GraphEdge]
    optional CellId measurement_unit_inductance_unit_measurement_system;
    optional float measurement_unit_inductance_unit_inductance_in_henries;
}
cell measurement_unit_integer_range
{
    optional byte measurement_unit_integer_range_low_value;
    optional byte measurement_unit_integer_range_high_value;
}
cell measurement_unit_integer_ratio
{
    optional byte measurement_unit_integer_ratio_numerator;
    optional byte measurement_unit_integer_ratio_denominator;
}
cell measurement_unit_inverse_temperature_unit
{
    [GraphEdge]
    optional CellId measurement_unit_inverse_temperature_unit_measurement_system;
    optional float measurement_unit_inverse_temperature_unit_temperature_coefficient_in_inverse_kelvins;
}
cell measurement_unit_luminance_unit
{
    optional float measurement_unit_luminance_unit_luminance_in_candelas_per_square_meter;
    [GraphEdge]
    optional CellId measurement_unit_luminance_unit_measurement_system;
}
cell measurement_unit_luminous_flux_unit
{
    optional float measurement_unit_luminous_flux_unit_flux_in_lumens;
    [GraphEdge]
    optional CellId measurement_unit_luminous_flux_unit_measurement_system;
}
cell measurement_unit_luminous_intensity_unit
{
    [GraphEdge]
    optional CellId measurement_unit_luminous_intensity_unit_measurement_system;
    optional float measurement_unit_luminous_intensity_unit_intensity_in_candelas;
}
cell measurement_unit_magnetic_field_strength_unit
{
    optional float measurement_unit_magnetic_field_strength_unit_strength_in_amperes_per_meter;
    [GraphEdge]
    optional CellId measurement_unit_magnetic_field_strength_unit_measurement_system;
}
cell measurement_unit_magnetic_flux_density_unit
{
    optional float measurement_unit_magnetic_flux_density_unit_density_in_teslas;
    [GraphEdge]
    optional CellId measurement_unit_magnetic_flux_density_unit_measurement_system;
}
cell measurement_unit_magnetic_flux_unit
{
    [GraphEdge]
    optional CellId measurement_unit_magnetic_flux_unit_measurement_system;
    optional float measurement_unit_magnetic_flux_unit_flux_in_webers;
}
cell measurement_unit_mass_unit
{
    [GraphEdge]
    optional List<CellId> measurement_unit_mass_unit_measurement_system;
    optional float measurement_unit_mass_unit_weightmass_in_kilograms;
}
cell measurement_unit_measurement_system
{
    optional List<u8string> measurement_unit_measurement_system_frequency_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_absorbed_dose_rate_units;
    [GraphEdge]
    optional List<CellId> measurement_unit_measurement_system_charge_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_catalytic_activity_units;
    optional List<u8string> measurement_unit_measurement_system_volume_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_capacitance_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_heat_capacity_units;
    [GraphEdge]
    optional List<CellId> measurement_unit_measurement_system_length_units;
    optional List<u8string> measurement_unit_measurement_system_angle_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_electric_charge_density_units;
    optional List<u8string> measurement_unit_measurement_system_energy_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_catalytic_concentration_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_solid_angle_units;
    [GraphEdge]
    optional List<CellId> measurement_unit_measurement_system_weight_units;
    [GraphEdge]
    optional List<CellId> measurement_unit_measurement_system_conductance_units;
    optional List<u8string> measurement_unit_measurement_system_data_rate_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_radiance_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_magnetic_flux_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_resistance_units;
    [GraphEdge]
    optional List<CellId> measurement_unit_measurement_system_resistivity_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_surface_tension_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_exposure_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_volumetric_heat_capacity_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_luminous_flux_units;
    [GraphEdge]
    optional List<CellId> measurement_unit_measurement_system_inverse_temperature_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_radioactivity_units;
    optional u8string measurement_unit_measurement_system_surface_density_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_magnetic_flux_density_units;
    optional List<u8string> measurement_unit_measurement_system_specific_heat_capacity_units;
    [GraphEdge]
    optional List<CellId> measurement_unit_measurement_system_specific_energy_units;
    [GraphEdge]
    optional List<CellId> measurement_unit_measurement_system_temperature_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_molar_heat_capacity_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_luminance_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_inductance_units;
    optional List<u8string> measurement_unit_measurement_system_speed_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_volumetric_flow_rate_units;
    optional List<u8string> measurement_unit_measurement_system_power_units;
    optional u8string measurement_unit_measurement_system_specific_volume_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_electric_flux_density_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_density_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_luminous_intensity_units;
    optional List<u8string> measurement_unit_measurement_system_molar_energy_units;
    [GraphEdge]
    optional List<CellId> measurement_unit_measurement_system_pressure_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_dose_equivalence_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_force_moment_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_acceleration_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_thermal_conductivity_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_radiant_intensity_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_angular_acceleration_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_magnetic_field_strength_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_absorbed_dose_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_current_units;
    optional List<u8string> measurement_unit_measurement_system_amount_concentration_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_permittivity_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_force_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_illuminance_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_substance_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_electric_field_strength_units;
    optional u8string measurement_unit_measurement_system_irradiance_units;
    [GraphEdge]
    optional List<CellId> measurement_unit_measurement_system_time_units;
    optional u8string measurement_unit_measurement_system_current_density_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_viscosity_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_wavenumber_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_angular_velocity_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_potential_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_energy_density_units;
    [GraphEdge]
    optional List<CellId> measurement_unit_measurement_system_area_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_molar_volume_units;
    [GraphEdge]
    optional CellId measurement_unit_measurement_system_permeability_units;
}
cell measurement_unit_measuring_instrument
{
    [GraphEdge]
    optional List<CellId> measurement_unit_measuring_instrument_subclasses;
    [GraphEdge]
    optional CellId measurement_unit_measuring_instrument_subclass_of;
    [GraphEdge]
    optional CellId measurement_unit_measuring_instrument_dimension_measured;
}
cell measurement_unit_molar_energy_unit
{
    [GraphEdge]
    optional CellId measurement_unit_molar_energy_unit_measurement_system;
    optional float measurement_unit_molar_energy_unit_energy_in_joules_per_mole;
}
cell measurement_unit_molar_heat_capacity_unit
{
    [GraphEdge]
    optional CellId measurement_unit_molar_heat_capacity_unit_measurement_system;
    optional float measurement_unit_molar_heat_capacity_unit_capacity_in_joules_per_mole_per_kelvin;
}
cell measurement_unit_molar_volume_unit
{
    [GraphEdge]
    optional CellId measurement_unit_molar_volume_unit_measurement_system;
    optional float measurement_unit_molar_volume_unit_volume_in_cubic_meters_per_mole;
}
cell measurement_unit_monetary_range
{
    [GraphEdge]
    optional CellId measurement_unit_monetary_range_currency;
    optional float measurement_unit_monetary_range_max_value;
    optional float measurement_unit_monetary_range_min_value;
    optional u8string measurement_unit_monetary_range_note;
}
cell measurement_unit_money_value
{
    [GraphEdge]
    optional CellId measurement_unit_money_value_currency;
    optional float measurement_unit_money_value_amount;
}
cell measurement_unit_permeability_unit
{
    optional float measurement_unit_permeability_unit_permeability_in_henries_per_meter;
    [GraphEdge]
    optional CellId measurement_unit_permeability_unit_measurement_system;
}
cell measurement_unit_permittivity_unit
{
    [GraphEdge]
    optional CellId measurement_unit_permittivity_unit_measurement_system;
    optional float measurement_unit_permittivity_unit_permittivity_in_farads_per_meter;
}
cell measurement_unit_potential_unit
{
    optional float measurement_unit_potential_unit_potential_in_volts;
    [GraphEdge]
    optional CellId measurement_unit_potential_unit_measurement_system;
}
cell measurement_unit_power_unit
{
    optional float measurement_unit_power_unit_power_in_watts;
    [GraphEdge]
    optional CellId measurement_unit_power_unit_measurement_system;
}
cell measurement_unit_pressure_unit
{
    optional float measurement_unit_pressure_unit_pressure_in_pascals;
    [GraphEdge]
    optional CellId measurement_unit_pressure_unit_measurement_system;
}
cell measurement_unit_radiance_unit
{
    [GraphEdge]
    optional CellId measurement_unit_radiance_unit_measurement_system;
    optional float measurement_unit_radiance_unit_radiance_in_watts_per_square_meter_per_steradian;
}
cell measurement_unit_radiant_intensity_unit
{
    optional float measurement_unit_radiant_intensity_unit_intensity_in_watts_per_steradian;
    [GraphEdge]
    optional CellId measurement_unit_radiant_intensity_unit_measurement_system;
}
cell measurement_unit_radioactivity_unit
{
    optional float measurement_unit_radioactivity_unit_radioactivity_in_becquerels;
    [GraphEdge]
    optional CellId measurement_unit_radioactivity_unit_measurement_system;
}
cell measurement_unit_rect_size
{
    optional float measurement_unit_rect_size_y;
    optional float measurement_unit_rect_size_x;
}
cell measurement_unit_recurring_money_value
{
    optional float measurement_unit_recurring_money_value_amount;
    [GraphEdge]
    optional CellId measurement_unit_recurring_money_value_source;
    [GraphEdge]
    optional CellId measurement_unit_recurring_money_value_frequency;
    [GraphEdge]
    optional CellId measurement_unit_recurring_money_value_currency;
}
cell measurement_unit_resistance_unit
{
    [GraphEdge]
    optional CellId measurement_unit_resistance_unit_measurement_system;
    optional float measurement_unit_resistance_unit_resistance_in_ohms;
}
cell measurement_unit_solid_angle_unit
{
    [GraphEdge]
    optional CellId measurement_unit_solid_angle_unit_measurement_system;
    optional float measurement_unit_solid_angle_unit_angle_in_steradians;
}
cell measurement_unit_specific_energy_unit
{
    optional float measurement_unit_specific_energy_unit_energy_in_joules_per_kilogram;
    [GraphEdge]
    optional CellId measurement_unit_specific_energy_unit_measurement_system;
}
cell measurement_unit_specific_heat_capacity_unit
{
    optional float measurement_unit_specific_heat_capacity_unit_capacity_in_joules_per_kilogram_per_kelvin;
    [GraphEdge]
    optional CellId measurement_unit_specific_heat_capacity_unit_measurement_system;
}
cell measurement_unit_speed_unit
{
    [GraphEdge]
    optional CellId measurement_unit_speed_unit_measurement_system;
    optional float measurement_unit_speed_unit_speed_in_m_per_s;
}
cell measurement_unit_substance_unit
{
    optional double measurement_unit_substance_unit_amount_in_moles;
    [GraphEdge]
    optional CellId measurement_unit_substance_unit_measurement_system;
}
cell measurement_unit_surface_tension_unit
{
    optional float measurement_unit_surface_tension_unit_tension_in_newtons_per_meter;
    [GraphEdge]
    optional CellId measurement_unit_surface_tension_unit_measurement_system;
}
cell measurement_unit_temperature_unit
{
    optional float measurement_unit_temperature_unit_kelvins_offset;
    optional float measurement_unit_temperature_unit_kelvins_multiplier;
    [GraphEdge]
    optional List<CellId> measurement_unit_temperature_unit_measurement_system;
}
cell measurement_unit_thermal_conductivity_unit
{
    optional float measurement_unit_thermal_conductivity_unit_conductivity_in_watts_per_meter_per_kelvin;
    [GraphEdge]
    optional CellId measurement_unit_thermal_conductivity_unit_measurement_system;
}
cell measurement_unit_time_unit
{
    optional float measurement_unit_time_unit_time_in_seconds;
    [GraphEdge]
    optional CellId measurement_unit_time_unit_measurement_system;
}
cell measurement_unit_unit_of_brake_specific_fuel_consumption
{
    optional float measurement_unit_unit_of_brake_specific_fuel_consumption_brake_specific_fuel_consumption_in_grams_per_joule;
}
cell measurement_unit_unit_of_cargo_capacity
{
    optional float measurement_unit_unit_of_cargo_capacity_capacity_in_teus;
}
cell measurement_unit_unit_of_conductivity
{
    [GraphEdge]
    optional CellId measurement_unit_unit_of_conductivity_measurement_system;
    optional float measurement_unit_unit_of_conductivity_conductivity_in_siemens_per_meter;
}
cell measurement_unit_unit_of_data_transmission_rate
{
    optional float measurement_unit_unit_of_data_transmission_rate_rate_in_bits_per_second;
    [GraphEdge]
    optional CellId measurement_unit_unit_of_data_transmission_rate_measurement_system;
}
cell measurement_unit_unit_of_density
{
    optional float measurement_unit_unit_of_density_density_in_kg_per_cu_m;
    [GraphEdge]
    optional CellId measurement_unit_unit_of_density_measurement_system;
}
cell measurement_unit_unit_of_force
{
    optional float measurement_unit_unit_of_force_force_in_newtons;
    [GraphEdge]
    optional CellId measurement_unit_unit_of_force_measurement_system;
}
cell measurement_unit_unit_of_frequency
{
    [GraphEdge]
    optional CellId measurement_unit_unit_of_frequency_measurement_system;
    optional float measurement_unit_unit_of_frequency_frequency_in_hertz;
}
cell measurement_unit_unit_of_molar_mass
{
    optional float measurement_unit_unit_of_molar_mass_molar_mass_in_grams_per_mole;
}
cell measurement_unit_unit_of_resistivity
{
    optional float measurement_unit_unit_of_resistivity_resistivity_in_ohm_meters;
    [GraphEdge]
    optional CellId measurement_unit_unit_of_resistivity_measurement_system;
}
cell measurement_unit_unit_of_specific_fuel_consumption
{
    optional float measurement_unit_unit_of_specific_fuel_consumption_specific_fuel_consumption_in_grams_per_kilonewton_second;
}
cell measurement_unit_unit_of_symbol_rate
{
    optional float measurement_unit_unit_of_symbol_rate_rate_in_baud;
}
cell measurement_unit_unit_of_volumetric_flow_rate
{
    optional float measurement_unit_unit_of_volumetric_flow_rate_rate_in_cubic_metres_per_second;
    [GraphEdge]
    optional CellId measurement_unit_unit_of_volumetric_flow_rate_measurement_system;
}
cell measurement_unit_viscosity_unit
{
    optional float measurement_unit_viscosity_unit_viscosity_in_pascal_seconds;
    [GraphEdge]
    optional CellId measurement_unit_viscosity_unit_measurement_system;
}
cell measurement_unit_volume_unit
{
    [GraphEdge]
    optional List<CellId> measurement_unit_volume_unit_measurement_system;
    optional float measurement_unit_volume_unit_volume_in_cubic_meters;
}
cell measurement_unit_volumetric_heat_capacity_unit
{
    optional float measurement_unit_volumetric_heat_capacity_unit_capacity_in_joules_per_cubic_meter_per_kelvin;
    [GraphEdge]
    optional CellId measurement_unit_volumetric_heat_capacity_unit_measurement_system;
}
cell measurement_unit_wavenumber_unit
{
    optional float measurement_unit_wavenumber_unit_wavenumber_in_reciprocal_meters;
    [GraphEdge]
    optional CellId measurement_unit_wavenumber_unit_measurement_system;
}
cell media_common_adaptation
{
    [GraphEdge]
    optional List<CellId> media_common_adaptation_adapted_from;
}
cell media_common_adapted_work
{
    [GraphEdge]
    optional List<CellId> media_common_adapted_work_adaptations;
}
cell media_common_cataloged_instance
{
    optional List<uint> media_common_cataloged_instance_lccn;
    optional List<uint> media_common_cataloged_instance_stanford_opac;
    optional List<u8string> media_common_cataloged_instance_isrc;
    optional List<u8string> media_common_cataloged_instance_iswc;
    optional List<uint> media_common_cataloged_instance_opac_cornell;
    optional List<uint> media_common_cataloged_instance_opac_northwestern;
    optional List<uint> media_common_cataloged_instance_opac_psu;
    optional List<uint> media_common_cataloged_instance_opac_wisc;
    optional List<uint> media_common_cataloged_instance_opac_umich;
    optional List<uint> media_common_cataloged_instance_opac_uchicago;
    optional uint media_common_cataloged_instance_hathitrust;
    optional List<uint> media_common_cataloged_instance_oclc_number;
    optional ulong media_common_cataloged_instance_isbn13;
}
cell media_common_cause_of_loss
{
    [GraphEdge]
    optional List<CellId> media_common_cause_of_loss_works_lost_this_way;
}
cell media_common_completer_of_unfinished_work
{
    [GraphEdge]
    optional List<CellId> media_common_completer_of_unfinished_work_completed_unfinished_works;
}
cell media_common_completion_of_unfinished_work
{
    [GraphEdge]
    optional CellId media_common_completion_of_unfinished_work_finished_work;
    [GraphEdge]
    optional List<CellId> media_common_completion_of_unfinished_work_finisher;
    [GraphEdge]
    optional CellId media_common_completion_of_unfinished_work_unfinished_work;
}
cell media_common_creative_work
{
    optional u8string media_common_creative_work_credit;
}
cell media_common_dedicated_work
{
    [GraphEdge]
    optional List<CellId> media_common_dedicated_work_dedication;
}
cell media_common_dedicatee
{
    [GraphEdge]
    optional List<CellId> media_common_dedicatee_dedications;
}
cell media_common_dedication
{
    [GraphEdge]
    optional List<CellId> media_common_dedication_dedicated_by;
    [GraphEdge]
    optional CellId media_common_dedication_work_dedicated;
    [GraphEdge]
    optional List<CellId> media_common_dedication_dedicated_to;
    optional u8string media_common_dedication_notes;
}
cell media_common_dedicator
{
    [GraphEdge]
    optional List<CellId> media_common_dedicator_dedications;
}
cell media_common_finished_work
{
    [GraphEdge]
    optional CellId media_common_finished_work_completion_of;
}
cell media_common_literary_genre
{
    optional List<u8string> media_common_literary_genre_books_in_this_genre;
    [GraphEdge]
    optional List<CellId> media_common_literary_genre_stories_in_this_genre;
}
cell media_common_lost_work
{
    [GraphEdge]
    optional CellId media_common_lost_work_reason_for_loss;
}
cell media_common_media_genre
{
    [GraphEdge]
    optional CellId media_common_media_genre_equivalent_topic;
    [GraphEdge]
    optional List<CellId> media_common_media_genre_parent_genre;
    [GraphEdge]
    optional List<CellId> media_common_media_genre_child_genres;
}
cell media_common_media_genre_equivalent_topic
{
    [GraphEdge]
    optional CellId media_common_media_genre_equivalent_topic_media_genre_equivalent;
}
cell media_common_netflix_genre
{
    optional List<u8string> media_common_netflix_genre_titles;
}
cell media_common_netflix_title
{
    [GraphEdge]
    optional List<CellId> media_common_netflix_title_netflix_genres;
}
cell media_common_quotation
{
    [GraphEdge]
    optional List<CellId> media_common_quotation_author;
    [GraphEdge]
    optional CellId media_common_quotation_source;
    [GraphEdge]
    optional List<CellId> media_common_quotation_spoken_by_character;
    optional List<ushort> media_common_quotation_quotationsbook_id;
    [GraphEdge]
    optional List<CellId> media_common_quotation_subjects;
    [GraphEdge]
    optional List<CellId> media_common_quotation_addressee;
    [GraphEdge]
    optional List<CellId> media_common_quotation_incorrectly_attributed_to;
}
cell media_common_quotation_addressee
{
    [GraphEdge]
    optional List<CellId> media_common_quotation_addressee_quotations;
}
cell media_common_quotation_source
{
    [GraphEdge]
    optional List<CellId> media_common_quotation_source_quotations;
    optional List<u8string> media_common_quotation_source_quotationsbook_id;
}
cell media_common_quotation_subject
{
    [GraphEdge]
    optional List<CellId> media_common_quotation_subject_quotations_about_this_subject;
}
cell media_common_unfinished_work
{
    [GraphEdge]
    optional List<CellId> media_common_unfinished_work_completions;
}
cell medicine_cancer_center
{
    [GraphEdge]
    optional CellId medicine_cancer_center_cancer_center_type;
    [GraphEdge]
    optional List<CellId> medicine_cancer_center_constituents;
    optional u8string medicine_cancer_center_comprehensive;
}
cell medicine_cancer_center_constituent
{
    [GraphEdge]
    optional List<CellId> medicine_cancer_center_constituent_cancer_center;
}
cell medicine_cancer_center_type
{
    [GraphEdge]
    optional List<CellId> medicine_cancer_center_type_centers_of_this_kind;
}
cell medicine_condition_prevention_factors
{
    [GraphEdge]
    optional List<CellId> medicine_condition_prevention_factors_conditions_this_may_prevent;
}
cell medicine_contraindication
{
    [GraphEdge]
    optional List<CellId> medicine_contraindication_contraindication_for;
}
cell medicine_diagnostic_sign
{
    [GraphEdge]
    optional CellId medicine_diagnostic_sign_tests;
}
cell medicine_diagnostic_test
{
    [GraphEdge]
    optional List<CellId> medicine_diagnostic_test_includes_tests;
    [GraphEdge]
    optional CellId medicine_diagnostic_test_parent_test;
    [GraphEdge]
    optional List<CellId> medicine_diagnostic_test_signs;
}
cell medicine_diagnostic_test_signs
{
    [GraphEdge]
    optional CellId medicine_diagnostic_test_signs_sign;
    [GraphEdge]
    optional CellId medicine_diagnostic_test_signs_disease;
    [GraphEdge]
    optional CellId medicine_diagnostic_test_signs_test;
}
cell medicine_disease
{
    [GraphEdge]
    optional List<CellId> medicine_disease_affiliated_diseases;
    [GraphEdge]
    optional List<CellId> medicine_disease_treatments;
    [GraphEdge]
    optional List<CellId> medicine_disease_causes;
    [GraphEdge]
    optional List<CellId> medicine_disease_prevention_factors;
    [GraphEdge]
    optional List<CellId> medicine_disease_risk_factors;
    [GraphEdge]
    optional List<CellId> medicine_disease_symptoms;
    [GraphEdge]
    optional CellId medicine_disease_emedicine;
    [GraphEdge]
    optional List<CellId> medicine_disease_includes_diseases;
    [GraphEdge]
    optional CellId medicine_disease_mesh;
    [GraphEdge]
    optional CellId medicine_disease_diseases_db;
    [GraphEdge]
    optional List<CellId> medicine_disease_medical_specialties;
    [GraphEdge]
    optional List<CellId> medicine_disease_icd_9;
    [GraphEdge]
    optional List<CellId> medicine_disease_parent_disease;
    [GraphEdge]
    optional CellId medicine_disease_omim;
    [GraphEdge]
    optional List<CellId> medicine_disease_stages;
    [GraphEdge]
    optional List<CellId> medicine_disease_tests;
    [GraphEdge]
    optional List<CellId> medicine_disease_notable_people_with_this_condition;
    [GraphEdge]
    optional List<CellId> medicine_disease_trials;
    [GraphEdge]
    optional List<CellId> medicine_disease_icd_10;
    [GraphEdge]
    optional List<CellId> medicine_disease_survival_rates;
    [GraphEdge]
    optional CellId medicine_disease_medline_plus;
}
cell medicine_disease_cause
{
    [GraphEdge]
    optional List<CellId> medicine_disease_cause_diseases;
}
cell medicine_disease_stage
{
    [GraphEdge]
    optional CellId medicine_disease_stage_stage_of;
}
cell medicine_drug
{
    [GraphEdge]
    optional List<CellId> medicine_drug_mechanism_of_action;
    optional u8string medicine_drug_cas_number;
    [GraphEdge]
    optional List<CellId> medicine_drug_pregnancy_category;
    optional List<u8string> medicine_drug_atccode;
    [GraphEdge]
    optional List<CellId> medicine_drug_routed_drugs;
    [GraphEdge]
    optional List<CellId> medicine_drug_route_of_administration;
    [GraphEdge]
    optional List<CellId> medicine_drug_marketed_formulations;
    [GraphEdge]
    optional List<CellId> medicine_drug_active_moieties;
    [GraphEdge]
    optional List<CellId> medicine_drug_canonical_brands;
    [GraphEdge]
    optional List<CellId> medicine_drug_legal_status;
    [GraphEdge]
    optional List<CellId> medicine_drug_drug_class;
    optional List<u8string> medicine_drug_atc_code;
    [GraphEdge]
    optional List<CellId> medicine_drug_physiologic_effect;
    [GraphEdge]
    optional List<CellId> medicine_drug_brands;
    optional uint medicine_drug_pubchem;
    optional u8string medicine_drug_pronunciation;
    optional List<u8string> medicine_drug_drugbank;
}
cell medicine_drug_administration_route
{
    [GraphEdge]
    optional List<CellId> medicine_drug_administration_route_drug_formulations;
    [GraphEdge]
    optional List<CellId> medicine_drug_administration_route_route_of;
    [GraphEdge]
    optional List<CellId> medicine_drug_administration_route_administered_drugs;
}
cell medicine_drug_brand
{
    [GraphEdge]
    optional CellId medicine_drug_brand_manufacturer;
    [GraphEdge]
    optional List<CellId> medicine_drug_brand_active_ingredients;
    optional u8string medicine_drug_brand_generic;
    [GraphEdge]
    optional CellId medicine_drug_brand_canonical_drug;
}
cell medicine_drug_class
{
    [GraphEdge]
    optional List<CellId> medicine_drug_class_drugs;
}
cell medicine_drug_dosage_flavor
{
    [GraphEdge]
    optional List<CellId> medicine_drug_dosage_flavor_drugs_with_this_flavor;
}
cell medicine_drug_dosage_form
{
    [GraphEdge]
    optional List<CellId> medicine_drug_dosage_form_formulations_available_in_this_form;
}
cell medicine_drug_form_shape
{
    [GraphEdge]
    optional List<CellId> medicine_drug_form_shape_drugs_with_this_shape;
}
cell medicine_drug_formulation
{
    [GraphEdge]
    optional CellId medicine_drug_formulation_drug_category;
    [GraphEdge]
    optional List<CellId> medicine_drug_formulation_active_ingredients;
    [GraphEdge]
    optional List<CellId> medicine_drug_formulation_strength;
    [GraphEdge]
    optional List<CellId> medicine_drug_formulation_formulation_of;
    [GraphEdge]
    optional List<CellId> medicine_drug_formulation_manufactured_forms;
    [GraphEdge]
    optional List<CellId> medicine_drug_formulation_routes;
    [GraphEdge]
    optional List<CellId> medicine_drug_formulation_routed_drug;
    [GraphEdge]
    optional List<CellId> medicine_drug_formulation_legal_status;
    [GraphEdge]
    optional List<CellId> medicine_drug_formulation_active_ingredient_moieties;
    optional List<u8string> medicine_drug_formulation_brand_names;
    [GraphEdge]
    optional CellId medicine_drug_formulation_reference_form;
    [GraphEdge]
    optional CellId medicine_drug_formulation_dosage_form;
}
cell medicine_drug_formulation_category
{
    [GraphEdge]
    optional List<CellId> medicine_drug_formulation_category_drug_formulations;
}
cell medicine_drug_ingredient
{
    [GraphEdge]
    optional List<CellId> medicine_drug_ingredient_active_moiety_of_formulation;
    [GraphEdge]
    optional List<CellId> medicine_drug_ingredient_more_specific_ingredient;
    [GraphEdge]
    optional List<CellId> medicine_drug_ingredient_more_general_ingredient;
    [GraphEdge]
    optional List<CellId> medicine_drug_ingredient_active_ingredient_of_formulation;
    [GraphEdge]
    optional List<CellId> medicine_drug_ingredient_active_moiety_of_drug;
}
cell medicine_drug_label_section
{
    optional u8string medicine_drug_label_section_section_name;
    optional u8string medicine_drug_label_section_prominent_warning;
    [GraphEdge]
    optional CellId medicine_drug_label_section_subject_drug;
    optional u8string medicine_drug_label_section_section_text;
    optional u8string medicine_drug_label_section_section_loinc_code;
}
cell medicine_drug_legal_status
{
    [GraphEdge]
    optional CellId medicine_drug_legal_status_country;
}
cell medicine_drug_manufacturer
{
    [GraphEdge]
    optional List<CellId> medicine_drug_manufacturer_drugs_manufactured;
}
cell medicine_drug_mechanism_of_action
{
    [GraphEdge]
    optional List<CellId> medicine_drug_mechanism_of_action_drugs_with_this_mechanism_of_action;
}
cell medicine_drug_physiologic_effect
{
    [GraphEdge]
    optional List<CellId> medicine_drug_physiologic_effect_drugs_with_this_physiologic_effect;
}
cell medicine_drug_pregnancy_category
{
    [GraphEdge]
    optional List<CellId> medicine_drug_pregnancy_category_drugs_in_this_category;
    [GraphEdge]
    optional CellId medicine_drug_pregnancy_category_regulating_authority;
    [GraphEdge]
    optional CellId medicine_drug_pregnancy_category_country;
    optional u8string medicine_drug_pregnancy_category_pregnancy_risk;
}
cell medicine_drug_regulating_authority
{
    [GraphEdge]
    optional List<CellId> medicine_drug_regulating_authority_pregnancy_categories_regulated;
}
cell medicine_drug_strength
{
    [GraphEdge]
    optional CellId medicine_drug_strength_drug_formulations;
    optional List<float> medicine_drug_strength_strength_value;
    [GraphEdge]
    optional CellId medicine_drug_strength_active_ingredient;
    optional List<u8string> medicine_drug_strength_strength_units;
}
cell medicine_drug_therapeutic_equivalence_relationship
{
    [GraphEdge]
    optional List<CellId> medicine_drug_therapeutic_equivalence_relationship_equivalent;
}
cell medicine_fda_otc_monograph_part
{
    [GraphEdge]
    optional List<CellId> medicine_fda_otc_monograph_part_drugs_regulated;
}
cell medicine_hospital
{
    [GraphEdge]
    optional List<CellId> medicine_hospital_beds;
    [GraphEdge]
    optional List<CellId> medicine_hospital_ownership_status;
    optional List<u8string> medicine_hospital_medical_school_affiliation;
    [GraphEdge]
    optional CellId medicine_hospital_address;
    [GraphEdge]
    optional List<CellId> medicine_hospital_medical_specialties;
}
cell medicine_hospital_ownership
{
    [GraphEdge]
    optional CellId medicine_hospital_ownership_hospital;
    [GraphEdge]
    optional CellId medicine_hospital_ownership_ownership_status;
}
cell medicine_hospital_ownership_status
{
    [GraphEdge]
    optional List<CellId> medicine_hospital_ownership_status_hospitals;
}
cell medicine_icd_9_cm_classification
{
    optional List<u8string> medicine_icd_9_cm_classification_code;
    [GraphEdge]
    optional List<CellId> medicine_icd_9_cm_classification_includes_classifications;
    [GraphEdge]
    optional CellId medicine_icd_9_cm_classification_parent_classification;
}
cell medicine_infectious_disease
{
    [GraphEdge]
    optional List<CellId> medicine_infectious_disease_infectious_agent_type;
    [GraphEdge]
    optional List<CellId> medicine_infectious_disease_vaccine;
    [GraphEdge]
    optional List<CellId> medicine_infectious_disease_vector;
    [GraphEdge]
    optional List<CellId> medicine_infectious_disease_transmission;
}
cell medicine_manufactured_drug_form
{
    [GraphEdge]
    optional List<CellId> medicine_manufactured_drug_form_label_sections;
    optional u8string medicine_manufactured_drug_form_discontinued;
    [GraphEdge]
    optional CellId medicine_manufactured_drug_form_available_in;
    optional float medicine_manufactured_drug_form_size;
    [GraphEdge]
    optional CellId medicine_manufactured_drug_form_manufacturer;
    [GraphEdge]
    optional List<CellId> medicine_manufactured_drug_form_therapeutic_equivalents;
    optional List<u8string> medicine_manufactured_drug_form_ndc_product_id;
    [GraphEdge]
    optional CellId medicine_manufactured_drug_form_shape;
    optional byte medicine_manufactured_drug_form_scoring;
    [GraphEdge]
    optional CellId medicine_manufactured_drug_form_manufactured_form_of;
    [GraphEdge]
    optional List<CellId> medicine_manufactured_drug_form_color;
    optional u8string medicine_manufactured_drug_form_generic_drug;
    optional u8string medicine_manufactured_drug_form_imprint;
    optional List<u8string> medicine_manufactured_drug_form_fda_application_num;
    [GraphEdge]
    optional List<CellId> medicine_manufactured_drug_form_fda_otc_part;
    [GraphEdge]
    optional List<CellId> medicine_manufactured_drug_form_patents;
    [GraphEdge]
    optional List<CellId> medicine_manufactured_drug_form_flavor;
    optional u8string medicine_manufactured_drug_form_coating;
    optional u8string medicine_manufactured_drug_form_symbol_mark;
}
cell medicine_medical_specialty
{
    [GraphEdge]
    optional List<CellId> medicine_medical_specialty_diseases_treated;
    [GraphEdge]
    optional List<CellId> medicine_medical_specialty_physicians_with_this_specialty;
    [GraphEdge]
    optional List<CellId> medicine_medical_specialty_hospitals_with_this_specialty;
}
cell medicine_medical_treatment
{
    [GraphEdge]
    optional List<CellId> medicine_medical_treatment_used_to_treat;
    [GraphEdge]
    optional List<CellId> medicine_medical_treatment_contraindications;
    [GraphEdge]
    optional List<CellId> medicine_medical_treatment_side_effects;
    [GraphEdge]
    optional List<CellId> medicine_medical_treatment_trials;
}
cell medicine_medical_trial
{
    [GraphEdge]
    optional List<CellId> medicine_medical_trial_sponsor;
    [GraphEdge]
    optional CellId medicine_medical_trial_health_authority;
    optional u8string medicine_medical_trial_clinicaltrials_identifier;
    optional byte medicine_medical_trial_maximum_age_for_eligibility;
    [GraphEdge]
    optional List<CellId> medicine_medical_trial_phase;
    optional List<u8string> medicine_medical_trial_primary_outcomes;
    [GraphEdge]
    optional List<CellId> medicine_medical_trial_contact;
    [GraphEdge]
    optional List<CellId> medicine_medical_trial_references;
    [GraphEdge]
    optional List<CellId> medicine_medical_trial_treatment_being_tested;
    optional List<u8string> medicine_medical_trial_eligibility_exclusion_criteria;
    [GraphEdge]
    optional List<CellId> medicine_medical_trial_location;
    [GraphEdge]
    optional CellId medicine_medical_trial_type_of_trial;
    optional List<u8string> medicine_medical_trial_eligibility_inclusion_criteria;
    [GraphEdge]
    optional List<CellId> medicine_medical_trial_diseases;
    [GraphEdge]
    optional List<CellId> medicine_medical_trial_eligibile_genders;
    optional byte medicine_medical_trial_minimum_age_for_eligibility;
    optional byte medicine_medical_trial_expected_total_enrollment;
    optional List<u8string> medicine_medical_trial_secondary_outcomes;
    [GraphEdge]
    optional List<CellId> medicine_medical_trial_design;
}
cell medicine_medical_trial_design
{
    [GraphEdge]
    optional List<CellId> medicine_medical_trial_design_trials;
}
cell medicine_medical_trial_health_authority
{
    [GraphEdge]
    optional List<CellId> medicine_medical_trial_health_authority_medical_trials;
}
cell medicine_medical_trial_phase
{
    [GraphEdge]
    optional List<CellId> medicine_medical_trial_phase_medical_trials;
}
cell medicine_medical_trial_sponsor
{
    [GraphEdge]
    optional List<CellId> medicine_medical_trial_sponsor_trials_sponsored;
}
cell medicine_medical_trial_type
{
    [GraphEdge]
    optional List<CellId> medicine_medical_trial_type_medical_trials;
}
cell medicine_notable_person_with_medical_condition
{
    [GraphEdge]
    optional List<CellId> medicine_notable_person_with_medical_condition_condition;
}
cell medicine_physician
{
    [GraphEdge]
    optional List<CellId> medicine_physician_medical_specialty;
}
cell medicine_risk_factor
{
    [GraphEdge]
    optional List<CellId> medicine_risk_factor_diseases;
}
cell medicine_routed_drug
{
    [GraphEdge]
    optional CellId medicine_routed_drug_routed_drug_of;
    [GraphEdge]
    optional List<CellId> medicine_routed_drug_marketed_formulations;
    [GraphEdge]
    optional CellId medicine_routed_drug_route_of_administration;
}
cell medicine_survival_rate
{
    [GraphEdge]
    optional CellId medicine_survival_rate_disease_stage;
    [GraphEdge]
    optional CellId medicine_survival_rate_gender;
    optional float medicine_survival_rate_years;
    [GraphEdge]
    optional CellId medicine_survival_rate_race;
    optional float medicine_survival_rate_rate;
}
cell medicine_symptom
{
    [GraphEdge]
    optional CellId medicine_symptom_parent_symptom;
    [GraphEdge]
    optional List<CellId> medicine_symptom_side_effect_of;
    [GraphEdge]
    optional List<CellId> medicine_symptom_symptom_of;
    [GraphEdge]
    optional List<CellId> medicine_symptom_includes_symptoms;
}
cell medicine_transmission_route
{
    optional List<u8string> medicine_transmission_route_infections_that_travel_this_way;
}
cell medicine_type_of_infectious_agent
{
    optional List<u8string> medicine_type_of_infectious_agent_diseases;
}
cell medicine_vaccine
{
    [GraphEdge]
    optional List<CellId> medicine_vaccine_infectious_disease;
    [GraphEdge]
    optional List<CellId> medicine_vaccine_developed_by;
}
cell medicine_vaccine_developer
{
    [GraphEdge]
    optional List<CellId> medicine_vaccine_developer_vaccine;
}
cell medicine_vector_of_disease
{
    [GraphEdge]
    optional List<CellId> medicine_vector_of_disease_disease;
}
cell meteorology_beaufort_wind_force
{
    [GraphEdge]
    optional List<CellId> meteorology_beaufort_wind_force_tropical_cyclone_categories;
    optional float meteorology_beaufort_wind_force_wind_speed;
    optional u8string meteorology_beaufort_wind_force_description;
    optional float meteorology_beaufort_wind_force_mean_wind_speed_km_h;
    optional float meteorology_beaufort_wind_force_wave_height;
    optional float meteorology_beaufort_wind_force_minimum_wind_speed_km_h;
}
cell meteorology_cloud
{
    [GraphEdge]
    optional CellId meteorology_cloud_classification;
    optional float meteorology_cloud_minimum_altitude;
    optional u8string meteorology_cloud_precipitation;
    optional float meteorology_cloud_maximum_altitude_m;
    optional u8string meteorology_cloud_appearance;
    optional u8string meteorology_cloud_abbreviation;
    [GraphEdge]
    optional CellId meteorology_cloud_cloud_family;
    [GraphEdge]
    optional List<CellId> meteorology_cloud_varieties;
}
cell meteorology_cloud_classification
{
    [GraphEdge]
    optional List<CellId> meteorology_cloud_classification_clouds;
}
cell meteorology_cyclone_affected_area
{
    [GraphEdge]
    optional List<CellId> meteorology_cyclone_affected_area_cyclones;
}
cell meteorology_forecast_zone
{
    [GraphEdge]
    optional CellId meteorology_forecast_zone_weather_service;
}
cell meteorology_meteorological_service
{
    [GraphEdge]
    optional List<CellId> meteorology_meteorological_service_forecast_zones;
    [GraphEdge]
    optional List<CellId> meteorology_meteorological_service_tropical_cyclone_categories;
}
cell meteorology_tropical_cyclone
{
    [GraphEdge]
    optional CellId meteorology_tropical_cyclone_strongest_storm_of;
    optional uint meteorology_tropical_cyclone_total_fatalities;
    [GraphEdge]
    optional List<CellId> meteorology_tropical_cyclone_category;
    optional byte meteorology_tropical_cyclone_indirect_fatalities;
    [GraphEdge]
    optional CellId meteorology_tropical_cyclone_damages;
    optional float meteorology_tropical_cyclone_highest_winds;
    optional float meteorology_tropical_cyclone_lowest_pressure;
    [GraphEdge]
    optional List<CellId> meteorology_tropical_cyclone_affected_areas;
    optional ushort meteorology_tropical_cyclone_direct_fatalities;
    [GraphEdge]
    optional List<CellId> meteorology_tropical_cyclone_tropical_cyclone_season;
}
cell meteorology_tropical_cyclone_category
{
    [GraphEdge]
    optional List<CellId> meteorology_tropical_cyclone_category_Beaufort_scale;
    optional float meteorology_tropical_cyclone_category_max_wind_speed;
    optional float meteorology_tropical_cyclone_category_maximum_wind_speed_gust_km_h;
    optional float meteorology_tropical_cyclone_category_max_storm_surge;
    optional float meteorology_tropical_cyclone_category_min_storm_surge;
    [GraphEdge]
    optional List<CellId> meteorology_tropical_cyclone_category_meteorological_service;
    optional float meteorology_tropical_cyclone_category_min_wind_speed;
    optional float meteorology_tropical_cyclone_category_minimum_wind_speed_gust_km_h;
    [GraphEdge]
    optional List<CellId> meteorology_tropical_cyclone_category_tropical_cyclones;
}
cell meteorology_tropical_cyclone_season
{
    optional ushort meteorology_tropical_cyclone_season_total_fatalities;
    [GraphEdge]
    optional List<CellId> meteorology_tropical_cyclone_season_strongest_storm;
    optional byte meteorology_tropical_cyclone_season_major_storms;
    [GraphEdge]
    optional CellId meteorology_tropical_cyclone_season_total_damages;
    [GraphEdge]
    optional List<CellId> meteorology_tropical_cyclone_season_tropical_cyclones;
    optional byte meteorology_tropical_cyclone_season_total_storms;
}
cell metropolitan_transit_transit_agency
{
    [GraphEdge]
    optional List<CellId> metropolitan_transit_transit_agency_systems;
}
cell metropolitan_transit_transit_line
{
    [GraphEdge]
    optional List<CellId> metropolitan_transit_transit_line_primary_line;
    [GraphEdge]
    optional List<CellId> metropolitan_transit_transit_line_alternate_lines;
    [GraphEdge]
    optional List<CellId> metropolitan_transit_transit_line_stops;
    [GraphEdge]
    optional List<CellId> metropolitan_transit_transit_line_vehicle_types;
    [GraphEdge]
    optional List<CellId> metropolitan_transit_transit_line_service_hours;
    [GraphEdge]
    optional List<CellId> metropolitan_transit_transit_line_terminuses;
    [GraphEdge]
    optional List<CellId> metropolitan_transit_transit_line_transit_system;
    [GraphEdge]
    optional List<CellId> metropolitan_transit_transit_line_service_type;
    [GraphEdge]
    optional CellId metropolitan_transit_transit_line_daily_riders;
}
cell metropolitan_transit_transit_service_type
{
    optional List<u8string> metropolitan_transit_transit_service_type_transit_systems;
    [GraphEdge]
    optional List<CellId> metropolitan_transit_transit_service_type_transit_lines;
}
cell metropolitan_transit_transit_stop
{
    [GraphEdge]
    optional List<CellId> metropolitan_transit_transit_stop_terminus_for_lines;
    [GraphEdge]
    optional List<CellId> metropolitan_transit_transit_stop_transit_lines;
}
cell metropolitan_transit_transit_system
{
    [GraphEdge]
    optional List<CellId> metropolitan_transit_transit_system_system_length;
    optional List<u8string> metropolitan_transit_transit_system_agency;
    [GraphEdge]
    optional List<CellId> metropolitan_transit_transit_system_transit_lines;
    [GraphEdge]
    optional List<CellId> metropolitan_transit_transit_system_transit_service_types;
    [GraphEdge]
    optional List<CellId> metropolitan_transit_transit_system_area_served;
    [GraphEdge]
    optional List<CellId> metropolitan_transit_transit_system_daily_riders;
}
cell metropolitan_transit_transit_vehicle
{
    [GraphEdge]
    optional List<CellId> metropolitan_transit_transit_vehicle_transit_lines;
}
cell military_armed_force
{
    [GraphEdge]
    optional List<CellId> military_armed_force_sub_divisions;
    [GraphEdge]
    optional List<CellId> military_armed_force_military_combatant;
    [GraphEdge]
    optional List<CellId> military_armed_force_military_posts;
    optional List<u8string> military_armed_force_personnel;
    [GraphEdge]
    optional List<CellId> military_armed_force_units;
    [GraphEdge]
    optional CellId military_armed_force_sub_division_of;
}
cell military_casualties
{
    [GraphEdge]
    optional List<CellId> military_casualties_combatant;
    optional uint military_casualties_lower_estimate;
    [GraphEdge]
    optional CellId military_casualties_type_of_casualties;
    [GraphEdge]
    optional CellId military_casualties_military_conflict;
    optional uint military_casualties_upper_estimate;
}
cell military_casualties_type
{
    [GraphEdge]
    optional List<CellId> military_casualties_type_conflicts;
}
cell military_force_strength
{
    [GraphEdge]
    optional List<CellId> military_force_strength_combatant;
    [GraphEdge]
    optional CellId military_force_strength_military_conflict;
    optional uint military_force_strength_force_size;
    optional uint military_force_strength_maximum_force_size;
    [GraphEdge]
    optional CellId military_force_strength_resource;
}
cell military_military_combatant
{
    [GraphEdge]
    optional List<CellId> military_military_combatant_military_commanders;
    [GraphEdge]
    optional List<CellId> military_military_combatant_casualties;
    [GraphEdge]
    optional List<CellId> military_military_combatant_force_deployments;
    [GraphEdge]
    optional List<CellId> military_military_combatant_belongs_to_combatant_group;
    [GraphEdge]
    optional List<CellId> military_military_combatant_includes_allies;
    [GraphEdge]
    optional List<CellId> military_military_combatant_armed_forces;
    [GraphEdge]
    optional List<CellId> military_military_combatant_military_conflicts;
}
cell military_military_combatant_group
{
    [GraphEdge]
    optional List<CellId> military_military_combatant_group_combatants;
    [GraphEdge]
    optional CellId military_military_combatant_group_conflict;
}
cell military_military_command
{
    [GraphEdge]
    optional CellId military_military_command_military_commander;
    [GraphEdge]
    optional CellId military_military_command_military_combatant;
    [GraphEdge]
    optional CellId military_military_command_military_conflict;
}
cell military_military_commander
{
    [GraphEdge]
    optional List<CellId> military_military_commander_military_commands;
}
cell military_military_conflict
{
    [GraphEdge]
    optional List<CellId> military_military_conflict_force_strengths;
    [GraphEdge]
    optional List<CellId> military_military_conflict_casualties;
    [GraphEdge]
    optional List<CellId> military_military_conflict_combatants;
    [GraphEdge]
    optional List<CellId> military_military_conflict_commanders;
    [GraphEdge]
    optional List<CellId> military_military_conflict_military_personnel_involved;
}
cell military_military_person
{
    [GraphEdge]
    optional List<CellId> military_military_person_postings;
    [GraphEdge]
    optional List<CellId> military_military_person_service;
    [GraphEdge]
    optional List<CellId> military_military_person_participated_in_conflicts;
    [GraphEdge]
    optional List<CellId> military_military_person_served_aboard;
}
cell military_military_post
{
    [GraphEdge]
    optional List<CellId> military_military_post_used_by_armed_forces;
    [GraphEdge]
    optional List<CellId> military_military_post_people_posted_here;
}
cell military_military_post_use
{
    [GraphEdge]
    optional CellId military_military_post_use_military_post;
    [GraphEdge]
    optional CellId military_military_post_use_armed_force;
}
cell military_military_posting
{
    [GraphEdge]
    optional CellId military_military_posting_person;
    [GraphEdge]
    optional CellId military_military_posting_post;
}
cell military_military_resource
{
    [GraphEdge]
    optional List<CellId> military_military_resource_conflicts;
}
cell military_military_service
{
    [GraphEdge]
    optional CellId military_military_service_rank;
    [GraphEdge]
    optional CellId military_military_service_military_force;
    [GraphEdge]
    optional CellId military_military_service_unit;
    [GraphEdge]
    optional CellId military_military_service_military_person;
}
cell military_military_unit
{
    [GraphEdge]
    optional List<CellId> military_military_unit_servicemembers;
    [GraphEdge]
    optional CellId military_military_unit_unit_size;
    [GraphEdge]
    optional CellId military_military_unit_armed_force;
    [GraphEdge]
    optional CellId military_military_unit_place_of_origin;
}
cell military_military_unit_place_of_origin
{
    [GraphEdge]
    optional List<CellId> military_military_unit_place_of_origin_military_units;
}
cell military_military_unit_size
{
    optional List<u8string> military_military_unit_size_units_of_this_type;
    optional u8string military_military_unit_size_app_6a_symbol;
    [GraphEdge]
    optional CellId military_military_unit_size_strength_personnel;
    [GraphEdge]
    optional List<CellId> military_military_unit_size_commanded_by_rank;
}
cell military_rank
{
    [GraphEdge]
    optional List<CellId> military_rank_used_by_services;
}
cell music_album
{
    [GraphEdge]
    optional List<CellId> music_album_featured_artists;
    [GraphEdge]
    optional List<CellId> music_album_compositions;
    [GraphEdge]
    optional List<CellId> music_album_contributor;
    [GraphEdge]
    optional List<CellId> music_album_genre;
    [GraphEdge]
    optional List<CellId> music_album_album_content_type;
    [GraphEdge]
    optional CellId music_album_primary_release;
    [GraphEdge]
    optional CellId music_album_release_type;
    [GraphEdge]
    optional List<CellId> music_album_releases;
    [GraphEdge]
    optional List<CellId> music_album_artist;
    [GraphEdge]
    optional List<CellId> music_album_supporting_tours;
    [GraphEdge]
    optional List<CellId> music_album_acquire_webpage;
}
cell music_album_content_type
{
    optional List<u8string> music_album_content_type_albums;
}
cell music_album_release_type
{
    optional List<u8string> music_album_release_type_albums;
}
cell music_arrangement
{
    [GraphEdge]
    optional List<CellId> music_arrangement_arrangement_of;
}
cell music_artist
{
    [GraphEdge]
    optional List<CellId> music_artist_acquire_webpage;
    [GraphEdge]
    optional List<CellId> music_artist_tribute_acts;
    optional List<u8string> music_artist_concert_tours;
    [GraphEdge]
    optional List<CellId> music_artist_track_contributions;
    [GraphEdge]
    optional List<CellId> music_artist_track;
    [GraphEdge]
    optional List<CellId> music_artist_supporting_artists;
    [GraphEdge]
    optional List<CellId> music_artist_concerts;
    [GraphEdge]
    optional List<CellId> music_artist_contribution;
    [GraphEdge]
    optional List<CellId> music_artist_label;
    [GraphEdge]
    optional List<CellId> music_artist_album;
    [GraphEdge]
    optional List<CellId> music_artist_origin;
    [GraphEdge]
    optional List<CellId> music_artist_genre;
    [GraphEdge]
    optional List<CellId> music_artist_home_page;
}
cell music_composer
{
    [GraphEdge]
    optional List<CellId> music_composer_compositions;
}
cell music_composition
{
    [GraphEdge]
    optional List<CellId> music_composition_recordings;
    [GraphEdge]
    optional List<CellId> music_composition_place_composed;
    [GraphEdge]
    optional List<CellId> music_composition_recorded_as_album;
    [GraphEdge]
    optional CellId music_composition_place_of_first_performance;
    [GraphEdge]
    optional List<CellId> music_composition_form;
    [GraphEdge]
    optional List<CellId> music_composition_arrangements;
    [GraphEdge]
    optional List<CellId> music_composition_language;
    [GraphEdge]
    optional List<CellId> music_composition_part_of;
    [GraphEdge]
    optional List<CellId> music_composition_subjects;
    [GraphEdge]
    optional CellId music_composition_lyrics_website;
    [GraphEdge]
    optional List<CellId> music_composition_lyricist;
    [GraphEdge]
    optional List<CellId> music_composition_musical_key;
    [GraphEdge]
    optional List<CellId> music_composition_includes;
    [GraphEdge]
    optional List<CellId> music_composition_composer;
}
cell music_compositional_form
{
    [GraphEdge]
    optional List<CellId> music_compositional_form_subforms;
    [GraphEdge]
    optional List<CellId> music_compositional_form_superforms;
    optional List<u8string> music_compositional_form_compositions;
}
cell music_concert
{
    [GraphEdge]
    optional List<CellId> music_concert_concert_recording;
    [GraphEdge]
    optional List<CellId> music_concert_set_list;
    [GraphEdge]
    optional CellId music_concert_venue;
    [GraphEdge]
    optional List<CellId> music_concert_cost;
    [GraphEdge]
    optional CellId music_concert_concert_tour;
    [GraphEdge]
    optional List<CellId> music_concert_performances;
    [GraphEdge]
    optional List<CellId> music_concert_concert_video;
}
cell music_concert_film
{
    [GraphEdge]
    optional CellId music_concert_film_concert_tour;
    [GraphEdge]
    optional List<CellId> music_concert_film_concert;
}
cell music_concert_performance
{
    [GraphEdge]
    optional CellId music_concert_performance_concert;
    [GraphEdge]
    optional List<CellId> music_concert_performance_artist;
    [GraphEdge]
    optional List<CellId> music_concert_performance_performance_role;
    [GraphEdge]
    optional List<CellId> music_concert_performance_band_members;
}
cell music_concert_performance_role
{
    [GraphEdge]
    optional List<CellId> music_concert_performance_role_performances;
}
cell music_concert_set_list
{
    [GraphEdge]
    optional CellId music_concert_set_list_concert;
    [GraphEdge]
    optional CellId music_concert_set_list_artist;
    [GraphEdge]
    optional List<CellId> music_concert_set_list_song;
    [GraphEdge]
    optional List<CellId> music_concert_set_list_guest_artist;
}
cell music_concert_tour
{
    [GraphEdge]
    optional List<CellId> music_concert_tour_concerts;
    [GraphEdge]
    optional CellId music_concert_tour_live_recordings;
    [GraphEdge]
    optional List<CellId> music_concert_tour_concert_films_or_videos;
    [GraphEdge]
    optional CellId music_concert_tour_tour_manager;
    [GraphEdge]
    optional CellId music_concert_tour_gross_proceeds;
    [GraphEdge]
    optional List<CellId> music_concert_tour_album_or_release_supporting;
    [GraphEdge]
    optional List<CellId> music_concert_tour_artist;
}
cell music_conducted_ensemble
{
    [GraphEdge]
    optional List<CellId> music_conducted_ensemble_conductors;
}
cell music_conducting_tenure
{
    [GraphEdge]
    optional CellId music_conducting_tenure_conductor;
    [GraphEdge]
    optional CellId music_conducting_tenure_ensemble;
}
cell music_conductor
{
    [GraphEdge]
    optional List<CellId> music_conductor_operas_conducted;
    [GraphEdge]
    optional List<CellId> music_conductor_groups;
}
cell music_engineer
{
    [GraphEdge]
    optional List<CellId> music_engineer_releases_engineered;
    [GraphEdge]
    optional List<CellId> music_engineer_tracks_engineered;
}
cell music_featured_artist
{
    [GraphEdge]
    optional List<CellId> music_featured_artist_recordings;
    [GraphEdge]
    optional List<CellId> music_featured_artist_albums;
}
cell music_genre
{
    [GraphEdge]
    optional List<CellId> music_genre_parent_genre;
    [GraphEdge]
    optional List<CellId> music_genre_subgenre;
    optional List<u8string> music_genre_artists;
    [GraphEdge]
    optional List<CellId> music_genre_recordings;
    optional List<u8string> music_genre_albums;
}
cell music_group_member
{
    [GraphEdge]
    optional List<CellId> music_group_member_membership;
    [GraphEdge]
    optional List<CellId> music_group_member_instruments_played;
    [GraphEdge]
    optional List<CellId> music_group_member_artists_supported;
    [GraphEdge]
    optional List<CellId> music_group_member_vocal_range;
}
cell music_group_membership
{
    [GraphEdge]
    optional CellId music_group_membership_member;
    [GraphEdge]
    optional List<CellId> music_group_membership_role;
    [GraphEdge]
    optional CellId music_group_membership_group;
}
cell music_guitar
{
    [GraphEdge]
    optional CellId music_guitar_brand;
    [GraphEdge]
    optional List<CellId> music_guitar_guitarists;
}
cell music_guitarist
{
    [GraphEdge]
    optional List<CellId> music_guitarist_guitars_played;
}
cell music_instrument
{
    [GraphEdge]
    optional List<CellId> music_instrument_variation;
    [GraphEdge]
    optional List<CellId> music_instrument_instrumentalists;
    [GraphEdge]
    optional List<CellId> music_instrument_family;
}
cell music_live_album
{
    [GraphEdge]
    optional List<CellId> music_live_album_concert_tour;
    [GraphEdge]
    optional CellId music_live_album_concert;
}
cell music_lyricist
{
    [GraphEdge]
    optional List<CellId> music_lyricist_lyrics_written;
}
cell music_multipart_release
{
    [GraphEdge]
    optional List<CellId> music_multipart_release_components;
}
cell music_music_video
{
    [GraphEdge]
    optional List<CellId> music_music_video_choreographer;
    [GraphEdge]
    optional List<CellId> music_music_video_crew;
    [GraphEdge]
    optional List<CellId> music_music_video_music_video_song;
    [GraphEdge]
    optional List<CellId> music_music_video_artist;
    [GraphEdge]
    optional List<CellId> music_music_video_music_video_subject;
    [GraphEdge]
    optional List<CellId> music_music_video_directed_by;
    [GraphEdge]
    optional List<CellId> music_music_video_music_video_genre;
    [GraphEdge]
    optional List<CellId> music_music_video_performances;
}
cell music_music_video_character
{
    [GraphEdge]
    optional List<CellId> music_music_video_character_portrayed_in_music_videos;
}
cell music_music_video_choreographer
{
    [GraphEdge]
    optional List<CellId> music_music_video_choreographer_music_videos_choreographed;
}
cell music_music_video_crewmember
{
    [GraphEdge]
    optional List<CellId> music_music_video_crewmember_music_video_productions_crewed;
}
cell music_music_video_director
{
    [GraphEdge]
    optional List<CellId> music_music_video_director_music_videos_directed;
}
cell music_music_video_genre
{
    [GraphEdge]
    optional List<CellId> music_music_video_genre_music_videos_of_this_genre;
}
cell music_music_video_gig
{
    [GraphEdge]
    optional CellId music_music_video_gig_music_video_crew_production_role;
    [GraphEdge]
    optional CellId music_music_video_gig_crewmember;
    [GraphEdge]
    optional CellId music_music_video_gig_music_video;
}
cell music_music_video_job
{
    [GraphEdge]
    optional List<CellId> music_music_video_job_music_videos_with_this_crew_job;
}
cell music_music_video_performance
{
    [GraphEdge]
    optional CellId music_music_video_performance_music_video_character;
    [GraphEdge]
    optional CellId music_music_video_performance_music_video_performer;
    [GraphEdge]
    optional CellId music_music_video_performance_music_video;
    [GraphEdge]
    optional List<CellId> music_music_video_performance_special_music_video_performance_type;
    optional u8string music_music_video_performance_performance_note;
}
cell music_music_video_performer
{
    [GraphEdge]
    optional List<CellId> music_music_video_performer_music_video_performances;
}
cell music_music_video_subject
{
    [GraphEdge]
    optional List<CellId> music_music_video_subject_subject_in_these_music_videos;
}
cell music_musical_group
{
    [GraphEdge]
    optional List<CellId> music_musical_group_member;
}
cell music_musical_tribute_act
{
    [GraphEdge]
    optional CellId music_musical_tribute_act_tribute_of;
}
cell music_musician_profession
{
    [GraphEdge]
    optional CellId music_musician_profession_instrument;
}
cell music_opera_singer
{
    [GraphEdge]
    optional List<CellId> music_opera_singer_voice_type;
    [GraphEdge]
    optional List<CellId> music_opera_singer_opera_roles;
}
cell music_performance_role
{
    [GraphEdge]
    optional List<CellId> music_performance_role_guest_performances;
    optional List<u8string> music_performance_role_track_performances;
    [GraphEdge]
    optional List<CellId> music_performance_role_regular_performances;
}
cell music_performance_venue
{
    [GraphEdge]
    optional List<CellId> music_performance_venue_concerts;
}
cell music_producer
{
    [GraphEdge]
    optional List<CellId> music_producer_releases_produced;
    [GraphEdge]
    optional List<CellId> music_producer_tracks_produced;
}
cell music_record_label
{
    [GraphEdge]
    optional List<CellId> music_record_label_releases;
    [GraphEdge]
    optional List<CellId> music_record_label_artist;
}
cell music_recording
{
    [GraphEdge]
    optional List<CellId> music_recording_engineer;
    [GraphEdge]
    optional List<CellId> music_recording_genre;
    [GraphEdge]
    optional List<CellId> music_recording_contributions;
    optional float music_recording_length;
    [GraphEdge]
    optional List<CellId> music_recording_tracks;
    [GraphEdge]
    optional List<CellId> music_recording_artist;
    [GraphEdge]
    optional List<CellId> music_recording_place;
    [GraphEdge]
    optional List<CellId> music_recording_song;
    [GraphEdge]
    optional List<CellId> music_recording_producer;
    [GraphEdge]
    optional CellId music_recording_canonical_version;
    [GraphEdge]
    optional List<CellId> music_recording_lyrics_website;
    [GraphEdge]
    optional List<CellId> music_recording_acquire_webpage;
    [GraphEdge]
    optional List<CellId> music_recording_featured_artists;
    [GraphEdge]
    optional List<CellId> music_recording_releases;
}
cell music_recording_contribution
{
    [GraphEdge]
    optional List<CellId> music_recording_contribution_performance_role;
    [GraphEdge]
    optional CellId music_recording_contribution_album;
    [GraphEdge]
    optional CellId music_recording_contribution_contributor;
}
cell music_release
{
    optional u8string music_release_catalog_number;
    [GraphEdge]
    optional List<CellId> music_release_engineers;
    [GraphEdge]
    optional CellId music_release_format;
    [GraphEdge]
    optional List<CellId> music_release_track;
    [GraphEdge]
    optional List<CellId> music_release_producers;
    optional float music_release_length;
    [GraphEdge]
    optional List<CellId> music_release_label;
    [GraphEdge]
    optional List<CellId> music_release_track_list;
    [GraphEdge]
    optional CellId music_release_album;
    [GraphEdge]
    optional List<CellId> music_release_region;
}
cell music_release_component
{
    [GraphEdge]
    optional List<CellId> music_release_component_package;
}
cell music_release_track
{
    optional float music_release_track_length;
    optional byte music_release_track_number_on_disc;
    optional byte music_release_track_track_number;
    [GraphEdge]
    optional CellId music_release_track_recording;
    optional byte music_release_track_disc_number;
    [GraphEdge]
    optional CellId music_release_track_release;
}
cell music_single
{
    [GraphEdge]
    optional List<CellId> music_single_versions;
}
cell music_soundtrack
{
    [GraphEdge]
    optional List<CellId> music_soundtrack_film;
}
cell music_special_music_video_performance_type
{
    [GraphEdge]
    optional List<CellId> music_special_music_video_performance_type_special_music_video_performances;
}
cell music_synthesizer
{
    [GraphEdge]
    optional CellId music_synthesizer_brand;
}
cell music_tour_manager
{
    [GraphEdge]
    optional CellId music_tour_manager_tours_managed;
}
cell music_track_contribution
{
    [GraphEdge]
    optional CellId music_track_contribution_track;
    [GraphEdge]
    optional List<CellId> music_track_contribution_role;
    [GraphEdge]
    optional CellId music_track_contribution_contributor;
}
cell music_voice
{
    [GraphEdge]
    optional List<CellId> music_voice_singers;
}
cell nytimes_topic
{
    optional List<u8string> nytimes_topic_uri;
}
cell olympics_demonstration_event_athlete_relationship
{
    [GraphEdge]
    optional List<CellId> olympics_demonstration_event_athlete_relationship_athlete;
    [GraphEdge]
    optional CellId olympics_demonstration_event_athlete_relationship_competition;
}
cell olympics_olympic_athlete
{
    [GraphEdge]
    optional List<CellId> olympics_olympic_athlete_country;
    [GraphEdge]
    optional CellId olympics_olympic_athlete_demonstration_medals_won;
    [GraphEdge]
    optional CellId olympics_olympic_athlete_demonstration_events_competed_in;
    [GraphEdge]
    optional List<CellId> olympics_olympic_athlete_medals_won;
}
cell olympics_olympic_athlete_affiliation
{
    [GraphEdge]
    optional CellId olympics_olympic_athlete_affiliation_country;
    [GraphEdge]
    optional CellId olympics_olympic_athlete_affiliation_athlete;
    [GraphEdge]
    optional CellId olympics_olympic_athlete_affiliation_olympics;
    [GraphEdge]
    optional List<CellId> olympics_olympic_athlete_affiliation_sport;
}
cell olympics_olympic_bidding_city
{
    [GraphEdge]
    optional List<CellId> olympics_olympic_bidding_city_olympics_bid_on;
}
cell olympics_olympic_city_bid
{
    [GraphEdge]
    optional CellId olympics_olympic_city_bid_olympic_games;
    [GraphEdge]
    optional List<CellId> olympics_olympic_city_bid_bidding_city;
}
cell olympics_olympic_demonstration_competition
{
    [GraphEdge]
    optional List<CellId> olympics_olympic_demonstration_competition_medalists;
    [GraphEdge]
    optional CellId olympics_olympic_demonstration_competition_competitors;
    [GraphEdge]
    optional CellId olympics_olympic_demonstration_competition_event;
    [GraphEdge]
    optional CellId olympics_olympic_demonstration_competition_venue;
    [GraphEdge]
    optional CellId olympics_olympic_demonstration_competition_olympics_contested_as_demonstration;
}
cell olympics_olympic_demonstration_medal_honor
{
    [GraphEdge]
    optional CellId olympics_olympic_demonstration_medal_honor_event;
    optional List<u8string> olympics_olympic_demonstration_medal_honor_medalist;
    [GraphEdge]
    optional CellId olympics_olympic_demonstration_medal_honor_country;
    [GraphEdge]
    optional CellId olympics_olympic_demonstration_medal_honor_medal;
    [GraphEdge]
    optional CellId olympics_olympic_demonstration_medal_honor_olympics;
}
cell olympics_olympic_event
{
    [GraphEdge]
    optional List<CellId> olympics_olympic_event_olympic_games_contested;
    [GraphEdge]
    optional List<CellId> olympics_olympic_event_contested_as_demonstration_event;
    [GraphEdge]
    optional List<CellId> olympics_olympic_event_competitions;
    [GraphEdge]
    optional CellId olympics_olympic_event_sport;
    [GraphEdge]
    optional List<CellId> olympics_olympic_event_demonstration_competitions;
}
cell olympics_olympic_event_competition
{
    [GraphEdge]
    optional List<CellId> olympics_olympic_event_competition_venue;
    [GraphEdge]
    optional List<CellId> olympics_olympic_event_competition_medalists;
    [GraphEdge]
    optional CellId olympics_olympic_event_competition_event;
    [GraphEdge]
    optional CellId olympics_olympic_event_competition_olympic_games_contested;
}
cell olympics_olympic_games
{
    optional ushort olympics_olympic_games_number_of_athletes;
    [GraphEdge]
    optional List<CellId> olympics_olympic_games_demonstration_competitions;
    [GraphEdge]
    optional List<CellId> olympics_olympic_games_torchbearers;
    [GraphEdge]
    optional List<CellId> olympics_olympic_games_mascot;
    [GraphEdge]
    optional List<CellId> olympics_olympic_games_competitions;
    [GraphEdge]
    optional List<CellId> olympics_olympic_games_medals_awarded;
    [GraphEdge]
    optional List<CellId> olympics_olympic_games_sports;
    [GraphEdge]
    optional List<CellId> olympics_olympic_games_events;
    [GraphEdge]
    optional List<CellId> olympics_olympic_games_venues;
    [GraphEdge]
    optional List<CellId> olympics_olympic_games_athletes;
    optional byte olympics_olympic_games_number_of_countries;
    [GraphEdge]
    optional List<CellId> olympics_olympic_games_participating_countries;
    [GraphEdge]
    optional List<CellId> olympics_olympic_games_demonstration_sports;
    [GraphEdge]
    optional List<CellId> olympics_olympic_games_bidding_cities;
    optional ushort olympics_olympic_games_number_of_events;
    [GraphEdge]
    optional CellId olympics_olympic_games_host_city;
    [GraphEdge]
    optional List<CellId> olympics_olympic_games_demonstration_medals_awarded;
    [GraphEdge]
    optional List<CellId> olympics_olympic_games_demonstration_events;
}
cell olympics_olympic_host_city
{
    [GraphEdge]
    optional List<CellId> olympics_olympic_host_city_olympics_hosted;
}
cell olympics_olympic_mascot
{
    [GraphEdge]
    optional CellId olympics_olympic_mascot_olympic_games;
}
cell olympics_olympic_medal
{
    [GraphEdge]
    optional List<CellId> olympics_olympic_medal_medal_winners;
}
cell olympics_olympic_medal_demonstration
{
    [GraphEdge]
    optional CellId olympics_olympic_medal_demonstration_medal_winners;
}
cell olympics_olympic_medal_honor
{
    [GraphEdge]
    optional CellId olympics_olympic_medal_honor_country;
    [GraphEdge]
    optional CellId olympics_olympic_medal_honor_medal;
    [GraphEdge]
    optional CellId olympics_olympic_medal_honor_olympics;
    [GraphEdge]
    optional CellId olympics_olympic_medal_honor_event;
    [GraphEdge]
    optional List<CellId> olympics_olympic_medal_honor_medalist;
}
cell olympics_olympic_participating_country
{
    [GraphEdge]
    optional CellId olympics_olympic_participating_country_demonstration_medals_won;
    [GraphEdge]
    optional List<CellId> olympics_olympic_participating_country_medals_won;
    [GraphEdge]
    optional List<CellId> olympics_olympic_participating_country_olympics_participated_in;
    [GraphEdge]
    optional List<CellId> olympics_olympic_participating_country_athletes;
    optional List<u8string> olympics_olympic_participating_country_ioc_code;
}
cell olympics_olympic_sport
{
    [GraphEdge]
    optional List<CellId> olympics_olympic_sport_games_contested_as_demonstration;
    [GraphEdge]
    optional List<CellId> olympics_olympic_sport_athletes;
    [GraphEdge]
    optional List<CellId> olympics_olympic_sport_olympic_games_contested;
    [GraphEdge]
    optional List<CellId> olympics_olympic_sport_events;
}
cell olympics_olympic_torch_relay
{
    [GraphEdge]
    optional CellId olympics_olympic_torch_relay_torchbearer;
    optional byte olympics_olympic_torch_relay_age;
    [GraphEdge]
    optional CellId olympics_olympic_torch_relay_location;
    [GraphEdge]
    optional CellId olympics_olympic_torch_relay_olympics;
}
cell olympics_olympic_torch_relay_location
{
    [GraphEdge]
    optional List<CellId> olympics_olympic_torch_relay_location_olympics;
}
cell olympics_olympic_torchbearer
{
    [GraphEdge]
    optional List<CellId> olympics_olympic_torchbearer_participation_in_relays;
}
cell olympics_olympic_venue
{
    [GraphEdge]
    optional List<CellId> olympics_olympic_venue_olympic_games_used_in;
    [GraphEdge]
    optional List<CellId> olympics_olympic_venue_olympic_events_contested_here;
    [GraphEdge]
    optional CellId olympics_olympic_venue_olympic_events_demonstrated_here;
}
cell opera_librettist
{
    [GraphEdge]
    optional List<CellId> opera_librettist_libretti;
}
cell opera_opera
{
    [GraphEdge]
    optional List<CellId> opera_opera_genre;
    [GraphEdge]
    optional List<CellId> opera_opera_librettist;
    [GraphEdge]
    optional List<CellId> opera_opera_productions;
    [GraphEdge]
    optional List<CellId> opera_opera_recordings;
    [GraphEdge]
    optional List<CellId> opera_opera_language;
    [GraphEdge]
    optional List<CellId> opera_opera_characters;
    [GraphEdge]
    optional CellId opera_opera_premiere_production;
}
cell opera_opera_character
{
    [GraphEdge]
    optional List<CellId> opera_opera_character_operas_appears_in;
    [GraphEdge]
    optional List<CellId> opera_opera_character_portrayed_by;
}
cell opera_opera_character_voice
{
    [GraphEdge]
    optional List<CellId> opera_opera_character_voice_voice;
    [GraphEdge]
    optional CellId opera_opera_character_voice_opera;
    [GraphEdge]
    optional CellId opera_opera_character_voice_character;
}
cell opera_opera_company
{
    [GraphEdge]
    optional List<CellId> opera_opera_company_operas_produced;
}
cell opera_opera_designer
{
    [GraphEdge]
    optional List<CellId> opera_opera_designer_operas_designed;
}
cell opera_opera_designer_gig
{
    [GraphEdge]
    optional CellId opera_opera_designer_gig_designer;
    [GraphEdge]
    optional CellId opera_opera_designer_gig_design_role;
    [GraphEdge]
    optional CellId opera_opera_designer_gig_opera;
}
cell opera_opera_designer_role
{
    [GraphEdge]
    optional List<CellId> opera_opera_designer_role_designers;
}
cell opera_opera_director
{
    [GraphEdge]
    optional List<CellId> opera_opera_director_operas_directed;
}
cell opera_opera_genre
{
    [GraphEdge]
    optional List<CellId> opera_opera_genre_operas_in_this_genre;
}
cell opera_opera_house
{
    [GraphEdge]
    optional List<CellId> opera_opera_house_productions;
    [GraphEdge]
    optional List<CellId> opera_opera_house_opera_production_venue_relationship;
}
cell opera_opera_producer
{
    [GraphEdge]
    optional List<CellId> opera_opera_producer_operas_produced;
}
cell opera_opera_production
{
    [GraphEdge]
    optional List<CellId> opera_opera_production_stage_director;
    [GraphEdge]
    optional CellId opera_opera_production_production_staff;
    [GraphEdge]
    optional List<CellId> opera_opera_production_producing_company;
    [GraphEdge]
    optional List<CellId> opera_opera_production_producer;
    [GraphEdge]
    optional List<CellId> opera_opera_production_opera_production_venue_relationship;
    [GraphEdge]
    optional List<CellId> opera_opera_production_opera;
    [GraphEdge]
    optional List<CellId> opera_opera_production_designers;
    [GraphEdge]
    optional List<CellId> opera_opera_production_conductor;
    [GraphEdge]
    optional List<CellId> opera_opera_production_performed_at;
    [GraphEdge]
    optional List<CellId> opera_opera_production_cast;
    [GraphEdge]
    optional CellId opera_opera_production_recordings;
}
cell opera_opera_production_staff
{
    [GraphEdge]
    optional List<CellId> opera_opera_production_staff_opera_productions;
}
cell opera_opera_production_staff_gig
{
    [GraphEdge]
    optional CellId opera_opera_production_staff_gig_opera;
    [GraphEdge]
    optional CellId opera_opera_production_staff_gig_staff_member;
    optional u8string opera_opera_production_staff_gig_production_role;
}
cell opera_opera_production_staff_role
{
    [GraphEdge]
    optional CellId opera_opera_production_staff_role_production_staff;
}
cell opera_opera_production_venue_relationship
{
    [GraphEdge]
    optional CellId opera_opera_production_venue_relationship_opera_production;
    [GraphEdge]
    optional CellId opera_opera_production_venue_relationship_opera_house;
}
cell opera_opera_recording
{
    [GraphEdge]
    optional CellId opera_opera_recording_production;
    [GraphEdge]
    optional CellId opera_opera_recording_opera;
}
cell opera_opera_role
{
    [GraphEdge]
    optional CellId opera_opera_role_opera;
    [GraphEdge]
    optional CellId opera_opera_role_role;
    [GraphEdge]
    optional CellId opera_opera_role_performer;
}
cell organization_australian_organization
{
    optional uint organization_australian_organization_arbn;
    optional uint organization_australian_organization_acn;
    optional List<ulong> organization_australian_organization_abn;
}
cell organization_club
{
    [GraphEdge]
    optional List<CellId> organization_club_areas_of_interest;
}
cell organization_club_interest
{
    [GraphEdge]
    optional List<CellId> organization_club_interest_clubs;
}
cell organization_email_contact
{
    optional u8string organization_email_contact_email_address;
    [GraphEdge]
    optional CellId organization_email_contact_category;
}
cell organization_endowed_organization
{
    [GraphEdge]
    optional List<CellId> organization_endowed_organization_endowment;
}
cell organization_leadership
{
    optional u8string organization_leadership_title;
    [GraphEdge]
    optional CellId organization_leadership_person;
    [GraphEdge]
    optional CellId organization_leadership_role;
    [GraphEdge]
    optional CellId organization_leadership_organization;
}
cell organization_membership_organization
{
    [GraphEdge]
    optional List<CellId> organization_membership_organization_number_of_members;
    [GraphEdge]
    optional List<CellId> organization_membership_organization_members;
}
cell organization_non_profit_designation
{
    [GraphEdge]
    optional List<CellId> organization_non_profit_designation_organizations_with_this_designation;
}
cell organization_non_profit_organization
{
    [GraphEdge]
    optional List<CellId> organization_non_profit_organization_registered_with;
}
cell organization_non_profit_registration
{
    [GraphEdge]
    optional CellId organization_non_profit_registration_non_profit_organization;
    [GraphEdge]
    optional CellId organization_non_profit_registration_registering_agency;
    [GraphEdge]
    optional CellId organization_non_profit_registration_registered_as;
}
cell organization_organization
{
    [GraphEdge]
    optional List<CellId> organization_organization_involved_in_merger;
    [GraphEdge]
    optional List<CellId> organization_organization_companies_acquired;
    [GraphEdge]
    optional List<CellId> organization_organization_spun_off_from;
    [GraphEdge]
    optional List<CellId> organization_organization_locations;
    [GraphEdge]
    optional List<CellId> organization_organization_leadership;
    [GraphEdge]
    optional List<CellId> organization_organization_sectors;
    [GraphEdge]
    optional List<CellId> organization_organization_partnerships;
    [GraphEdge]
    optional List<CellId> organization_organization_previous_names;
    [GraphEdge]
    optional List<CellId> organization_organization_phone_number;
    [GraphEdge]
    optional List<CellId> organization_organization_organization_type;
    [GraphEdge]
    optional List<CellId> organization_organization_legal_structure;
    optional List<u8string> organization_organization_slogan;
    [GraphEdge]
    optional List<CellId> organization_organization_geographic_scope;
    [GraphEdge]
    optional List<CellId> organization_organization_founders;
    [GraphEdge]
    optional List<CellId> organization_organization_operates_government_service;
    [GraphEdge]
    optional List<CellId> organization_organization_product_of_merger;
    [GraphEdge]
    optional List<CellId> organization_organization_place_founded;
    [GraphEdge]
    optional List<CellId> organization_organization_advisors;
    [GraphEdge]
    optional List<CellId> organization_organization_acquired_by;
    [GraphEdge]
    optional List<CellId> organization_organization_headquarters;
    [GraphEdge]
    optional List<CellId> organization_organization_child;
    [GraphEdge]
    optional List<CellId> organization_organization_board_members;
    [GraphEdge]
    optional List<CellId> organization_organization_spin_offs;
    [GraphEdge]
    optional List<CellId> organization_organization_committees;
    [GraphEdge]
    optional List<CellId> organization_organization_parent;
    [GraphEdge]
    optional List<CellId> organization_organization_email;
}
cell organization_organization_board_membership
{
    optional u8string organization_organization_board_membership_title;
    [GraphEdge]
    optional CellId organization_organization_board_membership_member;
    [GraphEdge]
    optional CellId organization_organization_board_membership_organization;
    [GraphEdge]
    optional CellId organization_organization_board_membership_role;
    [GraphEdge]
    optional CellId organization_organization_board_membership_title_old;
}
cell organization_organization_committee
{
    [GraphEdge]
    optional CellId organization_organization_committee_committee_of;
    [GraphEdge]
    optional List<CellId> organization_organization_committee_members;
}
cell organization_organization_committee_membership
{
    [GraphEdge]
    optional CellId organization_organization_committee_membership_member;
    [GraphEdge]
    optional CellId organization_organization_committee_membership_title;
    [GraphEdge]
    optional CellId organization_organization_committee_membership_committee;
}
cell organization_organization_committee_title
{
    [GraphEdge]
    optional List<CellId> organization_organization_committee_title_members_with_this_title;
}
cell organization_organization_founder
{
    [GraphEdge]
    optional List<CellId> organization_organization_founder_organizations_founded;
}
cell organization_organization_member
{
    [GraphEdge]
    optional List<CellId> organization_organization_member_committees_served_on;
    [GraphEdge]
    optional List<CellId> organization_organization_member_member_of;
}
cell organization_organization_membership
{
    [GraphEdge]
    optional CellId organization_organization_membership_member;
    [GraphEdge]
    optional CellId organization_organization_membership_organization;
}
cell organization_organization_merger
{
    [GraphEdge]
    optional List<CellId> organization_organization_merger_organizations_merging;
    [GraphEdge]
    optional CellId organization_organization_merger_became_organization;
}
cell organization_organization_partnership
{
    [GraphEdge]
    optional List<CellId> organization_organization_partnership_members;
}
cell organization_organization_relationship
{
    [GraphEdge]
    optional CellId organization_organization_relationship_child;
    [GraphEdge]
    optional CellId organization_organization_relationship_parent;
}
cell organization_organization_scope
{
    [GraphEdge]
    optional List<CellId> organization_organization_scope_organizations_with_this_scope;
}
cell organization_organization_sector
{
    [GraphEdge]
    optional List<CellId> organization_organization_sector_organizations_in_this_sector;
}
cell organization_organization_spin_off
{
    [GraphEdge]
    optional CellId organization_organization_spin_off_parent_company;
    [GraphEdge]
    optional CellId organization_organization_spin_off_child_company;
}
cell organization_organization_type
{
    [GraphEdge]
    optional List<CellId> organization_organization_type_organizations_of_this_type;
}
cell organization_role
{
    [GraphEdge]
    optional List<CellId> organization_role_governors;
    [GraphEdge]
    optional List<CellId> organization_role_leaders;
}
cell people_american_indian_group
{
    [GraphEdge]
    optional CellId people_american_indian_group_us_indian_reservations;
}
cell people_appointed_role
{
    [GraphEdge]
    optional List<CellId> people_appointed_role_appointment;
    [GraphEdge]
    optional CellId people_appointed_role_nomination;
}
cell people_appointee
{
    [GraphEdge]
    optional List<CellId> people_appointee_position;
}
cell people_appointer
{
    [GraphEdge]
    optional List<CellId> people_appointer_appointment_made;
}
cell people_appointment
{
    [GraphEdge]
    optional CellId people_appointment_appointed_by;
    [GraphEdge]
    optional CellId people_appointment_appointed_role;
    [GraphEdge]
    optional CellId people_appointment_appointee;
}
cell people_appointment_nomination
{
    [GraphEdge]
    optional CellId people_appointment_nomination_nominee;
    [GraphEdge]
    optional CellId people_appointment_nomination_position;
}
cell people_appointment_nominee
{
    [GraphEdge]
    optional CellId people_appointment_nominee_nomination;
}
cell people_canadian_aboriginal_group
{
    [GraphEdge]
    optional CellId people_canadian_aboriginal_group_canadian_indian_reserves;
}
cell people_cause_of_death
{
    [GraphEdge]
    optional List<CellId> people_cause_of_death_people;
    [GraphEdge]
    optional List<CellId> people_cause_of_death_parent_cause_of_death;
    [GraphEdge]
    optional List<CellId> people_cause_of_death_includes_causes_of_death;
}
cell people_chinese_ethnic_group
{
    [GraphEdge]
    optional List<CellId> people_chinese_ethnic_group_autonomous_prefectures;
    [GraphEdge]
    optional List<CellId> people_chinese_ethnic_group_autonomous_counties;
    [GraphEdge]
    optional CellId people_chinese_ethnic_group_autonomous_regions;
}
cell people_deceased_person
{
    [GraphEdge]
    optional CellId people_deceased_person_place_of_death;
    [GraphEdge]
    optional List<CellId> people_deceased_person_place_of_cremation;
    [GraphEdge]
    optional List<CellId> people_deceased_person_place_of_burial;
    [GraphEdge]
    optional List<CellId> people_deceased_person_cause_of_death;
}
cell people_ethnicity
{
    [GraphEdge]
    optional List<CellId> people_ethnicity_includes_groups;
    [GraphEdge]
    optional List<CellId> people_ethnicity_geographic_distribution;
    [GraphEdge]
    optional List<CellId> people_ethnicity_languages_spoken;
    [GraphEdge]
    optional List<CellId> people_ethnicity_included_in_group;
    [GraphEdge]
    optional List<CellId> people_ethnicity_population;
    [GraphEdge]
    optional List<CellId> people_ethnicity_people;
}
cell people_family
{
    optional List<u8string> people_family_members;
    [GraphEdge]
    optional CellId people_family_founder;
    [GraphEdge]
    optional List<CellId> people_family_country;
    [GraphEdge]
    optional CellId people_family_rise_to_prominence;
}
cell people_family_member
{
    [GraphEdge]
    optional List<CellId> people_family_member_family;
}
cell people_family_name
{
    [GraphEdge]
    optional List<CellId> people_family_name_people_with_this_family_name;
}
cell people_group
{
    [GraphEdge]
    optional CellId people_group_member;
}
cell people_group_membership
{
    [GraphEdge]
    optional List<CellId> people_group_membership_member;
    [GraphEdge]
    optional CellId people_group_membership_group;
}
cell people_human_measurement
{
    [GraphEdge]
    optional CellId people_human_measurement_person;
    [GraphEdge]
    optional CellId people_human_measurement_body_part;
    optional float people_human_measurement_measurement;
}
cell people_marriage
{
    [GraphEdge]
    optional List<CellId> people_marriage_spouse;
    [GraphEdge]
    optional CellId people_marriage_location_of_ceremony;
    [GraphEdge]
    optional CellId people_marriage_type_of_union;
}
cell people_marriage_union_type
{
    [GraphEdge]
    optional List<CellId> people_marriage_union_type_unions_of_this_type;
}
cell people_measured_person
{
    [GraphEdge]
    optional List<CellId> people_measured_person_measurements;
    [GraphEdge]
    optional List<CellId> people_measured_person_sizes;
}
cell people_person
{
    [GraphEdge]
    optional List<CellId> people_person_metaweb_user_s;
    [GraphEdge]
    optional List<CellId> people_person_spouse_s;
    [GraphEdge]
    optional List<CellId> people_person_parents;
    [GraphEdge]
    optional List<CellId> people_person_sibling_s;
    [GraphEdge]
    optional List<CellId> people_person_profession;
    [GraphEdge]
    optional CellId people_person_gender;
    [GraphEdge]
    optional List<CellId> people_person_nationality;
    optional float people_person_weight_kg;
    optional float people_person_height_meters;
    optional List<ushort> people_person_quotationsbook_id;
    [GraphEdge]
    optional List<CellId> people_person_employment_history;
    [GraphEdge]
    optional List<CellId> people_person_children;
    [GraphEdge]
    optional List<CellId> people_person_quotations;
    [GraphEdge]
    optional CellId people_person_place_of_birth;
    [GraphEdge]
    optional List<CellId> people_person_education;
    [GraphEdge]
    optional CellId people_person_group;
    [GraphEdge]
    optional List<CellId> people_person_places_lived;
    [GraphEdge]
    optional List<CellId> people_person_languages;
    [GraphEdge]
    optional List<CellId> people_person_ethnicity;
    [GraphEdge]
    optional List<CellId> people_person_religion;
}
cell people_place_lived
{
    [GraphEdge]
    optional CellId people_place_lived_location;
    [GraphEdge]
    optional CellId people_place_lived_person;
}
cell people_place_of_interment
{
    [GraphEdge]
    optional List<CellId> people_place_of_interment_interred_here;
}
cell people_profession
{
    [GraphEdge]
    optional CellId people_profession_corresponding_type;
    [GraphEdge]
    optional List<CellId> people_profession_specializations;
    [GraphEdge]
    optional List<CellId> people_profession_represented_by_trade_unions;
    optional List<u8string> people_profession_people_with_this_profession;
    [GraphEdge]
    optional List<CellId> people_profession_part_of_professional_field;
    [GraphEdge]
    optional List<CellId> people_profession_specialization_of;
}
cell people_professional_field
{
    [GraphEdge]
    optional List<CellId> people_professional_field_professions_in_this_field;
}
cell people_sibling_relationship
{
    [GraphEdge]
    optional List<CellId> people_sibling_relationship_sibling;
}
cell periodicals_newspaper_circulation_area
{
    [GraphEdge]
    optional List<CellId> periodicals_newspaper_circulation_area_newspapers;
}
cell physics_fundamental_interaction
{
    [GraphEdge]
    optional List<CellId> physics_fundamental_interaction_particles;
}
cell physics_hadron
{
    [GraphEdge]
    optional List<CellId> physics_hadron_composition;
}
cell physics_magnetic_moment
{
    optional float physics_magnetic_moment_magnetic_moment;
    optional float physics_magnetic_moment_uncertainty;
}
cell physics_particle
{
    [GraphEdge]
    optional CellId physics_particle_family;
    optional float physics_particle_electric_charge;
    [GraphEdge]
    optional CellId physics_particle_antiparticle;
    optional float physics_particle_spin;
    [GraphEdge]
    optional CellId physics_particle_generation;
    [GraphEdge]
    optional CellId physics_particle_mass;
    [GraphEdge]
    optional CellId physics_particle_magnetic_moment;
    [GraphEdge]
    optional List<CellId> physics_particle_interactions;
}
cell physics_particle_antiparticle
{
    [GraphEdge]
    optional List<CellId> physics_particle_antiparticle_particle;
    optional u8string physics_particle_antiparticle_self_antiparticle;
}
cell physics_particle_family
{
    [GraphEdge]
    optional List<CellId> physics_particle_family_parent_class;
    [GraphEdge]
    optional List<CellId> physics_particle_family_particles;
    [GraphEdge]
    optional List<CellId> physics_particle_family_subclasses;
}
cell physics_quark
{
    [GraphEdge]
    optional List<CellId> physics_quark_composes;
}
cell physics_subatomic_mass
{
    optional float physics_subatomic_mass_uncertainty;
    optional float physics_subatomic_mass_mass;
}
cell physics_subatomic_particle_composition
{
    [GraphEdge]
    optional CellId physics_subatomic_particle_composition_composes;
    optional byte physics_subatomic_particle_composition_number;
    [GraphEdge]
    optional CellId physics_subatomic_particle_composition_particle;
}
cell physics_subatomic_particle_generation
{
    [GraphEdge]
    optional List<CellId> physics_subatomic_particle_generation_particles;
}
cell pipeline_delete_task
{
    optional u8string pipeline_delete_task_delete_guid;
}
cell pipeline_merge_task
{
    optional u8string pipeline_merge_task_right_guid;
    optional u8string pipeline_merge_task_left_guid;
}
cell pipeline_pipeline
{
    [GraphEdge]
    optional CellId pipeline_pipeline_contains_status;
    optional u8string pipeline_pipeline_hidden;
    [GraphEdge]
    optional CellId pipeline_pipeline_contains_task_type;
    [GraphEdge]
    optional List<CellId> pipeline_pipeline_visible_to;
    [GraphEdge]
    optional List<CellId> pipeline_pipeline_contains_pipelines;
}
cell pipeline_review_flag
{
    [GraphEdge]
    optional CellId pipeline_review_flag_admin_vote;
    optional u8string pipeline_review_flag_reason;
}
cell pipeline_simple_merge_task
{
    optional u8string pipeline_simple_merge_task_left_guid;
    optional u8string pipeline_simple_merge_task_right_guid;
}
cell pipeline_task
{
    [GraphEdge]
    optional List<CellId> pipeline_task_votes;
    [GraphEdge]
    optional CellId pipeline_task_status;
    [GraphEdge]
    optional CellId pipeline_task_review_flags;
}
cell pipeline_task_profile
{
    optional u8string pipeline_task_profile_prompt;
    optional List<u8string> pipeline_task_profile_post_comments_to;
    optional u8string pipeline_task_profile_comments_subject;
    [GraphEdge]
    optional List<CellId> pipeline_task_profile_available_votes;
    optional u8string pipeline_task_profile_view_uri;
}
cell pipeline_vote
{
    [GraphEdge]
    optional CellId pipeline_vote_vote_value;
}
cell projects_project
{
    [GraphEdge]
    optional List<CellId> projects_project_project_focus;
    [GraphEdge]
    optional List<CellId> projects_project_participants;
    [GraphEdge]
    optional CellId projects_project_actual_cost;
    [GraphEdge]
    optional List<CellId> projects_project_includes_smaller_projects;
    [GraphEdge]
    optional List<CellId> projects_project_part_of_larger_project;
    [GraphEdge]
    optional CellId projects_project_budget;
}
cell projects_project_focus
{
    [GraphEdge]
    optional List<CellId> projects_project_focus_projects;
}
cell projects_project_participant
{
    [GraphEdge]
    optional List<CellId> projects_project_participant_projects;
}
cell projects_project_participation
{
    [GraphEdge]
    optional CellId projects_project_participation_project;
    [GraphEdge]
    optional CellId projects_project_participation_participant;
    [GraphEdge]
    optional CellId projects_project_participation_role;
}
cell projects_project_role
{
    [GraphEdge]
    optional List<CellId> projects_project_role_projects;
}
cell protected_sites_governing_body_of_protected_sites
{
    optional List<u8string> protected_sites_governing_body_of_protected_sites_protected_sites_governed;
}
cell protected_sites_iucn_category
{
    optional List<u8string> protected_sites_iucn_category_protected_areas;
}
cell protected_sites_listed_site
{
    optional List<u8string> protected_sites_listed_site_designation_as_natural_or_cultural_site;
}
cell protected_sites_natural_or_cultural_preservation_agency
{
    [GraphEdge]
    optional List<CellId> protected_sites_natural_or_cultural_preservation_agency_natural_or_cultural_listings_maintained;
}
cell protected_sites_natural_or_cultural_site_designation
{
    [GraphEdge]
    optional List<CellId> protected_sites_natural_or_cultural_site_designation_sites;
    [GraphEdge]
    optional List<CellId> protected_sites_natural_or_cultural_site_designation_categories;
    [GraphEdge]
    optional List<CellId> protected_sites_natural_or_cultural_site_designation_listing_agency;
}
cell protected_sites_natural_or_cultural_site_listing
{
    [GraphEdge]
    optional CellId protected_sites_natural_or_cultural_site_listing_listed_site;
    [GraphEdge]
    optional CellId protected_sites_natural_or_cultural_site_listing_designation;
    [GraphEdge]
    optional List<CellId> protected_sites_natural_or_cultural_site_listing_category_or_criteria;
}
cell protected_sites_park_system
{
    [GraphEdge]
    optional List<CellId> protected_sites_park_system_member_parks;
}
cell protected_sites_protected_site
{
    [GraphEdge]
    optional List<CellId> protected_sites_protected_site_annual_visitors;
    [GraphEdge]
    optional List<CellId> protected_sites_protected_site_governing_body;
    [GraphEdge]
    optional CellId protected_sites_protected_site_system;
    [GraphEdge]
    optional CellId protected_sites_protected_site_iucn_category;
}
cell protected_sites_site_listing_category
{
    [GraphEdge]
    optional List<CellId> protected_sites_site_listing_category_listed_sites;
    [GraphEdge]
    optional List<CellId> protected_sites_site_listing_category_subcategories;
    [GraphEdge]
    optional CellId protected_sites_site_listing_category_supercategory;
    [GraphEdge]
    optional List<CellId> protected_sites_site_listing_category_category_of;
}
cell radio_radio_episode_segment
{
    [GraphEdge]
    optional List<CellId> radio_radio_episode_segment_subjects;
    [GraphEdge]
    optional CellId radio_radio_episode_segment_episode;
}
cell radio_radio_program
{
    [GraphEdge]
    optional List<CellId> radio_radio_program_subjects;
    [GraphEdge]
    optional List<CellId> radio_radio_program_episodes;
}
cell radio_radio_program_episode
{
    [GraphEdge]
    optional List<CellId> radio_radio_program_episode_subjects;
    [GraphEdge]
    optional CellId radio_radio_program_episode_program;
    [GraphEdge]
    optional CellId radio_radio_program_episode_segments;
}
cell radio_radio_subject
{
    [GraphEdge]
    optional List<CellId> radio_radio_subject_episodes_with_this_subject;
    [GraphEdge]
    optional List<CellId> radio_radio_subject_programs_with_this_subject;
    [GraphEdge]
    optional List<CellId> radio_radio_subject_segments_with_this_subject;
}
cell rail_electric_locomotive_class
{
    [GraphEdge]
    optional CellId rail_electric_locomotive_class_electric_system_s;
}
cell rail_electric_system
{
    [GraphEdge]
    optional CellId rail_electric_system_locomotive_class;
}
cell rail_locomotive
{
    [GraphEdge]
    optional List<CellId> rail_locomotive_ran_on_railways;
    [GraphEdge]
    optional List<CellId> rail_locomotive_owners;
    [GraphEdge]
    optional CellId rail_locomotive_locomotive_class;
}
cell rail_locomotive_builder
{
    optional List<u8string> rail_locomotive_builder_locomotive_classes_built;
}
cell rail_locomotive_class
{
    optional u8string rail_locomotive_class_uic_classification;
    [GraphEdge]
    optional CellId rail_locomotive_class_used_by;
    [GraphEdge]
    optional CellId rail_locomotive_class_parent_class;
    optional float rail_locomotive_class_weight;
    [GraphEdge]
    optional List<CellId> rail_locomotive_class_subclasses;
    optional float rail_locomotive_class_length;
    [GraphEdge]
    optional CellId rail_locomotive_class_gauge;
    [GraphEdge]
    optional List<CellId> rail_locomotive_class_locomotives_of_this_class;
    optional float rail_locomotive_class_gauge_mm;
    [GraphEdge]
    optional List<CellId> rail_locomotive_class_built_by;
    optional float rail_locomotive_class_maximum_speed;
}
cell rail_locomotive_class_operator_relationship
{
    [GraphEdge]
    optional CellId rail_locomotive_class_operator_relationship_locomotive_class;
    [GraphEdge]
    optional CellId rail_locomotive_class_operator_relationship_railway_operator;
}
cell rail_locomotive_owner
{
    [GraphEdge]
    optional CellId rail_locomotive_owner_locomotives_owned;
}
cell rail_locomotive_ownership
{
    [GraphEdge]
    optional CellId rail_locomotive_ownership_locomotive;
    [GraphEdge]
    optional CellId rail_locomotive_ownership_owner;
}
cell rail_rail_gauge
{
    [GraphEdge]
    optional List<CellId> rail_rail_gauge_railways;
    [GraphEdge]
    optional CellId rail_rail_gauge_locomotive_classes;
    optional float rail_rail_gauge_maximum_width;
    optional float rail_rail_gauge_minimum_width;
}
cell rail_rail_network
{
    [GraphEdge]
    optional List<CellId> rail_rail_network_railways;
}
cell rail_railway
{
    [GraphEdge]
    optional List<CellId> rail_railway_rolling_stock;
    [GraphEdge]
    optional List<CellId> rail_railway_type_of_railway;
    [GraphEdge]
    optional CellId rail_railway_gauge;
    [GraphEdge]
    optional List<CellId> rail_railway_operator_s;
    [GraphEdge]
    optional List<CellId> rail_railway_terminuses;
    [GraphEdge]
    optional CellId rail_railway_branches_to;
    [GraphEdge]
    optional CellId rail_railway_part_of_network;
    optional float rail_railway_length;
}
cell rail_railway_gauge_relationship
{
    [GraphEdge]
    optional CellId rail_railway_gauge_relationship_railway;
    [GraphEdge]
    optional CellId rail_railway_gauge_relationship_gauge;
    optional float rail_railway_gauge_relationship_width;
}
cell rail_railway_operator
{
    [GraphEdge]
    optional CellId rail_railway_operator_locomotive_classes;
    [GraphEdge]
    optional List<CellId> rail_railway_operator_railways;
}
cell rail_railway_operator_relationship
{
    [GraphEdge]
    optional CellId rail_railway_operator_relationship_operator;
    [GraphEdge]
    optional CellId rail_railway_operator_relationship_railway;
}
cell rail_railway_terminus
{
    [GraphEdge]
    optional List<CellId> rail_railway_terminus_railways_terminating_here;
}
cell rail_railway_type
{
    [GraphEdge]
    optional List<CellId> rail_railway_type_railways_of_this_type;
}
cell rail_railway_type_relationship
{
    [GraphEdge]
    optional CellId rail_railway_type_relationship_railway;
    [GraphEdge]
    optional CellId rail_railway_type_relationship_railway_type;
}
cell rail_rolling_stock_tenure
{
    [GraphEdge]
    optional CellId rail_rolling_stock_tenure_locomotive;
    [GraphEdge]
    optional CellId rail_rolling_stock_tenure_railway;
}
cell rail_steam_locomotive_class
{
    [GraphEdge]
    optional CellId rail_steam_locomotive_class_wheel_configuration;
}
cell rail_steam_locomotive_wheel_configuration
{
    [GraphEdge]
    optional List<CellId> rail_steam_locomotive_wheel_configuration_locomotive_classes;
}
cell religion_adherents
{
    [GraphEdge]
    optional List<CellId> religion_adherents_religion;
}
cell religion_belief
{
    [GraphEdge]
    optional List<CellId> religion_belief_belief_of;
}
cell religion_congregation
{
    [GraphEdge]
    optional CellId religion_congregation_number_in_congregation;
}
cell religion_deity
{
    [GraphEdge]
    optional List<CellId> religion_deity_deity_of;
}
cell religion_founding_figure
{
    [GraphEdge]
    optional List<CellId> religion_founding_figure_religion_founded;
}
cell religion_monastery
{
    [GraphEdge]
    optional List<CellId> religion_monastery_religion;
    [GraphEdge]
    optional List<CellId> religion_monastery_religious_order;
}
cell religion_place_of_worship
{
    [GraphEdge]
    optional List<CellId> religion_place_of_worship_historically_used_by_religions;
    [GraphEdge]
    optional List<CellId> religion_place_of_worship_religion;
    [GraphEdge]
    optional List<CellId> religion_place_of_worship_type_of_place_of_worship;
}
cell religion_place_of_worship_historical_use
{
    [GraphEdge]
    optional CellId religion_place_of_worship_historical_use_place_of_worship;
    [GraphEdge]
    optional CellId religion_place_of_worship_historical_use_religion;
}
cell religion_religion
{
    [GraphEdge]
    optional List<CellId> religion_religion_types_of_places_of_worship;
    [GraphEdge]
    optional List<CellId> religion_religion_sacred_sites;
    [GraphEdge]
    optional List<CellId> religion_religion_places_of_worship_historical;
    [GraphEdge]
    optional List<CellId> religion_religion_notable_figures;
    [GraphEdge]
    optional List<CellId> religion_religion_texts;
    [GraphEdge]
    optional List<CellId> religion_religion_places_of_worship;
    [GraphEdge]
    optional List<CellId> religion_religion_branched_into;
    [GraphEdge]
    optional List<CellId> religion_religion_beliefs;
    [GraphEdge]
    optional List<CellId> religion_religion_branched_from;
    [GraphEdge]
    optional List<CellId> religion_religion_deities;
    [GraphEdge]
    optional CellId religion_religion_collective_term_for_adherents;
    optional List<u8string> religion_religion_founding_figures;
    [GraphEdge]
    optional List<CellId> religion_religion_organizations;
    [GraphEdge]
    optional List<CellId> religion_religion_practices;
    [GraphEdge]
    optional List<CellId> religion_religion_is_part_of;
    [GraphEdge]
    optional List<CellId> religion_religion_number_of_adherents;
    [GraphEdge]
    optional List<CellId> religion_religion_includes;
    optional List<u8string> religion_religion_holidays;
}
cell religion_religious_jurisdiction_class
{
    [GraphEdge]
    optional List<CellId> religion_religious_jurisdiction_class_jurisdiction;
}
cell religion_religious_leader
{
    [GraphEdge]
    optional List<CellId> religion_religious_leader_religious_leadership;
}
cell religion_religious_leadership_jurisdiction
{
    [GraphEdge]
    optional CellId religion_religious_leadership_jurisdiction_size_or_type;
    [GraphEdge]
    optional List<CellId> religion_religious_leadership_jurisdiction_organisation;
    [GraphEdge]
    optional List<CellId> religion_religious_leadership_jurisdiction_title;
    [GraphEdge]
    optional List<CellId> religion_religious_leadership_jurisdiction_leader;
}
cell religion_religious_leadership_jurisdiction_appointment
{
    [GraphEdge]
    optional CellId religion_religious_leadership_jurisdiction_appointment_jurisdiction;
    [GraphEdge]
    optional CellId religion_religious_leadership_jurisdiction_appointment_title;
}
cell religion_religious_leadership_role
{
    [GraphEdge]
    optional List<CellId> religion_religious_leadership_role_religious_titles;
    [GraphEdge]
    optional List<CellId> religion_religious_leadership_role_religion;
}
cell religion_religious_leadership_title
{
    [GraphEdge]
    optional CellId religion_religious_leadership_title_rank_or_role;
    [GraphEdge]
    optional List<CellId> religion_religious_leadership_title_leaders;
    [GraphEdge]
    optional List<CellId> religion_religious_leadership_title_jurisdictions;
}
cell religion_religious_order
{
    [GraphEdge]
    optional List<CellId> religion_religious_order_monasteries;
}
cell religion_religious_organization
{
    [GraphEdge]
    optional List<CellId> religion_religious_organization_leaders;
    [GraphEdge]
    optional List<CellId> religion_religious_organization_associated_with;
    [GraphEdge]
    optional List<CellId> religion_religious_organization_building;
    [GraphEdge]
    optional List<CellId> religion_religious_organization_is_member_of;
    [GraphEdge]
    optional List<CellId> religion_religious_organization_member_organizations;
    [GraphEdge]
    optional List<CellId> religion_religious_organization_jurisdictions;
}
cell religion_religious_organization_leadership
{
    [GraphEdge]
    optional CellId religion_religious_organization_leadership_organization;
    [GraphEdge]
    optional CellId religion_religious_organization_leadership_role;
    [GraphEdge]
    optional CellId religion_religious_organization_leadership_leader;
    [GraphEdge]
    optional CellId religion_religious_organization_leadership_jurisdiction;
}
cell religion_religious_practice
{
    [GraphEdge]
    optional List<CellId> religion_religious_practice_practice_of;
}
cell religion_religious_text
{
    [GraphEdge]
    optional List<CellId> religion_religious_text_religious_text_of;
}
cell religion_type_of_place_of_worship
{
    [GraphEdge]
    optional List<CellId> religion_type_of_place_of_worship_places_of_worship;
    [GraphEdge]
    optional List<CellId> religion_type_of_place_of_worship_religion;
}
cell royalty_chivalric_office
{
    [GraphEdge]
    optional List<CellId> royalty_chivalric_office_position_holders;
}
cell royalty_chivalric_order_founder
{
    [GraphEdge]
    optional List<CellId> royalty_chivalric_order_founder_orders_founded;
}
cell royalty_chivalric_order_member
{
    [GraphEdge]
    optional List<CellId> royalty_chivalric_order_member_belongs_to_order;
}
cell royalty_chivalric_order_membership
{
    [GraphEdge]
    optional CellId royalty_chivalric_order_membership_recipient;
    [GraphEdge]
    optional CellId royalty_chivalric_order_membership_order;
    [GraphEdge]
    optional CellId royalty_chivalric_order_membership_presented_by;
    [GraphEdge]
    optional CellId royalty_chivalric_order_membership_title;
}
cell royalty_chivalric_order_officer
{
    [GraphEdge]
    optional List<CellId> royalty_chivalric_order_officer_memberships_presented;
    [GraphEdge]
    optional List<CellId> royalty_chivalric_order_officer_offices_held;
}
cell royalty_chivalric_order_position_tenure
{
    [GraphEdge]
    optional CellId royalty_chivalric_order_position_tenure_officer;
    [GraphEdge]
    optional CellId royalty_chivalric_order_position_tenure_chivalric_office;
    [GraphEdge]
    optional CellId royalty_chivalric_order_position_tenure_order;
}
cell royalty_chivalric_order_relationship
{
    [GraphEdge]
    optional CellId royalty_chivalric_order_relationship_lower_order;
    [GraphEdge]
    optional CellId royalty_chivalric_order_relationship_system_of_nobility;
    [GraphEdge]
    optional CellId royalty_chivalric_order_relationship_higher_order;
}
cell royalty_chivalric_rank
{
    [GraphEdge]
    optional CellId royalty_chivalric_rank_gender;
    [GraphEdge]
    optional List<CellId> royalty_chivalric_rank_order;
    [GraphEdge]
    optional List<CellId> royalty_chivalric_rank_titles_conferring_this_rank;
    [GraphEdge]
    optional CellId royalty_chivalric_rank_opposite_gender_equivalent;
}
cell royalty_chivalric_rank_gender_equivalence
{
    [GraphEdge]
    optional List<CellId> royalty_chivalric_rank_gender_equivalence_rank;
}
cell royalty_chivalric_rank_precedence
{
    [GraphEdge]
    optional CellId royalty_chivalric_rank_precedence_rank;
    [GraphEdge]
    optional CellId royalty_chivalric_rank_precedence_order_of_chivalry;
    [GraphEdge]
    optional CellId royalty_chivalric_rank_precedence_lower_rank;
    [GraphEdge]
    optional CellId royalty_chivalric_rank_precedence_higher_rank;
}
cell royalty_chivalric_title
{
    optional u8string royalty_chivalric_title_postnominal_letters;
    [GraphEdge]
    optional List<CellId> royalty_chivalric_title_rank;
    [GraphEdge]
    optional CellId royalty_chivalric_title_order_of_chivalry;
    [GraphEdge]
    optional CellId royalty_chivalric_title_opposite_gender_equivalent;
    [GraphEdge]
    optional List<CellId> royalty_chivalric_title_title_holders;
}
cell royalty_chivalric_title_gender_equivalency
{
    [GraphEdge]
    optional List<CellId> royalty_chivalric_title_gender_equivalency_equivalent_titles;
}
cell royalty_coronation
{
    [GraphEdge]
    optional CellId royalty_coronation_monarch;
}
cell royalty_kingdom
{
    [GraphEdge]
    optional List<CellId> royalty_kingdom_rulers;
}
cell royalty_monarch
{
    [GraphEdge]
    optional List<CellId> royalty_monarch_kingdom;
    [GraphEdge]
    optional List<CellId> royalty_monarch_royal_line;
    [GraphEdge]
    optional CellId royalty_monarch_coronation_event;
}
cell royalty_noble_person
{
    [GraphEdge]
    optional List<CellId> royalty_noble_person_titles;
}
cell royalty_noble_rank
{
    [GraphEdge]
    optional List<CellId> royalty_noble_rank_titles_conferring_this_rank;
    [GraphEdge]
    optional List<CellId> royalty_noble_rank_used_in;
    [GraphEdge]
    optional List<CellId> royalty_noble_rank_lower_rank;
    [GraphEdge]
    optional List<CellId> royalty_noble_rank_higher_rank;
    [GraphEdge]
    optional List<CellId> royalty_noble_rank_gender;
    [GraphEdge]
    optional List<CellId> royalty_noble_rank_opposite_gender_equivalent;
}
cell royalty_noble_rank_gender_equivalence
{
    [GraphEdge]
    optional List<CellId> royalty_noble_rank_gender_equivalence_noble_rank;
}
cell royalty_noble_title
{
    [GraphEdge]
    optional List<CellId> royalty_noble_title_holders;
    [GraphEdge]
    optional List<CellId> royalty_noble_title_noble_rank;
    [GraphEdge]
    optional List<CellId> royalty_noble_title_used_in;
    [GraphEdge]
    optional List<CellId> royalty_noble_title_opposite_gender_equivalent;
}
cell royalty_noble_title_gender_equivalency
{
    [GraphEdge]
    optional List<CellId> royalty_noble_title_gender_equivalency_equivalent_title;
}
cell royalty_noble_title_tenure
{
    [GraphEdge]
    optional CellId royalty_noble_title_tenure_noble_person;
    [GraphEdge]
    optional CellId royalty_noble_title_tenure_noble_title;
}
cell royalty_order_of_chivalry
{
    [GraphEdge]
    optional List<CellId> royalty_order_of_chivalry_used_in;
    [GraphEdge]
    optional List<CellId> royalty_order_of_chivalry_recipients;
    [GraphEdge]
    optional List<CellId> royalty_order_of_chivalry_officers;
    [GraphEdge]
    optional CellId royalty_order_of_chivalry_founders;
    [GraphEdge]
    optional CellId royalty_order_of_chivalry_category;
    [GraphEdge]
    optional List<CellId> royalty_order_of_chivalry_chivalric_titles;
    [GraphEdge]
    optional List<CellId> royalty_order_of_chivalry_chivalric_rank;
    optional u8string royalty_order_of_chivalry_motto;
    [GraphEdge]
    optional CellId royalty_order_of_chivalry_lower_order;
    [GraphEdge]
    optional CellId royalty_order_of_chivalry_higher_order;
}
cell royalty_order_of_chivalry_category
{
    [GraphEdge]
    optional List<CellId> royalty_order_of_chivalry_category_orders_in_this_category;
}
cell royalty_precedence
{
    [GraphEdge]
    optional CellId royalty_precedence_system;
    [GraphEdge]
    optional CellId royalty_precedence_higher_rank;
    [GraphEdge]
    optional CellId royalty_precedence_lower_rank;
}
cell royalty_royal_line
{
    [GraphEdge]
    optional List<CellId> royalty_royal_line_monarchs_from_this_line;
    [GraphEdge]
    optional List<CellId> royalty_royal_line_kingdom_s_ruled;
    [GraphEdge]
    optional List<CellId> royalty_royal_line_preceded_by;
    [GraphEdge]
    optional List<CellId> royalty_royal_line_succeeded_by;
}
cell royalty_system_of_nobility
{
    [GraphEdge]
    optional List<CellId> royalty_system_of_nobility_country_of_origin;
    [GraphEdge]
    optional List<CellId> royalty_system_of_nobility_supercedes;
    [GraphEdge]
    optional CellId royalty_system_of_nobility_superceded_by;
    [GraphEdge]
    optional List<CellId> royalty_system_of_nobility_titles;
    [GraphEdge]
    optional List<CellId> royalty_system_of_nobility_orders_of_chivalry;
    [GraphEdge]
    optional List<CellId> royalty_system_of_nobility_ranks;
}
cell royalty_system_order_relationship
{
    [GraphEdge]
    optional CellId royalty_system_order_relationship_system;
    [GraphEdge]
    optional CellId royalty_system_order_relationship_order;
}
cell royalty_system_rank_relationship
{
    [GraphEdge]
    optional CellId royalty_system_rank_relationship_system;
    [GraphEdge]
    optional CellId royalty_system_rank_relationship_rank;
}
cell royalty_system_title_relationship
{
    [GraphEdge]
    optional CellId royalty_system_title_relationship_title;
    [GraphEdge]
    optional CellId royalty_system_title_relationship_system;
}
cell skiing_lift_tenure
{
    [GraphEdge]
    optional CellId skiing_lift_tenure_lift_type;
    optional byte skiing_lift_tenure_capacity;
    [GraphEdge]
    optional CellId skiing_lift_tenure_ski_lift;
    [GraphEdge]
    optional CellId skiing_lift_tenure_manufacturer;
}
cell skiing_lift_type
{
    [GraphEdge]
    optional List<CellId> skiing_lift_type_ski_lifts;
}
cell skiing_run_rating
{
    [GraphEdge]
    optional List<CellId> skiing_run_rating_ski_runs;
    [GraphEdge]
    optional CellId skiing_run_rating_symbol;
}
cell skiing_run_rating_symbol
{
    [GraphEdge]
    optional CellId skiing_run_rating_symbol_run_rating;
}
cell skiing_ski_area
{
    [GraphEdge]
    optional List<CellId> skiing_ski_area_lifts;
    [GraphEdge]
    optional List<CellId> skiing_ski_area_snowfall;
    optional float skiing_ski_area_skiable_area;
    optional float skiing_ski_area_base_elevation;
    optional float skiing_ski_area_top_elevation;
    [GraphEdge]
    optional List<CellId> skiing_ski_area_owner;
    [GraphEdge]
    optional List<CellId> skiing_ski_area_lodges;
    optional byte skiing_ski_area_number_of_runs;
    [GraphEdge]
    optional CellId skiing_ski_area_closest_city;
}
cell skiing_ski_area_owner
{
    [GraphEdge]
    optional List<CellId> skiing_ski_area_owner_ski_areas_owned;
}
cell skiing_ski_area_ownership
{
    [GraphEdge]
    optional CellId skiing_ski_area_ownership_ski_area;
    [GraphEdge]
    optional CellId skiing_ski_area_ownership_owner;
}
cell skiing_ski_lift
{
    [GraphEdge]
    optional List<CellId> skiing_ski_lift_runs_served;
    [GraphEdge]
    optional CellId skiing_ski_lift_ski_area;
    optional float skiing_ski_lift_base_elevation;
    [GraphEdge]
    optional List<CellId> skiing_ski_lift_lift_type;
    optional float skiing_ski_lift_top_elevation;
}
cell skiing_ski_lift_manufacturer
{
    [GraphEdge]
    optional CellId skiing_ski_lift_manufacturer_ski_lifts;
}
cell skiing_ski_lodge
{
    [GraphEdge]
    optional CellId skiing_ski_lodge_ski_area;
}
cell skiing_ski_run
{
    [GraphEdge]
    optional List<CellId> skiing_ski_run_served_by;
    [GraphEdge]
    optional CellId skiing_ski_run_rating;
}
cell skiing_yearly_snowfall
{
    optional float skiing_yearly_snowfall_snowfall;
}
cell soccer_fifa
{
    [GraphEdge]
    optional List<CellId> soccer_fifa_leagues_governed;
}
cell soccer_football_disciplinary_action
{
    [GraphEdge]
    optional CellId soccer_football_disciplinary_action_player;
    optional byte soccer_football_disciplinary_action_minute;
    [GraphEdge]
    optional CellId soccer_football_disciplinary_action_punishment;
    [GraphEdge]
    optional CellId soccer_football_disciplinary_action_match;
}
cell soccer_football_disciplinary_punishment
{
    [GraphEdge]
    optional List<CellId> soccer_football_disciplinary_punishment_player;
}
cell soccer_football_goal
{
    [GraphEdge]
    optional CellId soccer_football_goal_scorer;
    [GraphEdge]
    optional CellId soccer_football_goal_match;
    [GraphEdge]
    optional CellId soccer_football_goal_point_awarded_to;
    optional byte soccer_football_goal_minute;
}
cell soccer_football_league
{
    [GraphEdge]
    optional List<CellId> soccer_football_league_teams;
    [GraphEdge]
    optional List<CellId> soccer_football_league_seasons;
    [GraphEdge]
    optional CellId soccer_football_league_league_system;
    [GraphEdge]
    optional CellId soccer_football_league_governing_body;
}
cell soccer_football_league_participation
{
    [GraphEdge]
    optional CellId soccer_football_league_participation_to;
    [GraphEdge]
    optional CellId soccer_football_league_participation_from;
    [GraphEdge]
    optional CellId soccer_football_league_participation_team;
    [GraphEdge]
    optional CellId soccer_football_league_participation_league;
}
cell soccer_football_league_season
{
    [GraphEdge]
    optional CellId soccer_football_league_season_league;
    [GraphEdge]
    optional List<CellId> soccer_football_league_season_matches;
    optional List<u8string> soccer_football_league_season_teams;
}
cell soccer_football_league_system
{
    [GraphEdge]
    optional List<CellId> soccer_football_league_system_leagues;
}
cell soccer_football_match
{
    [GraphEdge]
    optional List<CellId> soccer_football_match_players;
    [GraphEdge]
    optional List<CellId> soccer_football_match_disciplinary_action;
    [GraphEdge]
    optional List<CellId> soccer_football_match_substitution;
    optional List<u8string> soccer_football_match_assistant_referees;
    [GraphEdge]
    optional List<CellId> soccer_football_match_managers;
    optional uint soccer_football_match_attendance;
    [GraphEdge]
    optional CellId soccer_football_match_referee;
    [GraphEdge]
    optional CellId soccer_football_match_held_at;
    [GraphEdge]
    optional List<CellId> soccer_football_match_teams;
    [GraphEdge]
    optional List<CellId> soccer_football_match_goals;
}
cell soccer_football_pitch
{
    [GraphEdge]
    optional List<CellId> soccer_football_pitch_matches;
}
cell soccer_football_player
{
    optional byte soccer_football_player_total_international_goals;
    optional byte soccer_football_player_total_career_goals;
    optional ushort soccer_football_player_total_career_appearances;
    optional byte soccer_football_player_total_international_appearances;
    [GraphEdge]
    optional List<CellId> soccer_football_player_position_s;
    [GraphEdge]
    optional List<CellId> soccer_football_player_disciplinary_action;
    [GraphEdge]
    optional List<CellId> soccer_football_player_matches_played;
    [GraphEdge]
    optional List<CellId> soccer_football_player_transfers;
    [GraphEdge]
    optional List<CellId> soccer_football_player_goals_scored;
    [GraphEdge]
    optional List<CellId> soccer_football_player_loans;
    [GraphEdge]
    optional List<CellId> soccer_football_player_statistics;
}
cell soccer_football_player_loan
{
    [GraphEdge]
    optional CellId soccer_football_player_loan_borrowing_team;
    [GraphEdge]
    optional CellId soccer_football_player_loan_player;
    [GraphEdge]
    optional CellId soccer_football_player_loan_lending_team;
}
cell soccer_football_player_match_participation
{
    optional byte soccer_football_player_match_participation_shirt_number;
    [GraphEdge]
    optional CellId soccer_football_player_match_participation_team;
    [GraphEdge]
    optional CellId soccer_football_player_match_participation_match;
    optional u8string soccer_football_player_match_participation_part_of_starting_lineup;
    [GraphEdge]
    optional CellId soccer_football_player_match_participation_player;
}
cell soccer_football_player_stats
{
    [GraphEdge]
    optional CellId soccer_football_player_stats_team;
    [GraphEdge]
    optional CellId soccer_football_player_stats_player;
    optional byte soccer_football_player_stats_appearances;
    optional byte soccer_football_player_stats_total_goals;
}
cell soccer_football_player_substitution
{
    optional byte soccer_football_player_substitution_minute;
    [GraphEdge]
    optional CellId soccer_football_player_substitution_match;
    [GraphEdge]
    optional CellId soccer_football_player_substitution_on;
    [GraphEdge]
    optional CellId soccer_football_player_substitution_off;
}
cell soccer_football_player_transfer
{
    [GraphEdge]
    optional CellId soccer_football_player_transfer_selling_team;
    [GraphEdge]
    optional CellId soccer_football_player_transfer_player;
    [GraphEdge]
    optional CellId soccer_football_player_transfer_transfer_fee_currency;
    optional float soccer_football_player_transfer_fee;
    [GraphEdge]
    optional CellId soccer_football_player_transfer_purchasing_team;
}
cell soccer_football_position
{
    optional List<u8string> soccer_football_position_players;
}
cell soccer_football_referee
{
    [GraphEdge]
    optional List<CellId> soccer_football_referee_assistant_referee_at;
    [GraphEdge]
    optional List<CellId> soccer_football_referee_main_referee_for;
}
cell soccer_football_team
{
    [GraphEdge]
    optional List<CellId> soccer_football_team_player_statistics;
    [GraphEdge]
    optional List<CellId> soccer_football_team_sold_players;
    [GraphEdge]
    optional List<CellId> soccer_football_team_loaned_players;
    [GraphEdge]
    optional List<CellId> soccer_football_team_purchased_players;
    [GraphEdge]
    optional List<CellId> soccer_football_team_borrowed_players;
    [GraphEdge]
    optional List<CellId> soccer_football_team_matches;
    [GraphEdge]
    optional List<CellId> soccer_football_team_manager;
    [GraphEdge]
    optional List<CellId> soccer_football_team_league;
}
cell soccer_football_team_management_tenure
{
    [GraphEdge]
    optional CellId soccer_football_team_management_tenure_manager;
    [GraphEdge]
    optional CellId soccer_football_team_management_tenure_team;
}
cell soccer_football_team_manager
{
    [GraphEdge]
    optional List<CellId> soccer_football_team_manager_team;
    [GraphEdge]
    optional List<CellId> soccer_football_team_manager_matches;
}
cell soccer_football_team_manager_match_participation
{
    [GraphEdge]
    optional CellId soccer_football_team_manager_match_participation_match;
    [GraphEdge]
    optional CellId soccer_football_team_manager_match_participation_manager;
    [GraphEdge]
    optional CellId soccer_football_team_manager_match_participation_team;
}
cell spaceflight_astronaut
{
    [GraphEdge]
    optional List<CellId> spaceflight_astronaut_missions;
    [GraphEdge]
    optional List<CellId> spaceflight_astronaut_space_agency;
    optional float spaceflight_astronaut_space_time_minutes;
}
cell spaceflight_bipropellant_rocket_engine
{
    optional byte spaceflight_bipropellant_rocket_engine_number_of_chambers;
    [GraphEdge]
    optional CellId spaceflight_bipropellant_rocket_engine_fuel;
    [GraphEdge]
    optional CellId spaceflight_bipropellant_rocket_engine_oxidizer;
    optional float spaceflight_bipropellant_rocket_engine_chamber_pressure;
    optional float spaceflight_bipropellant_rocket_engine_oxidizer_fuel_ratio;
    optional float spaceflight_bipropellant_rocket_engine_wet_mass;
    optional float spaceflight_bipropellant_rocket_engine_expansion_ratio;
    [GraphEdge]
    optional CellId spaceflight_bipropellant_rocket_engine_engine_cycle;
}
cell spaceflight_mission_destination
{
    [GraphEdge]
    optional List<CellId> spaceflight_mission_destination_missions_sent_here;
}
cell spaceflight_rocket
{
    optional byte spaceflight_rocket_number_of_stages;
    optional float spaceflight_rocket_diameter_meters;
    optional List<u8string> spaceflight_rocket_satellites_launched;
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_manufacturer;
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_launch_sites;
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_stages;
    [GraphEdge]
    optional CellId spaceflight_rocket_status;
    optional float spaceflight_rocket_mass;
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_rocket_function;
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_country_of_origin;
    optional float spaceflight_rocket_height_meters;
}
cell spaceflight_rocket_engine
{
    optional float spaceflight_rocket_engine_height;
    [GraphEdge]
    optional CellId spaceflight_rocket_engine_design_period;
    optional float spaceflight_rocket_engine_thrust_sea_level;
    optional float spaceflight_rocket_engine_thrust_vacuum;
    optional float spaceflight_rocket_engine_isp_vacuum;
    optional float spaceflight_rocket_engine_throttle_ratio;
    optional float spaceflight_rocket_engine_dry_mass;
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_engine_used_in_rocket_stages;
    optional float spaceflight_rocket_engine_diameter;
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_engine_status;
    [GraphEdge]
    optional CellId spaceflight_rocket_engine_designed_by;
    [GraphEdge]
    optional CellId spaceflight_rocket_engine_manufactured_by;
    optional float spaceflight_rocket_engine_isp_sea_level;
    optional u8string spaceflight_rocket_engine_government_designation;
    [GraphEdge]
    optional CellId spaceflight_rocket_engine_use_period;
}
cell spaceflight_rocket_engine_cycle
{
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_engine_cycle_rocket_engines;
}
cell spaceflight_rocket_engine_designer
{
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_engine_designer_rocket_engines;
}
cell spaceflight_rocket_engine_fuel
{
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_engine_fuel_rocket_engines;
}
cell spaceflight_rocket_engine_manufacturer
{
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_engine_manufacturer_rocket_engines;
}
cell spaceflight_rocket_engine_oxidizer
{
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_engine_oxidizer_rocket_engines;
}
cell spaceflight_rocket_engine_status
{
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_engine_status_rocket_engines;
}
cell spaceflight_rocket_fuel
{
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_fuel_rocket_stages;
}
cell spaceflight_rocket_function
{
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_function_rockets_supporting_this_function;
}
cell spaceflight_rocket_launch_site
{
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_launch_site_rockets_launched_here;
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_launch_site_missions_launched_here;
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_launch_site_operated_by;
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_launch_site_controlling_country;
}
cell spaceflight_rocket_manufacturer
{
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_manufacturer_rockets_manufactured;
}
cell spaceflight_rocket_stage
{
    [GraphEdge]
    optional CellId spaceflight_rocket_stage_rocket;
    optional float spaceflight_rocket_stage_thrust_newtons;
    [GraphEdge]
    optional CellId spaceflight_rocket_stage_engine;
    optional byte spaceflight_rocket_stage_stage_number;
    optional float spaceflight_rocket_stage_burn_time;
    optional byte spaceflight_rocket_stage_number_of_engines;
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_stage_fuel;
}
cell spaceflight_rocket_status
{
    [GraphEdge]
    optional List<CellId> spaceflight_rocket_status_rockets;
}
cell spaceflight_satellite
{
    optional float spaceflight_satellite_power_watts;
    optional float spaceflight_satellite_altitude;
    [GraphEdge]
    optional List<CellId> spaceflight_satellite_launch_vehicle;
    [GraphEdge]
    optional CellId spaceflight_satellite_orbiting;
    optional float spaceflight_satellite_speed_on_orbit;
    optional float spaceflight_satellite_dry_mass_kg;
    [GraphEdge]
    optional List<CellId> spaceflight_satellite_launch_site;
    optional ushort spaceflight_satellite_norad_number;
    optional u8string spaceflight_satellite_cospar_id;
    optional float spaceflight_satellite_ground_repeat_time;
    [GraphEdge]
    optional CellId spaceflight_satellite_primary_use;
    optional float spaceflight_satellite_orbit_period;
    optional float spaceflight_satellite_launch_mass_kg;
    [GraphEdge]
    optional List<CellId> spaceflight_satellite_orbit_type;
}
cell spaceflight_satellite_manufacturer
{
    [GraphEdge]
    optional List<CellId> spaceflight_satellite_manufacturer_spacecraft_manufactured;
}
cell spaceflight_satellite_orbit_synchronous
{
    optional float spaceflight_satellite_orbit_synchronous_longitude;
    [GraphEdge]
    optional CellId spaceflight_satellite_orbit_synchronous_orbit_type;
    [GraphEdge]
    optional CellId spaceflight_satellite_orbit_synchronous_satellite;
    optional u8string spaceflight_satellite_orbit_synchronous_e_w;
}
cell spaceflight_satellite_orbit_type
{
    optional List<u8string> spaceflight_satellite_orbit_type_satellites;
    [GraphEdge]
    optional List<CellId> spaceflight_satellite_orbit_type_synchronous_satellites;
}
cell spaceflight_satellite_type
{
    [GraphEdge]
    optional List<CellId> spaceflight_satellite_type_satellites;
}
cell spaceflight_space_agency
{
    [GraphEdge]
    optional List<CellId> spaceflight_space_agency_spaceports;
    [GraphEdge]
    optional List<CellId> spaceflight_space_agency_astronauts;
}
cell spaceflight_space_mission
{
    [GraphEdge]
    optional CellId spaceflight_space_mission_landing_site;
    [GraphEdge]
    optional CellId spaceflight_space_mission_launch_site;
    [GraphEdge]
    optional List<CellId> spaceflight_space_mission_astronauts;
    [GraphEdge]
    optional List<CellId> spaceflight_space_mission_space_program;
    [GraphEdge]
    optional List<CellId> spaceflight_space_mission_destination;
}
cell spaceflight_space_program
{
    [GraphEdge]
    optional List<CellId> spaceflight_space_program_sponsor;
    [GraphEdge]
    optional List<CellId> spaceflight_space_program_missions;
}
cell spaceflight_space_program_sponsor
{
    [GraphEdge]
    optional List<CellId> spaceflight_space_program_sponsor_space_programs_sponsored;
}
cell spaceflight_spacecraft
{
    [GraphEdge]
    optional List<CellId> spaceflight_spacecraft_manufacturer;
}
cell sports_boxer
{
    [GraphEdge]
    optional List<CellId> sports_boxer_matches;
    [GraphEdge]
    optional List<CellId> sports_boxer_weight_division;
    [GraphEdge]
    optional CellId sports_boxer_stance;
    [GraphEdge]
    optional List<CellId> sports_boxer_titles;
    optional float sports_boxer_reach;
}
cell sports_boxing_stance
{
    optional List<u8string> sports_boxing_stance_boxers_with_this_stance;
}
cell sports_boxing_weight_division
{
    optional List<u8string> sports_boxing_weight_division_boxers_rated_at_this_weight;
    [GraphEdge]
    optional List<CellId> sports_boxing_weight_division_matches;
    [GraphEdge]
    optional List<CellId> sports_boxing_weight_division_champions;
}
cell sports_coaching_position
{
    [GraphEdge]
    optional List<CellId> sports_coaching_position_coaches;
}
cell sports_competitor_competition_relationship
{
    [GraphEdge]
    optional CellId sports_competitor_competition_relationship_medal;
    [GraphEdge]
    optional List<CellId> sports_competitor_competition_relationship_competitors;
    [GraphEdge]
    optional CellId sports_competitor_competition_relationship_tournament;
    [GraphEdge]
    optional CellId sports_competitor_competition_relationship_competition;
    [GraphEdge]
    optional CellId sports_competitor_competition_relationship_country;
    [GraphEdge]
    optional CellId sports_competitor_competition_relationship_team;
    optional byte sports_competitor_competition_relationship_rank;
}
cell sports_competitor_country_relationship
{
    [GraphEdge]
    optional CellId sports_competitor_country_relationship_competitor;
    [GraphEdge]
    optional CellId sports_competitor_country_relationship_tournament;
    [GraphEdge]
    optional CellId sports_competitor_country_relationship_sports;
    [GraphEdge]
    optional CellId sports_competitor_country_relationship_country;
}
cell sports_defunct_sports_team
{
    [GraphEdge]
    optional CellId sports_defunct_sports_team_sport;
    [GraphEdge]
    optional List<CellId> sports_defunct_sports_team_active;
    [GraphEdge]
    optional List<CellId> sports_defunct_sports_team_later_known_as;
}
cell sports_drafted_athlete
{
    [GraphEdge]
    optional List<CellId> sports_drafted_athlete_drafted;
}
cell sports_fight_song
{
    [GraphEdge]
    optional List<CellId> sports_fight_song_sports_team;
}
cell sports_golf_club_access
{
    optional List<u8string> sports_golf_club_access_golf_clubs;
}
cell sports_golf_course
{
    optional byte sports_golf_course_par;
    optional byte sports_golf_course_holes;
    optional float sports_golf_course_length;
    [GraphEdge]
    optional List<CellId> sports_golf_course_designer;
    [GraphEdge]
    optional CellId sports_golf_course_facility;
}
cell sports_golf_course_designer
{
    [GraphEdge]
    optional List<CellId> sports_golf_course_designer_golf_courses;
}
cell sports_golf_facility
{
    [GraphEdge]
    optional List<CellId> sports_golf_facility_courses;
    [GraphEdge]
    optional CellId sports_golf_facility_access;
}
cell sports_mascot
{
    [GraphEdge]
    optional List<CellId> sports_mascot_team;
}
cell sports_multi_event_tournament
{
    [GraphEdge]
    optional List<CellId> sports_multi_event_tournament_events;
    [GraphEdge]
    optional List<CellId> sports_multi_event_tournament_participating_countries;
    optional byte sports_multi_event_tournament_number_of_events;
    [GraphEdge]
    optional List<CellId> sports_multi_event_tournament_sports;
    optional ushort sports_multi_event_tournament_number_of_competitors;
    optional byte sports_multi_event_tournament_number_of_nations;
    [GraphEdge]
    optional List<CellId> sports_multi_event_tournament_competitions;
    [GraphEdge]
    optional List<CellId> sports_multi_event_tournament_competitors;
    [GraphEdge]
    optional List<CellId> sports_multi_event_tournament_athletic_performances;
}
cell sports_pro_athlete
{
    [GraphEdge]
    optional List<CellId> sports_pro_athlete_teams;
    [GraphEdge]
    optional List<CellId> sports_pro_athlete_sports_played_professionally;
}
cell sports_pro_sports_played
{
    [GraphEdge]
    optional CellId sports_pro_sports_played_athlete;
    [GraphEdge]
    optional CellId sports_pro_sports_played_sport;
}
cell sports_professional_sports_team
{
    [GraphEdge]
    optional List<CellId> sports_professional_sports_team_draft_picks;
    [GraphEdge]
    optional List<CellId> sports_professional_sports_team_owner_s;
}
cell sports_school_sports_team
{
    [GraphEdge]
    optional CellId sports_school_sports_team_athletics_brand;
    [GraphEdge]
    optional CellId sports_school_sports_team_school;
}
cell sports_sport
{
    [GraphEdge]
    optional List<CellId> sports_sport_positions;
    [GraphEdge]
    optional List<CellId> sports_sport_officials;
    [GraphEdge]
    optional List<CellId> sports_sport_related_equipment;
    [GraphEdge]
    optional List<CellId> sports_sport_team_coaches;
    [GraphEdge]
    optional List<CellId> sports_sport_teams;
    [GraphEdge]
    optional List<CellId> sports_sport_pro_athletes;
    [GraphEdge]
    optional List<CellId> sports_sport_leagues;
}
cell sports_sport_country
{
    [GraphEdge]
    optional List<CellId> sports_sport_country_athletes;
    [GraphEdge]
    optional List<CellId> sports_sport_country_athletic_performances;
    [GraphEdge]
    optional List<CellId> sports_sport_country_multi_event_tournaments_participated_in;
}
cell sports_sport_medal
{
    [GraphEdge]
    optional List<CellId> sports_sport_medal_medal_winners;
}
cell sports_sports_award
{
    [GraphEdge]
    optional CellId sports_sports_award_award;
    [GraphEdge]
    optional CellId sports_sports_award_team;
    [GraphEdge]
    optional CellId sports_sports_award_season;
    [GraphEdge]
    optional CellId sports_sports_award_award_winner;
}
cell sports_sports_award_type
{
    [GraphEdge]
    optional List<CellId> sports_sports_award_type_winners;
}
cell sports_sports_award_winner
{
    [GraphEdge]
    optional List<CellId> sports_sports_award_winner_awards;
}
cell sports_sports_championship
{
    [GraphEdge]
    optional List<CellId> sports_sports_championship_league;
    [GraphEdge]
    optional List<CellId> sports_sports_championship_events;
}
cell sports_sports_championship_event
{
    optional u8string sports_sports_championship_event_result;
    [GraphEdge]
    optional CellId sports_sports_championship_event_season;
    [GraphEdge]
    optional List<CellId> sports_sports_championship_event_championship;
    [GraphEdge]
    optional CellId sports_sports_championship_event_runner_up;
    [GraphEdge]
    optional CellId sports_sports_championship_event_champion;
}
cell sports_sports_equipment
{
    [GraphEdge]
    optional List<CellId> sports_sports_equipment_sport_used_for;
}
cell sports_sports_facility
{
    [GraphEdge]
    optional List<CellId> sports_sports_facility_teams;
    [GraphEdge]
    optional List<CellId> sports_sports_facility_home_venue_for;
}
cell sports_sports_gender
{
    [GraphEdge]
    optional CellId sports_sports_gender_sports_teams;
}
cell sports_sports_league
{
    [GraphEdge]
    optional List<CellId> sports_sports_league_seasons;
    optional List<u8string> sports_sports_league_teams;
    [GraphEdge]
    optional CellId sports_sports_league_sport;
    [GraphEdge]
    optional CellId sports_sports_league_championship;
}
cell sports_sports_league_draft
{
    [GraphEdge]
    optional List<CellId> sports_sports_league_draft_picks;
    [GraphEdge]
    optional CellId sports_sports_league_draft_league;
}
cell sports_sports_league_draft_pick
{
    [GraphEdge]
    optional CellId sports_sports_league_draft_pick_draft;
    [GraphEdge]
    optional CellId sports_sports_league_draft_pick_team;
    optional byte sports_sports_league_draft_pick_pick_overall;
    [GraphEdge]
    optional CellId sports_sports_league_draft_pick_school;
    optional byte sports_sports_league_draft_pick_round;
    [GraphEdge]
    optional CellId sports_sports_league_draft_pick_player;
    optional byte sports_sports_league_draft_pick_pick;
    optional u8string sports_sports_league_draft_pick_notes;
}
cell sports_sports_league_participation
{
    [GraphEdge]
    optional CellId sports_sports_league_participation_to;
    [GraphEdge]
    optional CellId sports_sports_league_participation_league;
    [GraphEdge]
    optional CellId sports_sports_league_participation_team;
    [GraphEdge]
    optional CellId sports_sports_league_participation_from;
}
cell sports_sports_league_season
{
    [GraphEdge]
    optional List<CellId> sports_sports_league_season_awards;
    [GraphEdge]
    optional List<CellId> sports_sports_league_season_championship;
    [GraphEdge]
    optional CellId sports_sports_league_season_league;
}
cell sports_sports_official
{
    [GraphEdge]
    optional List<CellId> sports_sports_official_sports_association;
    [GraphEdge]
    optional List<CellId> sports_sports_official_sport;
}
cell sports_sports_official_tenure
{
    [GraphEdge]
    optional CellId sports_sports_official_tenure_sports_official;
    [GraphEdge]
    optional CellId sports_sports_official_tenure_sportsassociation;
}
cell sports_sports_position
{
    [GraphEdge]
    optional List<CellId> sports_sports_position_sport;
    optional List<u8string> sports_sports_position_players;
}
cell sports_sports_team
{
    [GraphEdge]
    optional CellId sports_sports_team_gender;
    [GraphEdge]
    optional CellId sports_sports_team_member_of;
    optional u8string sports_sports_team_abbreviation;
    [GraphEdge]
    optional List<CellId> sports_sports_team_coaches;
    [GraphEdge]
    optional List<CellId> sports_sports_team_colors;
    [GraphEdge]
    optional List<CellId> sports_sports_team_location;
    [GraphEdge]
    optional List<CellId> sports_sports_team_roster;
    [GraphEdge]
    optional CellId sports_sports_team_sport;
    [GraphEdge]
    optional List<CellId> sports_sports_team_championships;
    [GraphEdge]
    optional List<CellId> sports_sports_team_venue;
    [GraphEdge]
    optional List<CellId> sports_sports_team_arena_stadium;
    optional List<u8string> sports_sports_team_rivalry;
    [GraphEdge]
    optional List<CellId> sports_sports_team_captains;
    optional List<u8string> sports_sports_team_league;
    [GraphEdge]
    optional List<CellId> sports_sports_team_previously_known_as;
    [GraphEdge]
    optional List<CellId> sports_sports_team_season_record;
    [GraphEdge]
    optional List<CellId> sports_sports_team_team_mascot;
    [GraphEdge]
    optional List<CellId> sports_sports_team_fight_song;
}
cell sports_sports_team_captain
{
    [GraphEdge]
    optional List<CellId> sports_sports_team_captain_team;
}
cell sports_sports_team_captain_tenure
{
    [GraphEdge]
    optional CellId sports_sports_team_captain_tenure_team;
    [GraphEdge]
    optional CellId sports_sports_team_captain_tenure_captain;
}
cell sports_sports_team_coach
{
    [GraphEdge]
    optional List<CellId> sports_sports_team_coach_teams_coached;
    [GraphEdge]
    optional List<CellId> sports_sports_team_coach_sports_coached;
}
cell sports_sports_team_coach_tenure
{
    [GraphEdge]
    optional CellId sports_sports_team_coach_tenure_coach;
    [GraphEdge]
    optional CellId sports_sports_team_coach_tenure_position;
    [GraphEdge]
    optional CellId sports_sports_team_coach_tenure_team;
}
cell sports_sports_team_location
{
    [GraphEdge]
    optional List<CellId> sports_sports_team_location_teams;
}
cell sports_sports_team_owner
{
    [GraphEdge]
    optional List<CellId> sports_sports_team_owner_teams_owned;
}
cell sports_sports_team_roster
{
    [GraphEdge]
    optional List<CellId> sports_sports_team_roster_position;
    optional byte sports_sports_team_roster_number;
    [GraphEdge]
    optional CellId sports_sports_team_roster_team;
    [GraphEdge]
    optional CellId sports_sports_team_roster_player;
}
cell sports_sports_team_season_record
{
    optional byte sports_sports_team_season_record_wins;
    [GraphEdge]
    optional CellId sports_sports_team_season_record_season;
    optional byte sports_sports_team_season_record_losses;
    [GraphEdge]
    optional CellId sports_sports_team_season_record_team;
    optional byte sports_sports_team_season_record_ties;
}
cell sports_team_rivalry
{
    optional List<u8string> sports_team_rivalry_team;
}
cell sports_team_venue_relationship
{
    [GraphEdge]
    optional CellId sports_team_venue_relationship_team;
    [GraphEdge]
    optional CellId sports_team_venue_relationship_venue;
}
cell sports_tournament_event
{
    [GraphEdge]
    optional List<CellId> sports_tournament_event_competitions;
    [GraphEdge]
    optional List<CellId> sports_tournament_event_tournaments_contested_in;
    [GraphEdge]
    optional CellId sports_tournament_event_sport;
}
cell sports_tournament_event_competition
{
    [GraphEdge]
    optional List<CellId> sports_tournament_event_competition_competitors;
    [GraphEdge]
    optional CellId sports_tournament_event_competition_event;
    [GraphEdge]
    optional CellId sports_tournament_event_competition_tournament;
}
cell sports_tournament_event_competitor
{
    [GraphEdge]
    optional List<CellId> sports_tournament_event_competitor_events_competed_in;
    [GraphEdge]
    optional List<CellId> sports_tournament_event_competitor_country;
}
cell sports_tournament_team
{
    [GraphEdge]
    optional List<CellId> sports_tournament_team_tournaments_competed_in;
}
cell symbols_armorial_grant
{
    [GraphEdge]
    optional CellId symbols_armorial_grant_armiger;
    [GraphEdge]
    optional CellId symbols_armorial_grant_granted_by;
    [GraphEdge]
    optional CellId symbols_armorial_grant_coat_of_arms;
}
cell symbols_coat_of_arms
{
    [GraphEdge]
    optional CellId symbols_coat_of_arms_helm;
    [GraphEdge]
    optional CellId symbols_coat_of_arms_variation_of_the_field;
    [GraphEdge]
    optional CellId symbols_coat_of_arms_order;
    [GraphEdge]
    optional List<CellId> symbols_coat_of_arms_marshaled_into;
    [GraphEdge]
    optional CellId symbols_coat_of_arms_mantling;
    [GraphEdge]
    optional CellId symbols_coat_of_arms_ordinaire;
    optional List<u8string> symbols_coat_of_arms_bearers;
    [GraphEdge]
    optional List<CellId> symbols_coat_of_arms_charges;
    [GraphEdge]
    optional CellId symbols_coat_of_arms_torse;
    optional u8string symbols_coat_of_arms_motto;
    [GraphEdge]
    optional List<CellId> symbols_coat_of_arms_compartments;
    [GraphEdge]
    optional List<CellId> symbols_coat_of_arms_crest;
    [GraphEdge]
    optional List<CellId> symbols_coat_of_arms_supporter;
    [GraphEdge]
    optional List<CellId> symbols_coat_of_arms_marshalled_coats_of_arms;
    [GraphEdge]
    optional CellId symbols_coat_of_arms_coronet;
}
cell symbols_coat_of_arms_bearer
{
    optional List<u8string> symbols_coat_of_arms_bearer_coat_of_arms_used;
}
cell symbols_flag
{
    [GraphEdge]
    optional List<CellId> symbols_flag_used_by;
}
cell symbols_flag_referent
{
    [GraphEdge]
    optional List<CellId> symbols_flag_referent_flag;
}
cell symbols_flag_use
{
    [GraphEdge]
    optional CellId symbols_flag_use_flag;
    [GraphEdge]
    optional CellId symbols_flag_use_flag_user;
}
cell symbols_heraldic_charge
{
    [GraphEdge]
    optional List<CellId> symbols_heraldic_charge_coat_of_arms;
}
cell symbols_heraldic_charge_color
{
    [GraphEdge]
    optional CellId symbols_heraldic_charge_color_charge;
    [GraphEdge]
    optional CellId symbols_heraldic_charge_color_coat_of_arms;
    [GraphEdge]
    optional List<CellId> symbols_heraldic_charge_color_tincture;
}
cell symbols_heraldic_compartment
{
    [GraphEdge]
    optional CellId symbols_heraldic_compartment_coat_of_arms;
}
cell symbols_heraldic_coronet
{
    [GraphEdge]
    optional CellId symbols_heraldic_coronet_noble_rank;
    [GraphEdge]
    optional CellId symbols_heraldic_coronet_coat_of_arms;
}
cell symbols_heraldic_crest
{
    [GraphEdge]
    optional List<CellId> symbols_heraldic_crest_coat_of_arms;
}
cell symbols_heraldic_helm
{
    [GraphEdge]
    optional CellId symbols_heraldic_helm_coat_of_arms;
}
cell symbols_heraldic_mantling
{
    [GraphEdge]
    optional List<CellId> symbols_heraldic_mantling_color;
    [GraphEdge]
    optional CellId symbols_heraldic_mantling_coat_of_arms;
}
cell symbols_heraldic_ordinaire
{
    [GraphEdge]
    optional CellId symbols_heraldic_ordinaire_coat_of_arms;
}
cell symbols_heraldic_ordinaire_color
{
    [GraphEdge]
    optional List<CellId> symbols_heraldic_ordinaire_color_tincture;
    [GraphEdge]
    optional CellId symbols_heraldic_ordinaire_color_coat_of_arms;
    [GraphEdge]
    optional CellId symbols_heraldic_ordinaire_color_ordinaire;
}
cell symbols_heraldic_supporter
{
    [GraphEdge]
    optional List<CellId> symbols_heraldic_supporter_coat_of_arms;
}
cell symbols_heraldic_torse
{
    [GraphEdge]
    optional CellId symbols_heraldic_torse_coat_of_arms;
    [GraphEdge]
    optional List<CellId> symbols_heraldic_torse_color;
}
cell symbols_heraldic_variation_of_the_field
{
    [GraphEdge]
    optional List<CellId> symbols_heraldic_variation_of_the_field_coat_of_arms;
}
cell symbols_heraldic_variation_of_the_field_color
{
    [GraphEdge]
    optional List<CellId> symbols_heraldic_variation_of_the_field_color_tincture;
    [GraphEdge]
    optional CellId symbols_heraldic_variation_of_the_field_color_coat_of_arms;
    [GraphEdge]
    optional CellId symbols_heraldic_variation_of_the_field_color_variation_of_the_field;
}
cell symbols_heraldry_granting_body
{
    [GraphEdge]
    optional CellId symbols_heraldry_granting_body_coats_of_arms_granted;
}
cell symbols_name_source
{
    [GraphEdge]
    optional List<CellId> symbols_name_source_namesakes;
}
cell symbols_namesake
{
    [GraphEdge]
    optional List<CellId> symbols_namesake_named_after;
}
cell tennis_tennis_grip_style
{
    [GraphEdge]
    optional List<CellId> tennis_tennis_grip_style_tennis_players;
}
cell tennis_tennis_match
{
    [GraphEdge]
    optional CellId tennis_tennis_match_match_format;
    [GraphEdge]
    optional CellId tennis_tennis_match_event;
    [GraphEdge]
    optional List<CellId> tennis_tennis_match_loser;
    optional u8string tennis_tennis_match_score;
    [GraphEdge]
    optional List<CellId> tennis_tennis_match_winner;
}
cell tennis_tennis_player
{
    [GraphEdge]
    optional List<CellId> tennis_tennis_player_matches_won;
    [GraphEdge]
    optional CellId tennis_tennis_player_tennis_grip;
    optional byte tennis_tennis_player_number_of_tennis_titles;
    [GraphEdge]
    optional List<CellId> tennis_tennis_player_matches_lost;
    [GraphEdge]
    optional CellId tennis_tennis_player_highest_singles_ranking;
    [GraphEdge]
    optional CellId tennis_tennis_player_highest_doubles_ranking;
    [GraphEdge]
    optional CellId tennis_tennis_player_career_prize_money;
    optional byte tennis_tennis_player_career_wins_doubles;
    [GraphEdge]
    optional CellId tennis_tennis_player_handed;
    optional ushort tennis_tennis_player_career_wins_singles;
    optional byte tennis_tennis_player_career_losses_doubles;
    optional ushort tennis_tennis_player_career_losses_singles;
}
cell tennis_tennis_tournament
{
    [GraphEdge]
    optional List<CellId> tennis_tennis_tournament_champions;
    [GraphEdge]
    optional List<CellId> tennis_tennis_tournament_match_results;
}
cell tennis_tennis_tournament_champion
{
    [GraphEdge]
    optional List<CellId> tennis_tennis_tournament_champion_tennis_titles;
}
cell tennis_tennis_tournament_championship
{
    [GraphEdge]
    optional CellId tennis_tennis_tournament_championship_event_type;
    [GraphEdge]
    optional List<CellId> tennis_tennis_tournament_championship_winner;
    [GraphEdge]
    optional CellId tennis_tennis_tournament_championship_tournament;
}
cell theater_musical_director
{
    [GraphEdge]
    optional List<CellId> theater_musical_director_musical_director_for;
}
cell theater_musical_soundtrack
{
    [GraphEdge]
    optional List<CellId> theater_musical_soundtrack_production;
    [GraphEdge]
    optional List<CellId> theater_musical_soundtrack_play;
}
cell theater_play
{
    [GraphEdge]
    optional List<CellId> theater_play_genre;
    [GraphEdge]
    optional List<CellId> theater_play_productions;
    [GraphEdge]
    optional CellId theater_play_playwright;
    [GraphEdge]
    optional List<CellId> theater_play_composer;
    [GraphEdge]
    optional List<CellId> theater_play_characters;
    [GraphEdge]
    optional List<CellId> theater_play_country_of_origin;
    [GraphEdge]
    optional List<CellId> theater_play_soundtracks;
    [GraphEdge]
    optional List<CellId> theater_play_lyricist;
    [GraphEdge]
    optional List<CellId> theater_play_orchestrator;
}
cell theater_theater
{
    [GraphEdge]
    optional List<CellId> theater_theater_theatrical_productions_staged_here;
    [GraphEdge]
    optional List<CellId> theater_theater_theater_production_venue_relationship;
}
cell theater_theater_actor
{
    [GraphEdge]
    optional List<CellId> theater_theater_actor_theater_roles;
}
cell theater_theater_character
{
    [GraphEdge]
    optional List<CellId> theater_theater_character_portrayed_by;
    [GraphEdge]
    optional List<CellId> theater_theater_character_plays_appears_in;
}
cell theater_theater_choreographer
{
    [GraphEdge]
    optional List<CellId> theater_theater_choreographer_plays_choreographed;
}
cell theater_theater_company
{
    [GraphEdge]
    optional List<CellId> theater_theater_company_plays_produced;
}
cell theater_theater_designer
{
    [GraphEdge]
    optional List<CellId> theater_theater_designer_plays_designed;
}
cell theater_theater_designer_gig
{
    [GraphEdge]
    optional CellId theater_theater_designer_gig_designer;
    [GraphEdge]
    optional CellId theater_theater_designer_gig_design_role;
    [GraphEdge]
    optional CellId theater_theater_designer_gig_play;
}
cell theater_theater_designer_role
{
    [GraphEdge]
    optional List<CellId> theater_theater_designer_role_designers;
}
cell theater_theater_director
{
    [GraphEdge]
    optional List<CellId> theater_theater_director_plays_directed;
}
cell theater_theater_genre
{
    [GraphEdge]
    optional List<CellId> theater_theater_genre_plays_in_this_genre;
}
cell theater_theater_producer
{
    [GraphEdge]
    optional List<CellId> theater_theater_producer_plays_produced;
}
cell theater_theater_production
{
    [GraphEdge]
    optional List<CellId> theater_theater_production_producing_company;
    [GraphEdge]
    optional List<CellId> theater_theater_production_producer;
    [GraphEdge]
    optional List<CellId> theater_theater_production_cast;
    [GraphEdge]
    optional List<CellId> theater_theater_production_theater_production_venue_relationship;
    [GraphEdge]
    optional List<CellId> theater_theater_production_play;
    [GraphEdge]
    optional List<CellId> theater_theater_production_director;
    [GraphEdge]
    optional List<CellId> theater_theater_production_soundtracks;
    [GraphEdge]
    optional CellId theater_theater_production_translation_used;
    [GraphEdge]
    optional List<CellId> theater_theater_production_performed_at;
    optional ushort theater_theater_production_number_of_performances;
    [GraphEdge]
    optional List<CellId> theater_theater_production_production_staff;
    [GraphEdge]
    optional List<CellId> theater_theater_production_designers;
    [GraphEdge]
    optional List<CellId> theater_theater_production_musical_director;
    [GraphEdge]
    optional List<CellId> theater_theater_production_choreographer;
}
cell theater_theater_production_staff
{
    [GraphEdge]
    optional List<CellId> theater_theater_production_staff_theater_productions;
}
cell theater_theater_production_staff_gig
{
    [GraphEdge]
    optional CellId theater_theater_production_staff_gig_production_role;
    [GraphEdge]
    optional CellId theater_theater_production_staff_gig_staff_member;
    [GraphEdge]
    optional CellId theater_theater_production_staff_gig_play;
}
cell theater_theater_production_staff_role
{
    [GraphEdge]
    optional List<CellId> theater_theater_production_staff_role_people_who_have_had_this_role;
}
cell theater_theater_production_venue_relationship
{
    [GraphEdge]
    optional CellId theater_theater_production_venue_relationship_theater;
    [GraphEdge]
    optional CellId theater_theater_production_venue_relationship_theater_production;
}
cell theater_theater_role
{
    [GraphEdge]
    optional CellId theater_theater_role_role;
    [GraphEdge]
    optional CellId theater_theater_role_actor;
    [GraphEdge]
    optional CellId theater_theater_role_play;
}
cell theater_theatrical_composer
{
    [GraphEdge]
    optional List<CellId> theater_theatrical_composer_plays_composed;
}
cell theater_theatrical_lyricist
{
    [GraphEdge]
    optional List<CellId> theater_theatrical_lyricist_play_lyrics_written;
}
cell theater_theatrical_orchestrator
{
    [GraphEdge]
    optional List<CellId> theater_theatrical_orchestrator_plays_orchestrated;
}
cell time_calendar
{
    [GraphEdge]
    optional List<CellId> time_calendar_months;
    [GraphEdge]
    optional List<CellId> time_calendar_days_of_year;
    [GraphEdge]
    optional List<CellId> time_calendar_days_of_week;
    [GraphEdge]
    optional List<CellId> time_calendar_month_names;
}
cell time_day_of_week
{
    optional List<byte> time_day_of_week_sequence_number;
    [GraphEdge]
    optional List<CellId> time_day_of_week_calendar_system;
}
cell time_day_of_year
{
    [GraphEdge]
    optional List<CellId> time_day_of_year_holidays;
    [GraphEdge]
    optional CellId time_day_of_year_calendar_system;
    [GraphEdge]
    optional CellId time_day_of_year_month;
    optional byte time_day_of_year_day;
}
cell time_event
{
    [GraphEdge]
    optional List<CellId> time_event_participant;
    [GraphEdge]
    optional List<CellId> time_event_locations;
    [GraphEdge]
    optional List<CellId> time_event_included_in_event;
    [GraphEdge]
    optional List<CellId> time_event_next_in_series;
    [GraphEdge]
    optional List<CellId> time_event_people_involved;
    [GraphEdge]
    optional List<CellId> time_event_includes_event;
    optional u8string time_event_comment;
    [GraphEdge]
    optional List<CellId> time_event_previous_in_series;
    [GraphEdge]
    optional CellId time_event_instance_of_recurring_event;
}
cell time_geologic_time_period
{
    [GraphEdge]
    optional CellId time_geologic_time_period_ended;
    [GraphEdge]
    optional CellId time_geologic_time_period_began;
}
cell time_geologic_time_period_uncertainty
{
    optional float time_geologic_time_period_uncertainty_million_years_ago;
    optional float time_geologic_time_period_uncertainty_x;
}
cell time_holiday
{
    [GraphEdge]
    optional List<CellId> time_holiday_type_of_holiday;
    [GraphEdge]
    optional List<CellId> time_holiday_holiday_period;
    [GraphEdge]
    optional List<CellId> time_holiday_day_of_year;
    [GraphEdge]
    optional List<CellId> time_holiday_featured_in_religions;
    optional List<u8string> time_holiday_related_event;
}
cell time_holiday_category
{
    [GraphEdge]
    optional List<CellId> time_holiday_category_holidays;
}
cell time_holiday_period
{
    [GraphEdge]
    optional List<CellId> time_holiday_period_holidays;
}
cell time_month
{
    optional byte time_month_alternative_month_number;
    [GraphEdge]
    optional List<CellId> time_month_calendar_system;
    optional List<byte> time_month_number_of_days_in_month;
    optional byte time_month_month_number;
}
cell time_participant
{
    [GraphEdge]
    optional List<CellId> time_participant_event;
}
cell time_recurring_event
{
    [GraphEdge]
    optional List<CellId> time_recurring_event_instances;
    [GraphEdge]
    optional CellId time_recurring_event_current_frequency;
}
cell time_time_zone
{
    optional float time_time_zone_offset_from_uct;
    optional u8string time_time_zone_time_zone_abbreviation_standard;
    optional List<u8string> time_time_zone_locations_in_this_time_zone;
    [GraphEdge]
    optional CellId time_time_zone_day_dst_begins;
    optional u8string time_time_zone_time_zone_name_standard;
    optional u8string time_time_zone_time_zone_abbreviation_dst;
    [GraphEdge]
    optional CellId time_time_zone_day_dst_ends;
    optional float time_time_zone_dst_offset_from_utc;
    optional u8string time_time_zone_time_zone_name_dst;
}
cell topic_server
{
    optional List<ulong> topic_server_population_number;
    optional List<u8string> topic_server_webref_cluster_members_type;
    optional List<u8string> topic_server_schemastaging_corresponding_entities_type;
}
cell transportation_bridge
{
    optional float transportation_bridge_width;
    optional float transportation_bridge_clearance_below;
    optional byte transportation_bridge_number_of_spans;
    optional float transportation_bridge_longest_span;
    [GraphEdge]
    optional List<CellId> transportation_bridge_bridge_type;
    optional float transportation_bridge_total_length;
    [GraphEdge]
    optional List<CellId> transportation_bridge_locale;
    [GraphEdge]
    optional List<CellId> transportation_bridge_body_of_water_spanned;
}
cell transportation_bridge_type
{
    [GraphEdge]
    optional List<CellId> transportation_bridge_type_bridges_of_this_type;
}
cell transportation_highway_system
{
    [GraphEdge]
    optional List<CellId> transportation_highway_system_highways;
}
cell transportation_road
{
    [GraphEdge]
    optional List<CellId> transportation_road_major_junctions;
    optional float transportation_road_length;
    [GraphEdge]
    optional List<CellId> transportation_road_end1;
    [GraphEdge]
    optional List<CellId> transportation_road_major_cities;
    [GraphEdge]
    optional List<CellId> transportation_road_end2;
    [GraphEdge]
    optional CellId transportation_road_major_junctions1;
    [GraphEdge]
    optional List<CellId> transportation_road_highway_system;
    [GraphEdge]
    optional CellId transportation_road_orientation;
}
cell transportation_road_junction
{
    [GraphEdge]
    optional CellId transportation_road_junction_road;
    [GraphEdge]
    optional CellId transportation_road_junction_at_or_near;
    [GraphEdge]
    optional CellId transportation_road_junction_road1;
}
cell transportation_road_orientation
{
    [GraphEdge]
    optional List<CellId> transportation_road_orientation_roads_with_this_orientation;
}
cell transportation_road_starting_point
{
    [GraphEdge]
    optional CellId transportation_road_starting_point_road;
    [GraphEdge]
    optional CellId transportation_road_starting_point_location;
}
cell transportation_transit_system_length
{
    optional float transportation_transit_system_length_length;
}
cell travel_accommodation
{
    [GraphEdge]
    optional CellId travel_accommodation_price_range;
    [GraphEdge]
    optional List<CellId> travel_accommodation_accommodation_type;
    [GraphEdge]
    optional List<CellId> travel_accommodation_features;
}
cell travel_accommodation_feature
{
    [GraphEdge]
    optional List<CellId> travel_accommodation_feature_accommodation_with_this_feature;
}
cell travel_accommodation_price_range
{
    [GraphEdge]
    optional List<CellId> travel_accommodation_price_range_accommodation_in_this_range;
}
cell travel_accommodation_type
{
    [GraphEdge]
    optional List<CellId> travel_accommodation_type_accommodation_of_this_type;
}
cell travel_guidebook
{
    [GraphEdge]
    optional List<CellId> travel_guidebook_travel_destinations_covered;
    [GraphEdge]
    optional CellId travel_guidebook_series;
}
cell travel_guidebook_series
{
    optional List<u8string> travel_guidebook_series_guidebooks;
}
cell travel_hotel
{
    [GraphEdge]
    optional List<CellId> travel_hotel_operating_brand;
    [GraphEdge]
    optional List<CellId> travel_hotel_drinking_establishments;
    [GraphEdge]
    optional List<CellId> travel_hotel_operated_by;
    [GraphEdge]
    optional List<CellId> travel_hotel_grade;
    [GraphEdge]
    optional List<CellId> travel_hotel_restaurants_in_hotel;
    optional ushort travel_hotel_number_of_guest_beds;
    [GraphEdge]
    optional List<CellId> travel_hotel_notable_guests;
}
cell travel_hotel_brand
{
    [GraphEdge]
    optional List<CellId> travel_hotel_brand_hotels_in_this_brand;
    [GraphEdge]
    optional List<CellId> travel_hotel_brand_owned_by;
}
cell travel_hotel_brand_owner
{
    [GraphEdge]
    optional List<CellId> travel_hotel_brand_owner_hotel_brands_owned;
}
cell travel_hotel_grade
{
    [GraphEdge]
    optional CellId travel_hotel_grade_awarded_by;
    [GraphEdge]
    optional CellId travel_hotel_grade_hotel;
    optional byte travel_hotel_grade_stars;
}
cell travel_hotel_grading_authority
{
    [GraphEdge]
    optional List<CellId> travel_hotel_grading_authority_grades_awarded;
}
cell travel_hotel_guest_visit
{
    [GraphEdge]
    optional CellId travel_hotel_guest_visit_hotel_visited;
    [GraphEdge]
    optional CellId travel_hotel_guest_visit_notable_guest;
}
cell travel_hotel_operator
{
    [GraphEdge]
    optional List<CellId> travel_hotel_operator_hotels_operated;
}
cell travel_tour_operator
{
    [GraphEdge]
    optional List<CellId> travel_tour_operator_travel_destinations;
}
cell travel_tourist_attraction
{
    [GraphEdge]
    optional List<CellId> travel_tourist_attraction_near_travel_destination;
}
cell travel_transport_operator
{
    [GraphEdge]
    optional List<CellId> travel_transport_operator_travel_destinations_served;
}
cell travel_transport_terminus
{
    [GraphEdge]
    optional List<CellId> travel_transport_terminus_travel_destinations_served;
}
cell travel_transportation
{
    [GraphEdge]
    optional CellId travel_transportation_travel_destination;
    [GraphEdge]
    optional CellId travel_transportation_mode_of_transportation;
    [GraphEdge]
    optional List<CellId> travel_transportation_transport_terminus;
    [GraphEdge]
    optional List<CellId> travel_transportation_transport_operator;
}
cell travel_travel_destination
{
    [GraphEdge]
    optional List<CellId> travel_travel_destination_local_transportation;
    [GraphEdge]
    optional List<CellId> travel_travel_destination_how_to_get_here;
    [GraphEdge]
    optional List<CellId> travel_travel_destination_accommodation;
    [GraphEdge]
    optional List<CellId> travel_travel_destination_visitor_information_site;
    [GraphEdge]
    optional List<CellId> travel_travel_destination_tourist_attractions;
    [GraphEdge]
    optional List<CellId> travel_travel_destination_guidebooks;
    [GraphEdge]
    optional List<CellId> travel_travel_destination_climate;
    [GraphEdge]
    optional List<CellId> travel_travel_destination_tour_operators;
}
cell travel_travel_destination_monthly_climate
{
    [GraphEdge]
    optional CellId travel_travel_destination_monthly_climate_travel_destination;
    optional float travel_travel_destination_monthly_climate_average_min_temp_c;
    optional byte travel_travel_destination_monthly_climate_average_rainfall_mm;
    optional float travel_travel_destination_monthly_climate_average_max_temp_c;
    [GraphEdge]
    optional CellId travel_travel_destination_monthly_climate_month;
}
cell tv_multipart_tv_episode
{
    [GraphEdge]
    optional List<CellId> tv_multipart_tv_episode_episodes;
    [GraphEdge]
    optional CellId tv_multipart_tv_episode_tv_program;
}
cell tv_non_character_role
{
    [GraphEdge]
    optional List<CellId> tv_non_character_role_tv_guest_personal_appearances;
    [GraphEdge]
    optional List<CellId> tv_non_character_role_tv_regular_personal_appearances;
    [GraphEdge]
    optional List<CellId> tv_non_character_role_episode_segment_appearances;
}
cell tv_regular_tv_appearance
{
    [GraphEdge]
    optional CellId tv_regular_tv_appearance_special_performance_type;
    [GraphEdge]
    optional List<CellId> tv_regular_tv_appearance_seasons;
    [GraphEdge]
    optional CellId tv_regular_tv_appearance_actor;
    [GraphEdge]
    optional CellId tv_regular_tv_appearance_character;
    [GraphEdge]
    optional CellId tv_regular_tv_appearance_series;
}
cell tv_sequence_of_tv_episode_segments
{
    [GraphEdge]
    optional List<CellId> tv_sequence_of_tv_episode_segments_segments;
    [GraphEdge]
    optional List<CellId> tv_sequence_of_tv_episode_segments_tv_series;
}
cell tv_special_tv_performance_type
{
    [GraphEdge]
    optional List<CellId> tv_special_tv_performance_type_starring_performances;
    [GraphEdge]
    optional List<CellId> tv_special_tv_performance_type_segment_performances;
    [GraphEdge]
    optional List<CellId> tv_special_tv_performance_type_episode_performances;
}
cell tv_the_colbert_report_episode
{
    optional List<u8string> tv_the_colbert_report_episode_the_word;
    optional List<u8string> tv_the_colbert_report_episode_intro;
    [GraphEdge]
    optional List<CellId> tv_the_colbert_report_episode_the_word_topics;
    [GraphEdge]
    optional List<CellId> tv_the_colbert_report_episode_intro_topics;
}
cell tv_tv_actor
{
    [GraphEdge]
    optional List<CellId> tv_tv_actor_starring_roles;
    [GraphEdge]
    optional List<CellId> tv_tv_actor_guest_roles;
    [GraphEdge]
    optional List<CellId> tv_tv_actor_tv_segment_performances;
}
cell tv_tv_character
{
    [GraphEdge]
    optional List<CellId> tv_tv_character_first_tv_appearance;
    optional u8string tv_tv_character_reason_for_final_tv_appearance;
    [GraphEdge]
    optional List<CellId> tv_tv_character_last_tv_appearance;
    [GraphEdge]
    optional List<CellId> tv_tv_character_appeared_in_tv_program;
    [GraphEdge]
    optional List<CellId> tv_tv_character_appeared_in_tv_episode_segments;
    [GraphEdge]
    optional List<CellId> tv_tv_character_appeared_in_tv_episodes;
}
cell tv_tv_crew_gig
{
    [GraphEdge]
    optional CellId tv_tv_crew_gig_crewmember;
    [GraphEdge]
    optional CellId tv_tv_crew_gig_episode;
    [GraphEdge]
    optional CellId tv_tv_crew_gig_tv_crew_role;
}
cell tv_tv_crew_role
{
    [GraphEdge]
    optional List<CellId> tv_tv_crew_role_tv_episodes;
}
cell tv_tv_crewmember
{
    [GraphEdge]
    optional List<CellId> tv_tv_crewmember_tv_episodes_crewed;
}
cell tv_tv_director
{
    [GraphEdge]
    optional List<CellId> tv_tv_director_tv_segments_directed;
    [GraphEdge]
    optional List<CellId> tv_tv_director_episodes_directed;
}
cell tv_tv_episode_segment
{
    [GraphEdge]
    optional List<CellId> tv_tv_episode_segment_writer;
    [GraphEdge]
    optional List<CellId> tv_tv_episode_segment_subjects;
    [GraphEdge]
    optional List<CellId> tv_tv_episode_segment_guest_personal_appearances;
    [GraphEdge]
    optional CellId tv_tv_episode_segment_sequence;
    [GraphEdge]
    optional CellId tv_tv_episode_segment_songs;
    [GraphEdge]
    optional List<CellId> tv_tv_episode_segment_episodes;
    [GraphEdge]
    optional List<CellId> tv_tv_episode_segment_performances;
    [GraphEdge]
    optional List<CellId> tv_tv_episode_segment_personal_appearances;
    [GraphEdge]
    optional CellId tv_tv_episode_segment_director;
}
cell tv_tv_episode_song_relationship
{
    [GraphEdge]
    optional List<CellId> tv_tv_episode_song_relationship_performers;
    [GraphEdge]
    optional CellId tv_tv_episode_song_relationship_song;
    [GraphEdge]
    optional CellId tv_tv_episode_song_relationship_episode;
}
cell tv_tv_genre
{
    optional List<u8string> tv_tv_genre_programs;
}
cell tv_tv_guest_personal_appearance
{
    [GraphEdge]
    optional CellId tv_tv_guest_personal_appearance_appearance_type;
    [GraphEdge]
    optional CellId tv_tv_guest_personal_appearance_episode;
    [GraphEdge]
    optional CellId tv_tv_guest_personal_appearance_person;
}
cell tv_tv_guest_role
{
    [GraphEdge]
    optional CellId tv_tv_guest_role_character;
    [GraphEdge]
    optional CellId tv_tv_guest_role_episodes_appeared_in;
    [GraphEdge]
    optional CellId tv_tv_guest_role_special_performance_type;
    [GraphEdge]
    optional CellId tv_tv_guest_role_actor;
}
cell tv_tv_location
{
    [GraphEdge]
    optional List<CellId> tv_tv_location_tv_episodes_filmed_here;
    [GraphEdge]
    optional List<CellId> tv_tv_location_tv_shows_filmed_here;
}
cell tv_tv_network
{
    optional List<u8string> tv_tv_network_affiliates;
    optional List<u8string> tv_tv_network_former_names;
    [GraphEdge]
    optional List<CellId> tv_tv_network_channels;
    [GraphEdge]
    optional List<CellId> tv_tv_network_areas_served;
    optional List<u8string> tv_tv_network_programs;
}
cell tv_tv_network_duration
{
    [GraphEdge]
    optional CellId tv_tv_network_duration_network;
    [GraphEdge]
    optional CellId tv_tv_network_duration_program;
}
cell tv_tv_personality
{
    [GraphEdge]
    optional List<CellId> tv_tv_personality_tv_segment_appearances;
    [GraphEdge]
    optional List<CellId> tv_tv_personality_tv_regular_appearances;
}
cell tv_tv_producer
{
    [GraphEdge]
    optional List<CellId> tv_tv_producer_tv_episodes_produced;
    [GraphEdge]
    optional List<CellId> tv_tv_producer_programs_produced;
}
cell tv_tv_producer_episode_credit
{
    optional u8string tv_tv_producer_episode_credit_role;
    [GraphEdge]
    optional CellId tv_tv_producer_episode_credit_producer;
    [GraphEdge]
    optional CellId tv_tv_producer_episode_credit_episode;
}
cell tv_tv_producer_term
{
    [GraphEdge]
    optional CellId tv_tv_producer_term_program;
    optional u8string tv_tv_producer_term_producer_type;
    [GraphEdge]
    optional CellId tv_tv_producer_term_producer;
}
cell tv_tv_producer_type
{
    [GraphEdge]
    optional List<CellId> tv_tv_producer_type_tv_producers_of_this_type;
    [GraphEdge]
    optional List<CellId> tv_tv_producer_type_episodes_with_this_role;
}
cell tv_tv_program
{
    optional u8string tv_tv_program_currently_in_production;
    optional List<byte> tv_tv_program_episode_running_time;
    [GraphEdge]
    optional List<CellId> tv_tv_program_soundtrack;
    optional byte tv_tv_program_number_of_episodes;
    [GraphEdge]
    optional List<CellId> tv_tv_program_program_creator;
    optional uint tv_tv_program_thetvdb_id;
    [GraphEdge]
    optional List<CellId> tv_tv_program_regular_cast;
    optional byte tv_tv_program_number_of_seasons;
    optional List<u8string> tv_tv_program_hulu_id;
    optional ushort tv_tv_program_tvrage_id;
    [GraphEdge]
    optional List<CellId> tv_tv_program_regular_personal_appearances;
    [GraphEdge]
    optional List<CellId> tv_tv_program_multipart_episodes;
    [GraphEdge]
    optional List<CellId> tv_tv_program_episodes;
    [GraphEdge]
    optional List<CellId> tv_tv_program_filming_locations;
    [GraphEdge]
    optional List<CellId> tv_tv_program_seasons;
    [GraphEdge]
    optional List<CellId> tv_tv_program_recurring_segments;
    [GraphEdge]
    optional List<CellId> tv_tv_program_tv_producer;
    [GraphEdge]
    optional List<CellId> tv_tv_program_theme_song;
    optional uint tv_tv_program_tvguide_id;
    [GraphEdge]
    optional List<CellId> tv_tv_program_recurring_writers;
    [GraphEdge]
    optional List<CellId> tv_tv_program_country_of_origin;
    [GraphEdge]
    optional List<CellId> tv_tv_program_spun_off_from;
    [GraphEdge]
    optional List<CellId> tv_tv_program_subjects;
    [GraphEdge]
    optional List<CellId> tv_tv_program_genre;
    [GraphEdge]
    optional List<CellId> tv_tv_program_languages;
    [GraphEdge]
    optional List<CellId> tv_tv_program_original_network;
    [GraphEdge]
    optional List<CellId> tv_tv_program_spin_offs;
}
cell tv_tv_program_creator
{
    [GraphEdge]
    optional List<CellId> tv_tv_program_creator_programs_created;
}
cell tv_tv_program_guest
{
    [GraphEdge]
    optional List<CellId> tv_tv_program_guest_appeared_on;
    [GraphEdge]
    optional CellId tv_tv_program_guest_segment_appearances;
}
cell tv_tv_program_writer_relationship
{
    [GraphEdge]
    optional CellId tv_tv_program_writer_relationship_tv_program;
    [GraphEdge]
    optional CellId tv_tv_program_writer_relationship_writer;
}
cell tv_tv_rating
{
    [GraphEdge]
    optional List<CellId> tv_tv_rating_tv_episodes;
    [GraphEdge]
    optional List<CellId> tv_tv_rating_tv_seasons;
    [GraphEdge]
    optional CellId tv_tv_rating_tv_rating_system;
}
cell tv_tv_rating_system
{
    [GraphEdge]
    optional CellId tv_tv_rating_system_jurisdiction;
    [GraphEdge]
    optional List<CellId> tv_tv_rating_system_tv_ratings;
}
cell tv_tv_regular_personal_appearance
{
    [GraphEdge]
    optional List<CellId> tv_tv_regular_personal_appearance_seasons;
    [GraphEdge]
    optional CellId tv_tv_regular_personal_appearance_appearance_type;
    [GraphEdge]
    optional CellId tv_tv_regular_personal_appearance_person;
    [GraphEdge]
    optional CellId tv_tv_regular_personal_appearance_program;
}
cell tv_tv_segment_guest_appearance
{
    [GraphEdge]
    optional CellId tv_tv_segment_guest_appearance_person;
    [GraphEdge]
    optional CellId tv_tv_segment_guest_appearance_segment;
}
cell tv_tv_segment_performance
{
    [GraphEdge]
    optional CellId tv_tv_segment_performance_character;
    [GraphEdge]
    optional CellId tv_tv_segment_performance_actor;
    [GraphEdge]
    optional CellId tv_tv_segment_performance_segment;
    [GraphEdge]
    optional CellId tv_tv_segment_performance_special_performance_type;
}
cell tv_tv_segment_personal_appearance
{
    [GraphEdge]
    optional CellId tv_tv_segment_personal_appearance_appearance_type;
    [GraphEdge]
    optional CellId tv_tv_segment_personal_appearance_segment;
    [GraphEdge]
    optional CellId tv_tv_segment_personal_appearance_person;
}
cell tv_tv_segment_song_relationship
{
    [GraphEdge]
    optional CellId tv_tv_segment_song_relationship_segment;
    [GraphEdge]
    optional CellId tv_tv_segment_song_relationship_song;
    [GraphEdge]
    optional List<CellId> tv_tv_segment_song_relationship_performers;
}
cell tv_tv_series_episode
{
    optional byte tv_tv_series_episode_season_number;
    [GraphEdge]
    optional List<CellId> tv_tv_series_episode_subjects;
    optional u8string tv_tv_series_episode_production_number;
    [GraphEdge]
    optional List<CellId> tv_tv_series_episode_guest_personal_appearances;
    [GraphEdge]
    optional CellId tv_tv_series_episode_part_of_multipart_episode;
    [GraphEdge]
    optional List<CellId> tv_tv_series_episode_segments;
    [GraphEdge]
    optional List<CellId> tv_tv_series_episode_other_crew;
    [GraphEdge]
    optional List<CellId> tv_tv_series_episode_songs;
    [GraphEdge]
    optional List<CellId> tv_tv_series_episode_producers;
    [GraphEdge]
    optional List<CellId> tv_tv_series_episode_filming_locations;
    [GraphEdge]
    optional List<CellId> tv_tv_series_episode_next_episode;
    optional uint tv_tv_series_episode_tvrage_id;
    [GraphEdge]
    optional CellId tv_tv_series_episode_previous_episode;
    [GraphEdge]
    optional List<CellId> tv_tv_series_episode_writer;
    [GraphEdge]
    optional CellId tv_tv_series_episode_tv_rating;
    [GraphEdge]
    optional CellId tv_tv_series_episode_series;
    [GraphEdge]
    optional List<CellId> tv_tv_series_episode_director;
    [GraphEdge]
    optional CellId tv_tv_series_episode_season;
    optional byte tv_tv_series_episode_episode_number;
    [GraphEdge]
    optional List<CellId> tv_tv_series_episode_guest_stars;
}
cell tv_tv_series_season
{
    [GraphEdge]
    optional CellId tv_tv_series_season_rating;
    [GraphEdge]
    optional List<CellId> tv_tv_series_season_episodes;
    optional byte tv_tv_series_season_season_number;
    [GraphEdge]
    optional CellId tv_tv_series_season_series;
    optional uint tv_tv_series_season_thetvdb_id;
    [GraphEdge]
    optional List<CellId> tv_tv_series_season_regular_personal_appearances;
    [GraphEdge]
    optional List<CellId> tv_tv_series_season_regular_cast;
    optional byte tv_tv_series_season_number_of_episodes;
}
cell tv_tv_song
{
    [GraphEdge]
    optional List<CellId> tv_tv_song_episodes;
    [GraphEdge]
    optional CellId tv_tv_song_episode_segments;
}
cell tv_tv_song_performer
{
    [GraphEdge]
    optional List<CellId> tv_tv_song_performer_episodes;
    [GraphEdge]
    optional List<CellId> tv_tv_song_performer_episode_segments;
}
cell tv_tv_soundtrack
{
    [GraphEdge]
    optional List<CellId> tv_tv_soundtrack_tv_program;
}
cell tv_tv_subject
{
    [GraphEdge]
    optional List<CellId> tv_tv_subject_tv_episodes;
    [GraphEdge]
    optional List<CellId> tv_tv_subject_tv_episode_segments;
    [GraphEdge]
    optional List<CellId> tv_tv_subject_tv_programs;
}
cell tv_tv_theme_song
{
    [GraphEdge]
    optional List<CellId> tv_tv_theme_song_theme_song_for;
}
cell tv_tv_writer
{
    [GraphEdge]
    optional List<CellId> tv_tv_writer_tv_programs;
    [GraphEdge]
    optional List<CellId> tv_tv_writer_tv_segments_written;
    [GraphEdge]
    optional List<CellId> tv_tv_writer_episodes_written;
}
cell tv_video
{
    [GraphEdge]
    optional CellId tv_video_video_of;
    optional float tv_video_duration;
    [GraphEdge]
    optional CellId tv_video_video_type;
    [GraphEdge]
    optional CellId tv_video_service;
}
cell tv_video_host
{
    [GraphEdge]
    optional List<CellId> tv_video_host_videos;
}
cell type_content
{
    optional uint type_content_length;
    [GraphEdge]
    optional List<CellId> type_content_source;
    optional u8string type_content_blob_id;
    [GraphEdge]
    optional CellId type_content_media_type;
    [GraphEdge]
    optional CellId type_content_text_encoding;
    [GraphEdge]
    optional List<CellId> type_content_uploaded_by;
    [GraphEdge]
    optional CellId type_content_language;
}
cell type_content_import
{
    [GraphEdge]
    optional CellId type_content_import_user;
    optional u8string type_content_import_filename;
    [GraphEdge]
    optional CellId type_content_import_content;
    optional u8string type_content_import_header_blob_id;
}
cell type_domain
{
    [GraphEdge]
    optional CellId type_domain_owners;
    [GraphEdge]
    optional List<CellId> type_domain_types;
}
cell type_extension
{
    [GraphEdge]
    optional List<CellId> type_extension_uses_keys;
    optional u8string type_extension_reduce;
    optional u8string type_extension_pre;
    optional u8string type_extension_help;
    optional List<u8string> type_extension_api_key_names;
    [GraphEdge]
    optional CellId type_extension_augments;
    optional u8string type_extension_fetch;
}
cell type_lang
{
    optional List<u8string> type_lang_iso639;
}
cell type_namespace
{
    optional u8string type_namespace_blacklisted;
    [GraphEdge]
    optional CellId type_namespace_enumerated;
    [GraphEdge]
    optional CellId type_namespace_uri_template;
    optional u8string type_namespace_unique;
}
cell type_permission
{
    [GraphEdge]
    optional List<CellId> type_permission_controls;
}
cell type_property
{
    [GraphEdge]
    optional List<CellId> type_property_expected_type;
    optional List<u8string> type_property_unique;
    [GraphEdge]
    optional CellId type_property_unit;
    [GraphEdge]
    optional List<CellId> type_property_reverse_property;
    [GraphEdge]
    optional CellId type_property_master_property;
    [GraphEdge]
    optional CellId type_property_enumeration;
    optional u8string type_property_requires_permission;
    [GraphEdge]
    optional CellId type_property_authorities;
    [GraphEdge]
    optional List<CellId> type_property_schema;
    [GraphEdge]
    optional CellId type_property_delegated;
}
cell type_type
{
    [GraphEdge]
    optional CellId type_type_domain;
    [GraphEdge]
    optional List<CellId> type_type_extends;
    [GraphEdge]
    optional List<CellId> type_type_properties;
    [GraphEdge]
    optional List<CellId> type_type_expected_by;
    optional u8string type_type_default_property;
}
cell type_user
{
    optional u8string type_user_userid;
    [GraphEdge]
    optional List<CellId> type_user_usergroup;
    [GraphEdge]
    optional CellId type_user_uploads;
}
cell type_usergroup
{
    [GraphEdge]
    optional List<CellId> type_usergroup_member;
}
cell venture_capital_investment_round
{
    [GraphEdge]
    optional List<CellId> venture_capital_investment_round_venture_investments;
}
cell venture_capital_venture_funded_company
{
    [GraphEdge]
    optional List<CellId> venture_capital_venture_funded_company_venture_investors;
    [GraphEdge]
    optional List<CellId> venture_capital_venture_funded_company_total_venture_investment_raised;
}
cell venture_capital_venture_investment
{
    [GraphEdge]
    optional CellId venture_capital_venture_investment_investment_round;
    [GraphEdge]
    optional CellId venture_capital_venture_investment_investment_amount;
    optional float venture_capital_venture_investment_amount;
    [GraphEdge]
    optional CellId venture_capital_venture_investment_company;
    [GraphEdge]
    optional CellId venture_capital_venture_investment_investor;
    [GraphEdge]
    optional CellId venture_capital_venture_investment_currency;
}
cell venture_capital_venture_investor
{
    [GraphEdge]
    optional List<CellId> venture_capital_venture_investor_investments;
}
cell visual_art_art_acquisition_method
{
    [GraphEdge]
    optional List<CellId> visual_art_art_acquisition_method_artworks_acquired_in_this_way;
}
cell visual_art_art_owner
{
    [GraphEdge]
    optional List<CellId> visual_art_art_owner_artworks_owned;
}
cell visual_art_art_period_movement
{
    [GraphEdge]
    optional List<CellId> visual_art_art_period_movement_associated_artists;
    optional List<u8string> visual_art_art_period_movement_associated_artworks;
}
cell visual_art_art_series
{
    [GraphEdge]
    optional List<CellId> visual_art_art_series_artworks;
    [GraphEdge]
    optional List<CellId> visual_art_art_series_subject;
    [GraphEdge]
    optional List<CellId> visual_art_art_series_artist;
}
cell visual_art_art_subject
{
    [GraphEdge]
    optional List<CellId> visual_art_art_subject_art_series_on_the_subject;
    [GraphEdge]
    optional List<CellId> visual_art_art_subject_artwork_on_the_subject;
}
cell visual_art_artwork
{
    [GraphEdge]
    optional List<CellId> visual_art_artwork_support;
    [GraphEdge]
    optional List<CellId> visual_art_artwork_editions;
    [GraphEdge]
    optional List<CellId> visual_art_artwork_locations;
    [GraphEdge]
    optional List<CellId> visual_art_artwork_artist;
    [GraphEdge]
    optional CellId visual_art_artwork_edition_of;
    [GraphEdge]
    optional List<CellId> visual_art_artwork_belongs_to_series;
    [GraphEdge]
    optional List<CellId> visual_art_artwork_period_or_movement;
    [GraphEdge]
    optional List<CellId> visual_art_artwork_owners;
    [GraphEdge]
    optional List<CellId> visual_art_artwork_art_form;
    [GraphEdge]
    optional List<CellId> visual_art_artwork_art_genre;
    [GraphEdge]
    optional List<CellId> visual_art_artwork_media;
    [GraphEdge]
    optional CellId visual_art_artwork_dimensions_meters;
    [GraphEdge]
    optional List<CellId> visual_art_artwork_art_subject;
}
cell visual_art_artwork_location_relationship
{
    [GraphEdge]
    optional CellId visual_art_artwork_location_relationship_location;
    [GraphEdge]
    optional CellId visual_art_artwork_location_relationship_artwork;
}
cell visual_art_artwork_owner_relationship
{
    [GraphEdge]
    optional CellId visual_art_artwork_owner_relationship_artwork;
    [GraphEdge]
    optional List<CellId> visual_art_artwork_owner_relationship_owner;
    [GraphEdge]
    optional CellId visual_art_artwork_owner_relationship_method_of_acquisition;
    optional float visual_art_artwork_owner_relationship_purchase_price;
    [GraphEdge]
    optional CellId visual_art_artwork_owner_relationship_purchase_currency;
}
cell visual_art_visual_art_form
{
    optional List<u8string> visual_art_visual_art_form_artists;
    optional List<u8string> visual_art_visual_art_form_artworks;
}
cell visual_art_visual_art_genre
{
    optional List<u8string> visual_art_visual_art_genre_artworks;
}
cell visual_art_visual_art_medium
{
    [GraphEdge]
    optional List<CellId> visual_art_visual_art_medium_artworks;
}
cell visual_art_visual_art_support
{
    optional List<u8string> visual_art_visual_art_support_artworks;
}
cell visual_art_visual_artist
{
    [GraphEdge]
    optional List<CellId> visual_art_visual_artist_artworks;
    [GraphEdge]
    optional List<CellId> visual_art_visual_artist_associated_periods_or_movements;
    [GraphEdge]
    optional List<CellId> visual_art_visual_artist_art_forms;
    [GraphEdge]
    optional List<CellId> visual_art_visual_artist_art_series;
}
cell wine_appellation
{
    [GraphEdge]
    optional List<CellId> wine_appellation_wines;
}
cell wine_fruit_source
{
    [GraphEdge]
    optional List<CellId> wine_fruit_source_wines;
}
cell wine_grape_variety
{
    [GraphEdge]
    optional List<CellId> wine_grape_variety_wines;
    [GraphEdge]
    optional List<CellId> wine_grape_variety_wine_styles;
}
cell wine_grape_variety_composition
{
    [GraphEdge]
    optional CellId wine_grape_variety_composition_wine;
    [GraphEdge]
    optional CellId wine_grape_variety_composition_grape_variety;
    optional byte wine_grape_variety_composition_percentage;
}
cell wine_vineyard
{
    [GraphEdge]
    optional List<CellId> wine_vineyard_wines;
}
cell wine_wine
{
    [GraphEdge]
    optional CellId wine_wine_wine_type;
    [GraphEdge]
    optional CellId wine_wine_wine_producer;
    [GraphEdge]
    optional CellId wine_wine_country;
    [GraphEdge]
    optional CellId wine_wine_region;
    optional float wine_wine_percentage_alcohol;
    [GraphEdge]
    optional CellId wine_wine_color;
    [GraphEdge]
    optional List<CellId> wine_wine_vineyard;
    [GraphEdge]
    optional CellId wine_wine_appellation;
    [GraphEdge]
    optional List<CellId> wine_wine_grape_variety;
    optional byte wine_wine_percent_new_oak;
    [GraphEdge]
    optional CellId wine_wine_wine_style;
    optional u8string wine_wine_nv;
    [GraphEdge]
    optional CellId wine_wine_wine_sub_region;
    [GraphEdge]
    optional CellId wine_wine_fruit_source;
}
cell wine_wine_color
{
    [GraphEdge]
    optional List<CellId> wine_wine_color_wines;
}
cell wine_wine_producer
{
    [GraphEdge]
    optional List<CellId> wine_wine_producer_wines;
}
cell wine_wine_region
{
    [GraphEdge]
    optional List<CellId> wine_wine_region_wines;
    [GraphEdge]
    optional List<CellId> wine_wine_region_wine_styles;
}
cell wine_wine_sub_region
{
    [GraphEdge]
    optional List<CellId> wine_wine_sub_region_wines;
}
cell wine_wine_type
{
    [GraphEdge]
    optional List<CellId> wine_wine_type_wines;
    [GraphEdge]
    optional List<CellId> wine_wine_type_wine_styles;
}
cell zoos_animal_captivity
{
    [GraphEdge]
    optional CellId zoos_animal_captivity_zoo;
    [GraphEdge]
    optional CellId zoos_animal_captivity_exhibit;
    [GraphEdge]
    optional CellId zoos_animal_captivity_animal;
}
cell zoos_zoo
{
    [GraphEdge]
    optional List<CellId> zoos_zoo_exhibits;
    [GraphEdge]
    optional List<CellId> zoos_zoo_notable_animals;
    [GraphEdge]
    optional List<CellId> zoos_zoo_category;
    optional ushort zoos_zoo_num_animals;
    optional ushort zoos_zoo_num_species;
    [GraphEdge]
    optional List<CellId> zoos_zoo_memberships;
}
cell zoos_zoo_animal
{
    [GraphEdge]
    optional List<CellId> zoos_zoo_animal_zoos;
}
cell zoos_zoo_category
{
    [GraphEdge]
    optional List<CellId> zoos_zoo_category_zoos;
}
cell zoos_zoo_exhibit
{
    [GraphEdge]
    optional CellId zoos_zoo_exhibit_zoo;
    [GraphEdge]
    optional List<CellId> zoos_zoo_exhibit_notable_animals;
    [GraphEdge]
    optional List<CellId> zoos_zoo_exhibit_species;
}
