// Server-side Asemetric Push to all connected GE Client Apps
// Reactive Event processing via ReactivePropety and Native HOT Observables
protocol StreamTriplesAsync
{
	Type: Asyn;
	Request: TripleStream;
	Response: ErrorCodeResponse;
}

// Client-side Post of Triple to GE TripleStore App Server
// Graph Enginer generates a TCP/RPC Handler that is executed on the Server-side
// of the Symmetric Server-side library! 
protocol PostTriplesToServer
{
	Type: Asyn;
	Request: TripleStream;
	Response: ErrorCodeResponse;
}

// Client-side Query of Triples stored on GE App TripleStore App Server
protocol GetTripleByCellId
{
	Type: Asyn;
	Request: TripleGetRequest;
	Response: ErrorCodeResponse;
}

// Client-side Query of Triples stored on GE App TripleStore App Server
protocol GetTripleSubject
{
	Type: Asyn;
	Request: TripleGetRequest;
	Response: ErrorCodeResponse;
}

// Server-side Publish to Client
protocol PushTripleToClientAsync
{
	Type: Asyn;
	Request: TriplePushDemand;
	Response: ErrorCodeResponse;
}

protocol RegisterForPushAutomation
{
	Type: Syn;
	Request: ClientRegistrationRequest;
	Response: ClientRegistrationResponse;
}

// Client-Side Request to Save Triple to MemoryCloud
protocol SaveTripleToTripleStore
{
	Type: Syn;
	Request: TripleSaveRequest;
	Response: TripleSaveResponse;
}

module TripleServer
{
	protocol StreamTriplesAsync;
	protocol PostTriplesToServer;
	protocol GetTripleByCellId;
	protocol GetTripleSubject;
	protocol PushTripleToClientAsync;
	protocol SaveTripleToTripleStore;
	protocol RegisterForPushAutomation;
}

struct RPCRequestCall
{
	int AppServerId;
	string RPC_Method_Call;
}

protocol RouteRPC_Call
{
	Type: Asyn;
	Request: RPCRequestCall;
	Response: void;
}

proxy TripleAppServerGateway
{
	protocol RouteRPC_Call;
}

// Declare Second Server Module

//protocol WriteTripleAsync
//{
//	Type: Asyn;
//	Request: Triple;
//	Response: ErrorCodeResponse;
//}

//protocol FetchTripleAsync
//{
//	Type: Asyn;
//	Request: Triple;
//	Response: ErrorCodeResponse;
//}

//module TripleStoreDemoServer
//{
//  protocol FetchTripleAsync;
//  protocol WriteTripleAsync;
//}